{
    "_wc_get_cached_product_terms": {
        "since": false,
        "group": "WooCommerce",
        "name": "_wc_get_cached_product_terms",
        "type": "fct",
        "summary": "Cached version of wp_get_post_terms().This is a private function (internal use ONLY).",
        "description": "",
        "inputs": {
            "product_id": {
                "label": "product_id",
                "type": "int",
                "requried": false,
                "description": "Product ID."
            },
            "taxonomy": {
                "label": "taxonomy",
                "type": "string",
                "requried": false,
                "description": "Taxonomy slug."
            },
            "args": {
                "label": "args",
                "type": "array",
                "requried": false,
                "description": "Query arguments."
            }
        },
        "outputs": {
            "return": {
                "label": "array",
                "type": "array"
            }
        },
        "rank": 1,
        "return_description": "array"
    },
    "_wc_get_product_terms_name_num_usort_callback": {
        "since": false,
        "group": "WooCommerce",
        "name": "_wc_get_product_terms_name_num_usort_callback",
        "type": "fct",
        "summary": "Sort by name (numeric).",
        "description": "",
        "inputs": {
            "a": {
                "label": "a",
                "type": "mixed",
                "requried": false,
                "description": "First item to compare."
            },
            "b": {
                "label": "b",
                "type": "mixed",
                "requried": false,
                "description": "Second item to compare."
            }
        },
        "outputs": {
            "return": {
                "label": "int",
                "type": "int"
            }
        },
        "rank": 1,
        "return_description": "int"
    },
    "_wc_get_product_terms_parent_usort_callback": {
        "since": false,
        "group": "WooCommerce",
        "name": "_wc_get_product_terms_parent_usort_callback",
        "type": "fct",
        "summary": "Sort by parent.",
        "description": "",
        "inputs": {
            "a": {
                "label": "a",
                "type": "mixed",
                "requried": false,
                "description": "First item to compare."
            },
            "b": {
                "label": "b",
                "type": "mixed",
                "requried": false,
                "description": "Second item to compare."
            }
        },
        "outputs": {
            "return": {
                "label": "int",
                "type": "int"
            }
        },
        "rank": 1,
        "return_description": "int"
    },
    "_wc_term_recount": {
        "since": false,
        "group": "WooCommerce",
        "name": "_wc_term_recount",
        "type": "efct",
        "summary": "Function for recounting product terms, ignoring hidden products.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "terms": {
                "label": "terms",
                "type": "array",
                "requried": false,
                "description": "List of terms."
            },
            "taxonomy": {
                "label": "taxonomy",
                "type": "object",
                "requried": false,
                "description": "Taxonomy."
            },
            "callback": {
                "label": "callback",
                "type": "bool",
                "requried": false,
                "description": "Callback."
            },
            "terms_are_term_taxonomy_ids": {
                "label": "terms_are_term_taxonomy_ids",
                "type": "bool",
                "requried": false,
                "description": "If terms are from term_taxonomy_id column."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "flush_rewrite_rules_on_shop_page_save": {
        "since": false,
        "group": "WooCommerce",
        "name": "flush_rewrite_rules_on_shop_page_save",
        "type": "efct",
        "summary": "Flushes rewrite rules when the shop page (or it's children) gets saved.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "get_product_search_form": {
        "since": false,
        "group": "WooCommerce",
        "name": "get_product_search_form",
        "type": "fct",
        "summary": "Display product search form.Will first attempt to locate the product-searchform.php file in either the child or.the parent, then load it. If it doesn't exist, then the default search form.will be displayed.The default searchform uses html5.",
        "description": "",
        "inputs": {
            "echo": {
                "label": "echo",
                "type": "bool",
                "requried": false,
                "description": "(default: true)."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "get_woocommerce_api_url": {
        "since": false,
        "group": "WooCommerce",
        "name": "get_woocommerce_api_url",
        "type": "fct",
        "summary": "Get the URL to the WooCommerce REST API.",
        "description": "",
        "inputs": {
            "path": {
                "label": "path",
                "type": "string",
                "requried": false,
                "description": "an endpoint to include in the URL."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "the URL."
    },
    "get_woocommerce_currencies": {
        "since": false,
        "group": "WooCommerce",
        "name": "get_woocommerce_currencies",
        "type": "fct",
        "summary": "Get full list of currency codes.",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "array",
                "type": "array"
            }
        },
        "rank": 1,
        "return_description": "array"
    },
    "get_woocommerce_currency": {
        "since": false,
        "group": "WooCommerce",
        "name": "get_woocommerce_currency",
        "type": "fct",
        "summary": "Get Base Currency Code.",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "get_woocommerce_currency_symbol": {
        "since": false,
        "group": "WooCommerce",
        "name": "get_woocommerce_currency_symbol",
        "type": "fct",
        "summary": "Get Currency symbol.",
        "description": "",
        "inputs": {
            "currency": {
                "label": "currency",
                "type": "string",
                "requried": false,
                "description": "Currency. (default: '')."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "get_woocommerce_price_format": {
        "since": false,
        "group": "WooCommerce",
        "name": "get_woocommerce_price_format",
        "type": "fct",
        "summary": "Get the price format depending on the currency position.",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "hash_equals": {
        "since": false,
        "group": "WooCommerce",
        "name": "hash_equals",
        "type": "fct",
        "summary": "Compare two strings in constant time.This function was added in PHP 5.6.It can leak the length of a string.",
        "description": "",
        "inputs": {
            "a": {
                "label": "a",
                "type": "string",
                "requried": false,
                "description": "Expected string."
            },
            "b": {
                "label": "b",
                "type": "string",
                "requried": false,
                "description": "Actual string."
            }
        },
        "outputs": {
            "return": {
                "label": "bool",
                "type": "bool"
            }
        },
        "rank": 1,
        "return_description": "Whether strings are equal."
    },
    "is_account_page": {
        "since": false,
        "group": "WooCommerce",
        "name": "is_account_page",
        "type": "fct",
        "summary": "Is_account_page - Returns true when viewing an account page.",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "bool",
                "type": "bool"
            }
        },
        "rank": 1,
        "return_description": "bool"
    },
    "is_add_payment_method_page": {
        "since": false,
        "group": "WooCommerce",
        "name": "is_add_payment_method_page",
        "type": "fct",
        "summary": "Is_add_payment_method_page - Returns true when viewing the add payment method page.",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "bool",
                "type": "bool"
            }
        },
        "rank": 1,
        "return_description": "bool"
    },
    "is_ajax": {
        "since": false,
        "group": "WooCommerce",
        "name": "is_ajax",
        "type": "fct",
        "summary": "Is_ajax - Returns true when the page is loaded via ajax.",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "bool",
                "type": "bool"
            }
        },
        "rank": 1,
        "return_description": "bool"
    },
    "is_cart": {
        "since": false,
        "group": "WooCommerce",
        "name": "is_cart",
        "type": "fct",
        "summary": "Is_cart - Returns true when viewing the cart page.",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "bool",
                "type": "bool"
            }
        },
        "rank": 1,
        "return_description": "bool"
    },
    "is_checkout": {
        "since": false,
        "group": "WooCommerce",
        "name": "is_checkout",
        "type": "fct",
        "summary": "Is_checkout - Returns true when viewing the checkout page.",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "bool",
                "type": "bool"
            }
        },
        "rank": 1,
        "return_description": "bool"
    },
    "is_checkout_pay_page": {
        "since": false,
        "group": "WooCommerce",
        "name": "is_checkout_pay_page",
        "type": "fct",
        "summary": "Is_checkout_pay - Returns true when viewing the checkout's pay page.",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "bool",
                "type": "bool"
            }
        },
        "rank": 1,
        "return_description": "bool"
    },
    "is_edit_account_page": {
        "since": false,
        "group": "WooCommerce",
        "name": "is_edit_account_page",
        "type": "fct",
        "summary": "Check for edit account page.Returns true when viewing the edit account page.",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "bool",
                "type": "bool"
            }
        },
        "rank": 1,
        "return_description": "bool"
    },
    "is_filtered": {
        "since": false,
        "group": "WooCommerce",
        "name": "is_filtered",
        "type": "fct",
        "summary": "Is_filtered - Returns true when filtering products using layered nav or price sliders.",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "bool",
                "type": "bool"
            }
        },
        "rank": 1,
        "return_description": "bool"
    },
    "is_lost_password_page": {
        "since": false,
        "group": "WooCommerce",
        "name": "is_lost_password_page",
        "type": "fct",
        "summary": "Is_lost_password_page - Returns true when viewing the lost password page.",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "bool",
                "type": "bool"
            }
        },
        "rank": 1,
        "return_description": "bool"
    },
    "is_order_received_page": {
        "since": false,
        "group": "WooCommerce",
        "name": "is_order_received_page",
        "type": "fct",
        "summary": "Is_order_received_page - Returns true when viewing the order received page.",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "bool",
                "type": "bool"
            }
        },
        "rank": 1,
        "return_description": "bool"
    },
    "is_product": {
        "since": false,
        "group": "WooCommerce",
        "name": "is_product",
        "type": "fct",
        "summary": "Is_product - Returns true when viewing a single product.",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "bool",
                "type": "bool"
            }
        },
        "rank": 1,
        "return_description": "bool"
    },
    "is_product_category": {
        "since": false,
        "group": "WooCommerce",
        "name": "is_product_category",
        "type": "fct",
        "summary": "Is_product_category - Returns true when viewing a product category.",
        "description": "",
        "inputs": {
            "term": {
                "label": "term",
                "type": "string",
                "requried": false,
                "description": "(default: '') The term slug your checking for. Leave blank to return true on any."
            }
        },
        "outputs": {
            "return": {
                "label": "bool",
                "type": "bool"
            }
        },
        "rank": 1,
        "return_description": "bool"
    },
    "is_product_tag": {
        "since": false,
        "group": "WooCommerce",
        "name": "is_product_tag",
        "type": "fct",
        "summary": "Is_product_tag - Returns true when viewing a product tag.",
        "description": "",
        "inputs": {
            "term": {
                "label": "term",
                "type": "string",
                "requried": false,
                "description": "(default: '') The term slug your checking for. Leave blank to return true on any."
            }
        },
        "outputs": {
            "return": {
                "label": "bool",
                "type": "bool"
            }
        },
        "rank": 1,
        "return_description": "bool"
    },
    "is_product_taxonomy": {
        "since": false,
        "group": "WooCommerce",
        "name": "is_product_taxonomy",
        "type": "fct",
        "summary": "Is_product_taxonomy - Returns true when viewing a product taxonomy archive.",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "bool",
                "type": "bool"
            }
        },
        "rank": 1,
        "return_description": "bool"
    },
    "is_shop": {
        "since": false,
        "group": "WooCommerce",
        "name": "is_shop",
        "type": "fct",
        "summary": "Is_shop - Returns true when viewing the product type archive (shop).",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "bool",
                "type": "bool"
            }
        },
        "rank": 1,
        "return_description": "bool"
    },
    "is_store_notice_showing": {
        "since": false,
        "group": "WooCommerce",
        "name": "is_store_notice_showing",
        "type": "fct",
        "summary": "Is_store_notice_showing - Returns true when store notice is active.",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "bool",
                "type": "bool"
            }
        },
        "rank": 1,
        "return_description": "bool"
    },
    "is_view_order_page": {
        "since": false,
        "group": "WooCommerce",
        "name": "is_view_order_page",
        "type": "fct",
        "summary": "Is_view_order_page - Returns true when on the view order page.",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "bool",
                "type": "bool"
            }
        },
        "rank": 1,
        "return_description": "bool"
    },
    "is_wc_endpoint_url": {
        "since": false,
        "group": "WooCommerce",
        "name": "is_wc_endpoint_url",
        "type": "fct",
        "summary": "Is_wc_endpoint_url - Check if an endpoint is showing.",
        "description": "",
        "inputs": {
            "endpoint": {
                "label": "endpoint",
                "type": "mixed",
                "requried": false,
                "description": "Whether endpoint."
            }
        },
        "outputs": {
            "return": {
                "label": "bool",
                "type": "bool"
            }
        },
        "rank": 1,
        "return_description": "bool"
    },
    "is_woocommerce": {
        "since": false,
        "group": "WooCommerce",
        "name": "is_woocommerce",
        "type": "fct",
        "summary": "Is_woocommerce - Returns true if on a page which uses WooCommerce templates (cart and checkout are standard pages with shortcodes and thus are not included).",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "bool",
                "type": "bool"
            }
        },
        "rank": 1,
        "return_description": "bool"
    },
    "meta_is_product_attribute": {
        "since": false,
        "group": "WooCommerce",
        "name": "meta_is_product_attribute",
        "type": "fct",
        "summary": "Returns true when the passed meta name is a product attribute.",
        "description": "",
        "inputs": {
            "name": {
                "label": "name",
                "type": "string",
                "requried": false,
                "description": "of the attribute."
            },
            "value": {
                "label": "value",
                "type": "string",
                "requried": false,
                "description": "of the attribute."
            },
            "product_id": {
                "label": "product_id",
                "type": "int",
                "requried": false,
                "description": "to check for attribute."
            }
        },
        "outputs": {
            "return": {
                "label": "bool",
                "type": "bool"
            }
        },
        "rank": 1,
        "return_description": "bool"
    },
    "taxonomy_is_product_attribute": {
        "since": false,
        "group": "WooCommerce",
        "name": "taxonomy_is_product_attribute",
        "type": "fct",
        "summary": "Returns true when the passed taxonomy name is a product attribute.",
        "description": "",
        "inputs": {
            "name": {
                "label": "name",
                "type": "string",
                "requried": false,
                "description": "of the attribute."
            }
        },
        "outputs": {
            "return": {
                "label": "bool",
                "type": "bool"
            }
        },
        "rank": 1,
        "return_description": "bool"
    },
    "wc_add_notice": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_add_notice",
        "type": "efct",
        "summary": "Add and store a notice.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "message": {
                "label": "message",
                "type": "string",
                "requried": false,
                "description": "The text to display in the notice."
            },
            "notice_type": {
                "label": "notice_type",
                "type": "string",
                "requried": false,
                "description": "Optional. The name of the notice type - either error, success or notice."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_add_number_precision": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_add_number_precision",
        "type": "fct",
        "summary": "Add precision to a number and return a number.",
        "description": "",
        "inputs": {
            "value": {
                "label": "value",
                "type": "float",
                "requried": false,
                "description": "Number to add precision to."
            },
            "round": {
                "label": "round",
                "type": "bool",
                "requried": false,
                "description": "If should round after adding precision."
            }
        },
        "outputs": {
            "return": {
                "label": "mixed",
                "type": "mixed"
            }
        },
        "rank": 1,
        "return_description": "int|float"
    },
    "wc_add_number_precision_deep": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_add_number_precision_deep",
        "type": "fct",
        "summary": "Add precision to an array of number and return an array of int.",
        "description": "",
        "inputs": {
            "value": {
                "label": "value",
                "type": "array",
                "requried": false,
                "description": "Number to add precision to."
            },
            "round": {
                "label": "round",
                "type": "bool",
                "requried": false,
                "description": "Should we round after adding precision?."
            }
        },
        "outputs": {
            "return": {
                "label": "mixed",
                "type": "mixed"
            }
        },
        "rank": 1,
        "return_description": "int|array"
    },
    "wc_add_order_item": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_add_order_item",
        "type": "efct",
        "summary": "Add a item to an order (for example a line item).",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "order_id": {
                "label": "order_id",
                "type": "int",
                "requried": false,
                "description": "Order ID."
            },
            "item_array": {
                "label": "item_array",
                "type": "array",
                "requried": false,
                "description": "Items list."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            },
            "return": {
                "label": "mixed",
                "type": "mixed"
            }
        },
        "rank": 1,
        "return_description": "Item ID or false"
    },
    "wc_add_order_item_meta": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_add_order_item_meta",
        "type": "efct",
        "summary": "WooCommerce Order Item Meta API - Add term meta.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "item_id": {
                "label": "item_id",
                "type": "int",
                "requried": false,
                "description": "Item ID."
            },
            "meta_key": {
                "label": "meta_key",
                "type": "string",
                "requried": false,
                "description": "Meta key."
            },
            "meta_value": {
                "label": "meta_value",
                "type": "string",
                "requried": false,
                "description": "Meta value."
            },
            "unique": {
                "label": "unique",
                "type": "bool",
                "requried": false,
                "description": "If meta data should be unique (default: false)."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            },
            "return": {
                "label": "int",
                "type": "int"
            }
        },
        "rank": 1,
        "return_description": "New row ID or 0."
    },
    "wc_add_to_cart_message": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_add_to_cart_message",
        "type": "efct",
        "summary": "Add to cart messages.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "products": {
                "label": "products",
                "type": "mixed",
                "requried": false,
                "description": "Product ID list or single product ID."
            },
            "show_qty": {
                "label": "show_qty",
                "type": "bool",
                "requried": false,
                "description": "Should qty's be shown? Added in 2.6.0."
            },
            "return": {
                "label": "return",
                "type": "bool",
                "requried": false,
                "description": "Return message rather than add it."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            },
            "return": {
                "label": "mixed",
                "type": "mixed"
            }
        },
        "rank": 1,
        "return_description": "mixed"
    },
    "wc_add_wp_error_notices": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_add_wp_error_notices",
        "type": "efct",
        "summary": "Add notices for WP Errors.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "errors": {
                "label": "errors",
                "type": "mixed",
                "requried": false,
                "description": "Errors."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_api_hash": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_api_hash",
        "type": "fct",
        "summary": "WC API - Hash.",
        "description": "",
        "inputs": {
            "data": {
                "label": "data",
                "type": "string",
                "requried": false,
                "description": "Message to be hashed."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_array_cartesian": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_array_cartesian",
        "type": "fct",
        "summary": "Find all possible combinations of values from the input array and return in a logical order.",
        "description": "",
        "inputs": {
            "input": {
                "label": "input",
                "type": "array",
                "requried": false,
                "description": "Input."
            }
        },
        "outputs": {
            "return": {
                "label": "array",
                "type": "array"
            }
        },
        "rank": 1,
        "return_description": "array"
    },
    "wc_array_filter_default_attributes": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_array_filter_default_attributes",
        "type": "fct",
        "summary": "Callback for array filter to get default attributes.  Will allow for '0' string values, but regard all otherclass PHP FALSE equivalents normally.",
        "description": "",
        "inputs": {
            "attribute": {
                "label": "attribute",
                "type": "mixed",
                "requried": false,
                "description": "Attribute being considered for exclusion from parent array."
            }
        },
        "outputs": {
            "return": {
                "label": "bool",
                "type": "bool"
            }
        },
        "rank": 1,
        "return_description": "bool"
    },
    "wc_array_merge_recursive_numeric": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_array_merge_recursive_numeric",
        "type": "fct",
        "summary": "Array merge and sum function.Source:  https:\/\/gist.github.com\/Nickology\/f700e319cbafab5eaedc",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "array",
                "type": "array"
            }
        },
        "rank": 1,
        "return_description": "array"
    },
    "wc_array_overlay": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_array_overlay",
        "type": "fct",
        "summary": "Merge two arrays.",
        "description": "",
        "inputs": {
            "a1": {
                "label": "a1",
                "type": "array",
                "requried": false,
                "description": "First array to merge."
            },
            "a2": {
                "label": "a2",
                "type": "array",
                "requried": false,
                "description": "Second array to merge."
            }
        },
        "outputs": {
            "return": {
                "label": "array",
                "type": "array"
            }
        },
        "rank": 1,
        "return_description": "array"
    },
    "wc_ascii_uasort_comparison": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_ascii_uasort_comparison",
        "type": "fct",
        "summary": "Sort values based on ascii, usefull for special chars in strings.",
        "description": "",
        "inputs": {
            "a": {
                "label": "a",
                "type": "string",
                "requried": false,
                "description": "First value."
            },
            "b": {
                "label": "b",
                "type": "string",
                "requried": false,
                "description": "Second value."
            }
        },
        "outputs": {
            "return": {
                "label": "int",
                "type": "int"
            }
        },
        "rank": 1,
        "return_description": "int"
    },
    "wc_attribute_label": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_attribute_label",
        "type": "fct",
        "summary": "Get a product attributes label.",
        "description": "",
        "inputs": {
            "name": {
                "label": "name",
                "type": "string",
                "requried": false,
                "description": "Attribute name."
            },
            "product": {
                "label": "product",
                "type": "mixed",
                "requried": false,
                "description": "Product data."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_attribute_orderby": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_attribute_orderby",
        "type": "fct",
        "summary": "Get a product attributes orderby setting.",
        "description": "",
        "inputs": {
            "name": {
                "label": "name",
                "type": "string",
                "requried": false,
                "description": "Attribute name."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_attribute_taxonomy_id_by_name": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_attribute_taxonomy_id_by_name",
        "type": "fct",
        "summary": "Get a product attribute ID by name.",
        "description": "",
        "inputs": {
            "name": {
                "label": "name",
                "type": "string",
                "requried": false,
                "description": "Attribute name."
            }
        },
        "outputs": {
            "return": {
                "label": "int",
                "type": "int"
            }
        },
        "rank": 1,
        "return_description": "int"
    },
    "wc_attribute_taxonomy_name": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_attribute_taxonomy_name",
        "type": "fct",
        "summary": "Get a product attribute name.",
        "description": "",
        "inputs": {
            "attribute_name": {
                "label": "attribute_name",
                "type": "string",
                "requried": false,
                "description": "Attribute name."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_attribute_taxonomy_name_by_id": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_attribute_taxonomy_name_by_id",
        "type": "fct",
        "summary": "Get a product attribute name by ID.",
        "description": "",
        "inputs": {
            "attribute_id": {
                "label": "attribute_id",
                "type": "int",
                "requried": false,
                "description": "Attribute ID."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "Return an empty string if attribute doesn't exist."
    },
    "wc_attribute_taxonomy_slug": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_attribute_taxonomy_slug",
        "type": "fct",
        "summary": "Get an unprefixed product attribute name.",
        "description": "",
        "inputs": {
            "attribute_name": {
                "label": "attribute_name",
                "type": "string",
                "requried": false,
                "description": "Attribute name."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_attributes_array_filter_variation": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_attributes_array_filter_variation",
        "type": "fct",
        "summary": "Callback for array filter to get variation attributes only.",
        "description": "",
        "inputs": {
            "attribute": {
                "label": "attribute",
                "type": "mixed",
                "requried": false,
                "description": "Attribute data."
            }
        },
        "outputs": {
            "return": {
                "label": "bool",
                "type": "bool"
            }
        },
        "rank": 1,
        "return_description": "bool"
    },
    "wc_attributes_array_filter_visible": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_attributes_array_filter_visible",
        "type": "fct",
        "summary": "Callback for array filter to get visible only.",
        "description": "",
        "inputs": {
            "attribute": {
                "label": "attribute",
                "type": "mixed",
                "requried": false,
                "description": "Attribute data."
            }
        },
        "outputs": {
            "return": {
                "label": "bool",
                "type": "bool"
            }
        },
        "rank": 1,
        "return_description": "bool"
    },
    "wc_back_link": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_back_link",
        "type": "efct",
        "summary": "Outputs a \"back\" link so admin screens can easily jump back a page.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "label": {
                "label": "label",
                "type": "string",
                "requried": false,
                "description": "Title of the page to return to."
            },
            "url": {
                "label": "url",
                "type": "string",
                "requried": false,
                "description": "URL of the page to return to."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_body_class": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_body_class",
        "type": "efct",
        "summary": "Add body classes for WC pages.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "classes": {
                "label": "classes",
                "type": "array",
                "requried": false,
                "description": "Body Classes."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            },
            "return": {
                "label": "array",
                "type": "array"
            }
        },
        "rank": 1,
        "return_description": "array"
    },
    "wc_bool_to_string": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_bool_to_string",
        "type": "fct",
        "summary": "Converts a bool to a 'yes' or 'no'.",
        "description": "",
        "inputs": {
            "bool": {
                "label": "bool",
                "type": "bool",
                "requried": false,
                "description": "String to convert."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_cancel_unpaid_orders": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_cancel_unpaid_orders",
        "type": "efct",
        "summary": "Cancel all unpaid orders after held duration to prevent stock lock for those products.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_cart_round_discount": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_cart_round_discount",
        "type": "fct",
        "summary": "Round discount.",
        "description": "",
        "inputs": {
            "value": {
                "label": "value",
                "type": "float",
                "requried": false,
                "description": "Amount to round."
            },
            "precision": {
                "label": "precision",
                "type": "int",
                "requried": false,
                "description": "DP to round."
            }
        },
        "outputs": {
            "return": {
                "label": "float",
                "type": "float"
            }
        },
        "rank": 1,
        "return_description": "float"
    },
    "wc_cart_totals_coupon_html": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_cart_totals_coupon_html",
        "type": "efct",
        "summary": "Get coupon display HTML.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "coupon": {
                "label": "coupon",
                "type": "mixed",
                "requried": false,
                "description": "Coupon data or code."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_cart_totals_coupon_label": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_cart_totals_coupon_label",
        "type": "fct",
        "summary": "Get a coupon label.",
        "description": "",
        "inputs": {
            "coupon": {
                "label": "coupon",
                "type": "mixed",
                "requried": false,
                "description": "Coupon data or code."
            },
            "echo": {
                "label": "echo",
                "type": "bool",
                "requried": false,
                "description": "Echo or return."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_cart_totals_fee_html": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_cart_totals_fee_html",
        "type": "efct",
        "summary": "Get the fee value.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "fee": {
                "label": "fee",
                "type": "object",
                "requried": false,
                "description": "Fee data."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_cart_totals_order_total_html": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_cart_totals_order_total_html",
        "type": "efct",
        "summary": "Get order total html including inc tax if needed.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_cart_totals_shipping_html": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_cart_totals_shipping_html",
        "type": "efct",
        "summary": "Get shipping methods.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_cart_totals_shipping_method_label": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_cart_totals_shipping_method_label",
        "type": "fct",
        "summary": "Get a shipping methods full label including price.",
        "description": "",
        "inputs": {
            "method": {
                "label": "method",
                "type": "mixed",
                "requried": false,
                "description": "Shipping method rate data."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_cart_totals_subtotal_html": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_cart_totals_subtotal_html",
        "type": "efct",
        "summary": "Get the subtotal.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_cart_totals_taxes_total_html": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_cart_totals_taxes_total_html",
        "type": "efct",
        "summary": "Get taxes total.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_caught_exception": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_caught_exception",
        "type": "efct",
        "summary": "When catching an exception, this allows us to log it if unexpected.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "exception_object": {
                "label": "exception_object",
                "type": "mixed",
                "requried": false,
                "description": "The exception object."
            },
            "function": {
                "label": "function",
                "type": "string",
                "requried": false,
                "description": "The function which threw exception."
            },
            "args": {
                "label": "args",
                "type": "array",
                "requried": false,
                "description": "The args passed to the function."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_change_get_terms_defaults": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_change_get_terms_defaults",
        "type": "fct",
        "summary": "Change get terms defaults for attributes to order by the sorting setting, or default to menu_order for sortable taxonomies.",
        "description": "",
        "inputs": {
            "defaults": {
                "label": "defaults",
                "type": "array",
                "requried": false,
                "description": "An array of default get_terms() arguments."
            },
            "taxonomies": {
                "label": "taxonomies",
                "type": "array",
                "requried": false,
                "description": "An array of taxonomies."
            }
        },
        "outputs": {
            "return": {
                "label": "array",
                "type": "array"
            }
        },
        "rank": 1,
        "return_description": "array"
    },
    "wc_change_pre_get_terms": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_change_pre_get_terms",
        "type": "efct",
        "summary": "Adds support to get_terms for menu_order argument.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "terms_query": {
                "label": "terms_query",
                "type": "mixed",
                "requried": false,
                "description": "Instance of WP_Term_Query."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_change_term_counts": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_change_term_counts",
        "type": "fct",
        "summary": "Overrides the original term count for product categories and tags with the product count.that takes catalog visibility into account.",
        "description": "",
        "inputs": {
            "terms": {
                "label": "terms",
                "type": "array",
                "requried": false,
                "description": "List of terms."
            },
            "taxonomies": {
                "label": "taxonomies",
                "type": "mixed",
                "requried": false,
                "description": "Single taxonomy or list of taxonomies."
            }
        },
        "outputs": {
            "return": {
                "label": "array",
                "type": "array"
            }
        },
        "rank": 1,
        "return_description": "array"
    },
    "wc_check_if_attribute_name_is_reserved": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_check_if_attribute_name_is_reserved",
        "type": "fct",
        "summary": "Check if attribute name is reserved.https:\/\/codex.wordpress.org\/Function_Reference\/register_taxonomy#Reserved_Terms.",
        "description": "",
        "inputs": {
            "attribute_name": {
                "label": "attribute_name",
                "type": "string",
                "requried": false,
                "description": "Attribute name."
            }
        },
        "outputs": {
            "return": {
                "label": "bool",
                "type": "bool"
            }
        },
        "rank": 1,
        "return_description": "bool"
    },
    "wc_check_invalid_utf8": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_check_invalid_utf8",
        "type": "fct",
        "summary": "Function wp_check_invalid_utf8 with recursive array support.",
        "description": "",
        "inputs": {
            "var": {
                "label": "var",
                "type": "mixed",
                "requried": false,
                "description": "Data to sanitize."
            }
        },
        "outputs": {
            "return": {
                "label": "mixed",
                "type": "mixed"
            }
        },
        "rank": 1,
        "return_description": "string|array"
    },
    "wc_checkout_fields_uasort_comparison": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_checkout_fields_uasort_comparison",
        "type": "fct",
        "summary": "User to sort checkout fields based on priority with uasort.",
        "description": "",
        "inputs": {
            "a": {
                "label": "a",
                "type": "array",
                "requried": false,
                "description": "First field to compare."
            },
            "b": {
                "label": "b",
                "type": "array",
                "requried": false,
                "description": "Second field to compare."
            }
        },
        "outputs": {
            "return": {
                "label": "int",
                "type": "int"
            }
        },
        "rank": 1,
        "return_description": "int"
    },
    "wc_checkout_is_https": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_checkout_is_https",
        "type": "fct",
        "summary": "Check if the checkout is configured for https. Look at options, WP HTTPS plugin, or the permalink itself.",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "bool",
                "type": "bool"
            }
        },
        "rank": 1,
        "return_description": "bool"
    },
    "wc_checkout_privacy_policy_text": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_checkout_privacy_policy_text",
        "type": "efct",
        "summary": "Render privacy policy text on the checkout.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_clean": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_clean",
        "type": "fct",
        "summary": "Clean variables using sanitize_text_field. Arrays are cleaned recursively.Non-scalar values are ignored.",
        "description": "",
        "inputs": {
            "var": {
                "label": "var",
                "type": "mixed",
                "requried": false,
                "description": "Data to sanitize."
            }
        },
        "outputs": {
            "return": {
                "label": "mixed",
                "type": "mixed"
            }
        },
        "rank": 1,
        "return_description": "string|array"
    },
    "wc_cleanup_logs": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_cleanup_logs",
        "type": "efct",
        "summary": "Trigger logging cleanup using the logging class.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_cleanup_session_data": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_cleanup_session_data",
        "type": "efct",
        "summary": "Cleans up session data - cron callback.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_clear_cart_after_payment": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_clear_cart_after_payment",
        "type": "efct",
        "summary": "Clear cart after payment.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_clear_notices": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_clear_notices",
        "type": "efct",
        "summary": "Unset all notices.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_clear_term_product_ids": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_clear_term_product_ids",
        "type": "efct",
        "summary": "When a post is updated and terms recounted (called by _update_post_term_count), clear the ids.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "object_id": {
                "label": "object_id",
                "type": "int",
                "requried": false,
                "description": "Object ID."
            },
            "terms": {
                "label": "terms",
                "type": "array",
                "requried": false,
                "description": "An array of object terms."
            },
            "tt_ids": {
                "label": "tt_ids",
                "type": "array",
                "requried": false,
                "description": "An array of term taxonomy IDs."
            },
            "taxonomy": {
                "label": "taxonomy",
                "type": "string",
                "requried": false,
                "description": "Taxonomy slug."
            },
            "append": {
                "label": "append",
                "type": "bool",
                "requried": false,
                "description": "Whether to append new terms to the old terms."
            },
            "old_tt_ids": {
                "label": "old_tt_ids",
                "type": "array",
                "requried": false,
                "description": "Old array of term taxonomy IDs."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_coupons_enabled": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_coupons_enabled",
        "type": "fct",
        "summary": "Check if coupons are enabled.Filterable.",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "bool",
                "type": "bool"
            }
        },
        "rank": 1,
        "return_description": "bool"
    },
    "wc_create_attribute": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_create_attribute",
        "type": "fct",
        "summary": "Create attribute.",
        "description": "",
        "inputs": {
            "args": {
                "label": "args",
                "type": "array",
                "requried": false,
                "description": "<p>Attribute arguments {\n    Array of attribute parameters.<\/p>"
            }
        },
        "outputs": {
            "return": {
                "label": "mixed",
                "type": "mixed"
            }
        },
        "rank": 1,
        "return_description": "int|WP_Error"
    },
    "wc_create_new_customer": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_create_new_customer",
        "type": "fct",
        "summary": "Create a new customer.",
        "description": "",
        "inputs": {
            "email": {
                "label": "email",
                "type": "string",
                "requried": false,
                "description": "Customer email."
            },
            "username": {
                "label": "username",
                "type": "string",
                "requried": false,
                "description": "Customer username."
            },
            "password": {
                "label": "password",
                "type": "string",
                "requried": false,
                "description": "Customer password."
            },
            "args": {
                "label": "args",
                "type": "array",
                "requried": false,
                "description": "List of arguments to pass to <code>wp_insert_user()<\/code>."
            }
        },
        "outputs": {
            "return": {
                "label": "mixed",
                "type": "mixed"
            }
        },
        "rank": 1,
        "return_description": "Returns WP_Error on failure, Int (user ID) on success."
    },
    "wc_create_new_customer_username": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_create_new_customer_username",
        "type": "fct",
        "summary": "Create a unique username for a new customer.",
        "description": "",
        "inputs": {
            "email": {
                "label": "email",
                "type": "string",
                "requried": false,
                "description": "New customer email address."
            },
            "new_user_args": {
                "label": "new_user_args",
                "type": "array",
                "requried": false,
                "description": "Array of new user args, maybe including first and last names."
            },
            "suffix": {
                "label": "suffix",
                "type": "string",
                "requried": false,
                "description": "Append string to username to make it unique."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "Generated username."
    },
    "wc_create_order": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_create_order",
        "type": "fct",
        "summary": "Create a new order programmatically.Returns a new order object on success which can then be used to add additional data.",
        "description": "",
        "inputs": {
            "args": {
                "label": "args",
                "type": "array",
                "requried": false,
                "description": "Order arguments."
            }
        },
        "outputs": {
            "return": {
                "label": "mixed",
                "type": "mixed"
            }
        },
        "rank": 1,
        "return_description": "WC_Order|WP_Error"
    },
    "wc_create_order_note": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_create_order_note",
        "type": "fct",
        "summary": "Create an order note.",
        "description": "",
        "inputs": {
            "order_id": {
                "label": "order_id",
                "type": "int",
                "requried": false,
                "description": "Order ID."
            },
            "note": {
                "label": "note",
                "type": "string",
                "requried": false,
                "description": "Note to add."
            },
            "is_customer_note": {
                "label": "is_customer_note",
                "type": "bool",
                "requried": false,
                "description": "If is a costumer note."
            },
            "added_by_user": {
                "label": "added_by_user",
                "type": "bool",
                "requried": false,
                "description": "If note is create by an user."
            }
        },
        "outputs": {
            "return": {
                "label": "mixed",
                "type": "mixed"
            }
        },
        "rank": 1,
        "return_description": "Integer when created or WP_Error when found an error."
    },
    "wc_create_refund": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_create_refund",
        "type": "efct",
        "summary": "Create a new order refund programmatically.Returns a new refund object on success which can then be used to add additional data.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "args": {
                "label": "args",
                "type": "array",
                "requried": false,
                "description": "New refund arguments."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            },
            "return": {
                "label": "mixed",
                "type": "mixed"
            }
        },
        "rank": 1,
        "return_description": "WC_Order_Refund|WP_Error"
    },
    "wc_current_user_has_role": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_current_user_has_role",
        "type": "fct",
        "summary": "Checks if the current user has a role.",
        "description": "",
        "inputs": {
            "role": {
                "label": "role",
                "type": "string",
                "requried": false,
                "description": "The role."
            }
        },
        "outputs": {
            "return": {
                "label": "bool",
                "type": "bool"
            }
        },
        "rank": 1,
        "return_description": "bool"
    },
    "wc_current_user_is_active": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_current_user_is_active",
        "type": "efct",
        "summary": "Update when the user was last active.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_customer_bought_product": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_customer_bought_product",
        "type": "fct",
        "summary": "Checks if a user (by email or ID or both) has bought an item.",
        "description": "",
        "inputs": {
            "customer_email": {
                "label": "customer_email",
                "type": "string",
                "requried": false,
                "description": "Customer email to check."
            },
            "user_id": {
                "label": "user_id",
                "type": "int",
                "requried": false,
                "description": "User ID to check."
            },
            "product_id": {
                "label": "product_id",
                "type": "int",
                "requried": false,
                "description": "Product ID to check."
            }
        },
        "outputs": {
            "return": {
                "label": "bool",
                "type": "bool"
            }
        },
        "rank": 1,
        "return_description": "bool"
    },
    "wc_customer_edit_account_url": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_customer_edit_account_url",
        "type": "fct",
        "summary": "Get the link to the edit account details page.",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_customer_has_capability": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_customer_has_capability",
        "type": "fct",
        "summary": "Checks if a user has a certain capability.",
        "description": "",
        "inputs": {
            "allcaps": {
                "label": "allcaps",
                "type": "array",
                "requried": false,
                "description": "All capabilities."
            },
            "caps": {
                "label": "caps",
                "type": "array",
                "requried": false,
                "description": "Capabilities."
            },
            "args": {
                "label": "args",
                "type": "array",
                "requried": false,
                "description": "Arguments."
            }
        },
        "outputs": {
            "return": {
                "label": "array",
                "type": "array"
            }
        },
        "rank": 1,
        "return_description": "The filtered array of all capabilities."
    },
    "wc_date_format": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_date_format",
        "type": "fct",
        "summary": "WooCommerce Date Format - Allows to change date format for everything WooCommerce.",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_decimal_to_fraction": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_decimal_to_fraction",
        "type": "fct",
        "summary": "Convert a decimal (e.g. 3.5) to a fraction (e.g. 7\/2).From: https:\/\/www.designedbyaturtle.co.uk\/2015\/converting-a-decimal-to-a-fraction-in-php\/",
        "description": "",
        "inputs": {
            "decimal": {
                "label": "decimal",
                "type": "float",
                "requried": false,
                "description": "the decimal number."
            }
        },
        "outputs": {
            "return": {
                "label": "mixed",
                "type": "mixed"
            }
        },
        "rank": 1,
        "return_description": "a 1\/2 would be [1, 2] array (this can be imploded with '\/' to form a string)."
    },
    "wc_deferred_product_sync": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_deferred_product_sync",
        "type": "efct",
        "summary": "Queue a product for syncing at the end of the request.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "product_id": {
                "label": "product_id",
                "type": "int",
                "requried": false,
                "description": "Product ID."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_delete_attribute": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_delete_attribute",
        "type": "efct",
        "summary": "Delete attribute by ID.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "id": {
                "label": "id",
                "type": "int",
                "requried": false,
                "description": "Attribute ID."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            },
            "return": {
                "label": "bool",
                "type": "bool"
            }
        },
        "rank": 1,
        "return_description": "bool"
    },
    "wc_delete_expired_transients": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_delete_expired_transients",
        "type": "efct",
        "summary": "Delete expired transients.Deletes all expired transients. The multi-table delete syntax is used.to delete the transient record from table a, and the corresponding.transient_timeout record from table b.Based on code inside core's upgrade_network() function.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            },
            "return": {
                "label": "int",
                "type": "int"
            }
        },
        "rank": 1,
        "return_description": "Number of transients that were cleared."
    },
    "wc_delete_order_item": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_delete_order_item",
        "type": "efct",
        "summary": "Delete an item from the order it belongs to based on item id.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "item_id": {
                "label": "item_id",
                "type": "int",
                "requried": false,
                "description": "Item ID."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            },
            "return": {
                "label": "bool",
                "type": "bool"
            }
        },
        "rank": 1,
        "return_description": "bool"
    },
    "wc_delete_order_item_meta": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_delete_order_item_meta",
        "type": "efct",
        "summary": "WooCommerce Order Item Meta API - Delete term meta.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "item_id": {
                "label": "item_id",
                "type": "int",
                "requried": false,
                "description": "Item ID."
            },
            "meta_key": {
                "label": "meta_key",
                "type": "string",
                "requried": false,
                "description": "Meta key."
            },
            "meta_value": {
                "label": "meta_value",
                "type": "string",
                "requried": false,
                "description": "Meta value (default: '')."
            },
            "delete_all": {
                "label": "delete_all",
                "type": "bool",
                "requried": false,
                "description": "Delete all meta data, defaults to <code>false<\/code>."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            },
            "return": {
                "label": "bool",
                "type": "bool"
            }
        },
        "rank": 1,
        "return_description": "bool"
    },
    "wc_delete_order_note": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_delete_order_note",
        "type": "fct",
        "summary": "Delete an order note.",
        "description": "",
        "inputs": {
            "note_id": {
                "label": "note_id",
                "type": "int",
                "requried": false,
                "description": "Order note."
            }
        },
        "outputs": {
            "return": {
                "label": "bool",
                "type": "bool"
            }
        },
        "rank": 1,
        "return_description": "True on success, false on failure."
    },
    "wc_delete_product_transients": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_delete_product_transients",
        "type": "efct",
        "summary": "Clear transient cache for product data.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "post_id": {
                "label": "post_id",
                "type": "int",
                "requried": false,
                "description": "(default: 0) The product ID."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_delete_shop_order_transients": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_delete_shop_order_transients",
        "type": "efct",
        "summary": "Clear all transients cache for order data.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "order": {
                "label": "order",
                "type": "mixed",
                "requried": false,
                "description": "Order instance or ID."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_delete_user_data": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_delete_user_data",
        "type": "efct",
        "summary": "When a user is deleted in WordPress, delete corresponding WooCommerce data.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "user_id": {
                "label": "user_id",
                "type": "int",
                "requried": false,
                "description": "User ID being deleted."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_deliver_webhook_async": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_deliver_webhook_async",
        "type": "efct",
        "summary": "Wrapper function to execute the woocommerce_deliver_webhook_async cron.hook, see WC_Webhook::process().",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "webhook_id": {
                "label": "webhook_id",
                "type": "int",
                "requried": false,
                "description": "Webhook ID to deliver."
            },
            "arg": {
                "label": "arg",
                "type": "mixed",
                "requried": false,
                "description": "Hook argument."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_deprecated_argument": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_deprecated_argument",
        "type": "efct",
        "summary": "Wrapper for deprecated arguments so we can apply some extra logic.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "argument": {
                "label": "argument",
                "type": "string",
                "requried": false,
                "description": ""
            },
            "version": {
                "label": "version",
                "type": "string",
                "requried": false,
                "description": ""
            },
            "message": {
                "label": "message",
                "type": "string",
                "requried": false,
                "description": "$replacement"
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_deprecated_function": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_deprecated_function",
        "type": "efct",
        "summary": "Wrapper for deprecated functions so we can apply some extra logic.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "function": {
                "label": "function",
                "type": "string",
                "requried": false,
                "description": "Function used."
            },
            "version": {
                "label": "version",
                "type": "string",
                "requried": false,
                "description": "Version the message was added in."
            },
            "replacement": {
                "label": "replacement",
                "type": "string",
                "requried": false,
                "description": "Replacement for the called function."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_deprecated_hook": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_deprecated_hook",
        "type": "efct",
        "summary": "Wrapper for deprecated hook so we can apply some extra logic.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "hook": {
                "label": "hook",
                "type": "string",
                "requried": false,
                "description": "The hook that was used."
            },
            "version": {
                "label": "version",
                "type": "string",
                "requried": false,
                "description": "The version of WordPress that deprecated the hook."
            },
            "replacement": {
                "label": "replacement",
                "type": "string",
                "requried": false,
                "description": "The hook that should have been used."
            },
            "message": {
                "label": "message",
                "type": "string",
                "requried": false,
                "description": "A message regarding the change."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_disable_admin_bar": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_disable_admin_bar",
        "type": "fct",
        "summary": "Prevent any user who cannot 'edit_posts' (subscribers, customers etc) from seeing the admin bar.Note: get_option( 'woocommerce_lock_down_admin', true ) is a deprecated option here for backwards compatibility. Defaults to true.",
        "description": "",
        "inputs": {
            "show_admin_bar": {
                "label": "show_admin_bar",
                "type": "bool",
                "requried": false,
                "description": "If should display admin bar."
            }
        },
        "outputs": {
            "return": {
                "label": "bool",
                "type": "bool"
            }
        },
        "rank": 1,
        "return_description": "bool"
    },
    "wc_disable_author_archives_for_customers": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_disable_author_archives_for_customers",
        "type": "efct",
        "summary": "Disable author archives for customers.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_display_item_downloads": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_display_item_downloads",
        "type": "fct",
        "summary": "Display item download links.",
        "description": "",
        "inputs": {
            "item": {
                "label": "item",
                "type": "mixed",
                "requried": false,
                "description": "Order Item."
            },
            "args": {
                "label": "args",
                "type": "array",
                "requried": false,
                "description": "Arguments."
            }
        },
        "outputs": {
            "return": {
                "label": "mixed",
                "type": "mixed"
            }
        },
        "rank": 1,
        "return_description": "string|void"
    },
    "wc_display_item_meta": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_display_item_meta",
        "type": "fct",
        "summary": "Display item meta data.",
        "description": "",
        "inputs": {
            "item": {
                "label": "item",
                "type": "mixed",
                "requried": false,
                "description": "Order Item."
            },
            "args": {
                "label": "args",
                "type": "array",
                "requried": false,
                "description": "Arguments."
            }
        },
        "outputs": {
            "return": {
                "label": "mixed",
                "type": "mixed"
            }
        },
        "rank": 1,
        "return_description": "string|void"
    },
    "wc_display_product_attributes": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_display_product_attributes",
        "type": "efct",
        "summary": "Outputs a list of product attributes for a product.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "product": {
                "label": "product",
                "type": "mixed",
                "requried": false,
                "description": "Product Object."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_do_deprecated_action": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_do_deprecated_action",
        "type": "efct",
        "summary": "Runs a deprecated action with notice only if used.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "tag": {
                "label": "tag",
                "type": "string",
                "requried": false,
                "description": "The name of the action hook."
            },
            "args": {
                "label": "args",
                "type": "array",
                "requried": false,
                "description": "Array of additional function arguments to be passed to do_action()."
            },
            "version": {
                "label": "version",
                "type": "string",
                "requried": false,
                "description": "The version of WooCommerce that deprecated the hook."
            },
            "replacement": {
                "label": "replacement",
                "type": "string",
                "requried": false,
                "description": "The hook that should have been used."
            },
            "message": {
                "label": "message",
                "type": "string",
                "requried": false,
                "description": "A message regarding the change."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_do_oembeds": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_do_oembeds",
        "type": "fct",
        "summary": "Process oEmbeds.",
        "description": "",
        "inputs": {
            "content": {
                "label": "content",
                "type": "string",
                "requried": false,
                "description": "Content."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_doing_it_wrong": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_doing_it_wrong",
        "type": "efct",
        "summary": "Wrapper for wc_doing_it_wrong.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "function": {
                "label": "function",
                "type": "string",
                "requried": false,
                "description": "Function used."
            },
            "message": {
                "label": "message",
                "type": "string",
                "requried": false,
                "description": "Message to log."
            },
            "version": {
                "label": "version",
                "type": "string",
                "requried": false,
                "description": "Version the message was added in."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_downloadable_file_permission": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_downloadable_file_permission",
        "type": "fct",
        "summary": "Grant downloadable product access to the file identified by $download_id.",
        "description": "",
        "inputs": {
            "download_id": {
                "label": "download_id",
                "type": "string",
                "requried": false,
                "description": "File identifier."
            },
            "product": {
                "label": "product",
                "type": "mixed",
                "requried": false,
                "description": "Product instance or ID."
            },
            "order": {
                "label": "order",
                "type": "mixed",
                "requried": false,
                "description": "Order data."
            },
            "qty": {
                "label": "qty",
                "type": "int",
                "requried": false,
                "description": "Quantity purchased."
            }
        },
        "outputs": {
            "return": {
                "label": "mixed",
                "type": "mixed"
            }
        },
        "rank": 1,
        "return_description": "insert id or false on failure."
    },
    "wc_downloadable_product_permissions": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_downloadable_product_permissions",
        "type": "efct",
        "summary": "Order Status completed - give downloadable product access to customer.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "order_id": {
                "label": "order_id",
                "type": "int",
                "requried": false,
                "description": "Order ID."
            },
            "force": {
                "label": "force",
                "type": "bool",
                "requried": false,
                "description": "Force downloadable permissions."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_dropdown_variation_attribute_options": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_dropdown_variation_attribute_options",
        "type": "efct",
        "summary": "Output a list of variation attributes for use in the cart forms.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "args": {
                "label": "args",
                "type": "array",
                "requried": false,
                "description": "Arguments."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_edit_address_i18n": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_edit_address_i18n",
        "type": "fct",
        "summary": "Get the edit address slug translation.",
        "description": "",
        "inputs": {
            "id": {
                "label": "id",
                "type": "string",
                "requried": false,
                "description": "Address ID."
            },
            "flip": {
                "label": "flip",
                "type": "bool",
                "requried": false,
                "description": "Flip the array to make it possible to retrieve the values \u200b\u200bfrom both sides."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "Address slug i18n."
    },
    "wc_empty_cart": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_empty_cart",
        "type": "efct",
        "summary": "Clears the cart session when called.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_empty_cart_message": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_empty_cart_message",
        "type": "efct",
        "summary": "Show notice if cart is empty.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_enable_wc_plugin_headers": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_enable_wc_plugin_headers",
        "type": "fct",
        "summary": "Read in WooCommerce headers when reading plugin headers.",
        "description": "",
        "inputs": {
            "headers": {
                "label": "headers",
                "type": "array",
                "requried": false,
                "description": "Headers."
            }
        },
        "outputs": {
            "return": {
                "label": "array",
                "type": "array"
            }
        },
        "rank": 1,
        "return_description": "array"
    },
    "wc_enqueue_js": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_enqueue_js",
        "type": "efct",
        "summary": "Queue some JavaScript code to be output in the footer.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "code": {
                "label": "code",
                "type": "string",
                "requried": false,
                "description": "Code."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_esc_json": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_esc_json",
        "type": "fct",
        "summary": "Escape JSON for use on HTML or attribute text nodes.",
        "description": "",
        "inputs": {
            "json": {
                "label": "json",
                "type": "string",
                "requried": false,
                "description": "JSON to escape."
            },
            "html": {
                "label": "html",
                "type": "bool",
                "requried": false,
                "description": "True if escaping for HTML text node, false for attributes. Determines how quotes are handled."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "Escaped JSON."
    },
    "wc_fix_product_attachment_link": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_fix_product_attachment_link",
        "type": "fct",
        "summary": "Prevent product attachment links from breaking when using complex rewrite structures.",
        "description": "",
        "inputs": {
            "link": {
                "label": "link",
                "type": "string",
                "requried": false,
                "description": "Link."
            },
            "post_id": {
                "label": "post_id",
                "type": "int",
                "requried": false,
                "description": "Post ID."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_fix_rewrite_rules": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_fix_rewrite_rules",
        "type": "fct",
        "summary": "Various rewrite rule fixes.",
        "description": "",
        "inputs": {
            "rules": {
                "label": "rules",
                "type": "array",
                "requried": false,
                "description": "Rules."
            }
        },
        "outputs": {
            "return": {
                "label": "array",
                "type": "array"
            }
        },
        "rank": 1,
        "return_description": "array"
    },
    "wc_flatten_meta_callback": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_flatten_meta_callback",
        "type": "fct",
        "summary": "Callback which can flatten post meta (gets the first value if it's an array).",
        "description": "",
        "inputs": {
            "value": {
                "label": "value",
                "type": "array",
                "requried": false,
                "description": "Value to flatten."
            }
        },
        "outputs": {
            "return": {
                "label": "mixed",
                "type": "mixed"
            }
        },
        "rank": 1,
        "return_description": "mixed"
    },
    "wc_float_to_string": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_float_to_string",
        "type": "fct",
        "summary": "Convert a float to a string without locale formatting which PHP adds when changing floats to strings.",
        "description": "",
        "inputs": {
            "float": {
                "label": "float",
                "type": "float",
                "requried": false,
                "description": "Float value to format."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_format_content": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_format_content",
        "type": "fct",
        "summary": "Format content to display shortcodes.",
        "description": "",
        "inputs": {
            "raw_string": {
                "label": "raw_string",
                "type": "string",
                "requried": false,
                "description": "Raw string."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_format_country_state_string": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_format_country_state_string",
        "type": "fct",
        "summary": "Formats a string in the format COUNTRY:STATE into an array.",
        "description": "",
        "inputs": {
            "country_string": {
                "label": "country_string",
                "type": "string",
                "requried": false,
                "description": "Country string."
            }
        },
        "outputs": {
            "return": {
                "label": "array",
                "type": "array"
            }
        },
        "rank": 1,
        "return_description": "array"
    },
    "wc_format_coupon_code": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_format_coupon_code",
        "type": "fct",
        "summary": "Format a coupon code.",
        "description": "",
        "inputs": {
            "value": {
                "label": "value",
                "type": "string",
                "requried": false,
                "description": "Coupon code to format."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_format_datetime": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_format_datetime",
        "type": "fct",
        "summary": "Format a date for output.",
        "description": "",
        "inputs": {
            "date": {
                "label": "date",
                "type": "mixed",
                "requried": false,
                "description": "Instance of WC_DateTime."
            },
            "format": {
                "label": "format",
                "type": "string",
                "requried": false,
                "description": "<p>Data format.\n                            Defaults to the wc_date_format function if not set.<\/p>"
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_format_decimal": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_format_decimal",
        "type": "fct",
        "summary": "Format decimal numbers ready for DB storage.Sanitize, remove decimals, and optionally round + trim off zeros.This function does not remove thousands - this should be done before passing a value to the function.",
        "description": "",
        "inputs": {
            "number": {
                "label": "number",
                "type": "mixed",
                "requried": false,
                "description": "Expects either a float or a string with a decimal separator only (no thousands)."
            },
            "dp": {
                "label": "dp",
                "type": "mixed",
                "requried": false,
                "description": "number  Number of decimal points to use, blank to use woocommerce_price_num_decimals, or false to avoid all rounding."
            },
            "trim_zeros": {
                "label": "trim_zeros",
                "type": "bool",
                "requried": false,
                "description": "From end of string."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_format_dimensions": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_format_dimensions",
        "type": "fct",
        "summary": "Format dimensions for display.",
        "description": "",
        "inputs": {
            "dimensions": {
                "label": "dimensions",
                "type": "array",
                "requried": false,
                "description": "Array of dimensions."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_format_hex": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_format_hex",
        "type": "fct",
        "summary": "Format string as hex.",
        "description": "",
        "inputs": {
            "hex": {
                "label": "hex",
                "type": "string",
                "requried": false,
                "description": "HEX color."
            }
        },
        "outputs": {
            "return": {
                "label": "mixed",
                "type": "mixed"
            }
        },
        "rank": 1,
        "return_description": "string|null"
    },
    "wc_format_list_of_items": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_format_list_of_items",
        "type": "fct",
        "summary": "Comma separate a list of item names, and replace final comma with 'and'.",
        "description": "",
        "inputs": {
            "items": {
                "label": "items",
                "type": "array",
                "requried": false,
                "description": "Cart items."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_format_localized_decimal": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_format_localized_decimal",
        "type": "fct",
        "summary": "Format a decimal with PHP Locale settings.",
        "description": "",
        "inputs": {
            "value": {
                "label": "value",
                "type": "string",
                "requried": false,
                "description": "Decimal to localize."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_format_localized_price": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_format_localized_price",
        "type": "fct",
        "summary": "Format a price with WC Currency Locale settings.",
        "description": "",
        "inputs": {
            "value": {
                "label": "value",
                "type": "string",
                "requried": false,
                "description": "Price to localize."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_format_option_hold_stock_minutes": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_format_option_hold_stock_minutes",
        "type": "fct",
        "summary": "Formats hold stock option and sets cron event up.",
        "description": "",
        "inputs": {
            "value": {
                "label": "value",
                "type": "string",
                "requried": false,
                "description": "Option value."
            },
            "option": {
                "label": "option",
                "type": "array",
                "requried": false,
                "description": "Option name."
            },
            "raw_value": {
                "label": "raw_value",
                "type": "string",
                "requried": false,
                "description": "Raw value."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_format_option_price_num_decimals": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_format_option_price_num_decimals",
        "type": "fct",
        "summary": "Formats decimals when saved in settings.",
        "description": "",
        "inputs": {
            "value": {
                "label": "value",
                "type": "string",
                "requried": false,
                "description": "Option value."
            },
            "option": {
                "label": "option",
                "type": "array",
                "requried": false,
                "description": "Option name."
            },
            "raw_value": {
                "label": "raw_value",
                "type": "string",
                "requried": false,
                "description": "Raw value."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_format_option_price_separators": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_format_option_price_separators",
        "type": "fct",
        "summary": "Formats curency symbols when saved in settings.",
        "description": "",
        "inputs": {
            "value": {
                "label": "value",
                "type": "string",
                "requried": false,
                "description": "Option value."
            },
            "option": {
                "label": "option",
                "type": "array",
                "requried": false,
                "description": "Option name."
            },
            "raw_value": {
                "label": "raw_value",
                "type": "string",
                "requried": false,
                "description": "Raw value."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_format_phone_number": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_format_phone_number",
        "type": "fct",
        "summary": "Format phone numbers.",
        "description": "",
        "inputs": {
            "phone": {
                "label": "phone",
                "type": "string",
                "requried": false,
                "description": "Phone number."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_format_postcode": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_format_postcode",
        "type": "fct",
        "summary": "Format the postcode according to the country and length of the postcode.",
        "description": "",
        "inputs": {
            "postcode": {
                "label": "postcode",
                "type": "string",
                "requried": false,
                "description": "Unformatted postcode."
            },
            "country": {
                "label": "country",
                "type": "string",
                "requried": false,
                "description": "Base country."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_format_price_range": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_format_price_range",
        "type": "fct",
        "summary": "Format a price range for display.",
        "description": "",
        "inputs": {
            "from": {
                "label": "from",
                "type": "string",
                "requried": false,
                "description": "Price from."
            },
            "to": {
                "label": "to",
                "type": "string",
                "requried": false,
                "description": "Price to."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_format_product_short_description": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_format_product_short_description",
        "type": "fct",
        "summary": "Format product short description.Adds support for Jetpack Markdown.",
        "description": "",
        "inputs": {
            "content": {
                "label": "content",
                "type": "string",
                "requried": false,
                "description": "Product short description."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_format_refund_total": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_format_refund_total",
        "type": "fct",
        "summary": "Make a refund total negative.",
        "description": "",
        "inputs": {
            "amount": {
                "label": "amount",
                "type": "float",
                "requried": false,
                "description": "Refunded amount."
            }
        },
        "outputs": {
            "return": {
                "label": "float",
                "type": "float"
            }
        },
        "rank": 1,
        "return_description": "float"
    },
    "wc_format_sale_price": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_format_sale_price",
        "type": "fct",
        "summary": "Format a sale price for display.",
        "description": "",
        "inputs": {
            "regular_price": {
                "label": "regular_price",
                "type": "string",
                "requried": false,
                "description": "Regular price."
            },
            "sale_price": {
                "label": "sale_price",
                "type": "string",
                "requried": false,
                "description": "Sale price."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_format_stock_for_display": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_format_stock_for_display",
        "type": "fct",
        "summary": "Format the stock amount ready for display based on settings.",
        "description": "",
        "inputs": {
            "product": {
                "label": "product",
                "type": "mixed",
                "requried": false,
                "description": "Product object for which the stock you need to format."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_format_stock_quantity_for_display": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_format_stock_quantity_for_display",
        "type": "fct",
        "summary": "Format the stock quantity ready for display.",
        "description": "",
        "inputs": {
            "stock_quantity": {
                "label": "stock_quantity",
                "type": "int",
                "requried": false,
                "description": "Stock quantity."
            },
            "product": {
                "label": "product",
                "type": "mixed",
                "requried": false,
                "description": "Product instance so that we can pass through the filters."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_format_weight": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_format_weight",
        "type": "fct",
        "summary": "Format a weight for display.",
        "description": "",
        "inputs": {
            "weight": {
                "label": "weight",
                "type": "float",
                "requried": false,
                "description": "Weight."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_gallery_noscript": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_gallery_noscript",
        "type": "efct",
        "summary": "Show the gallery if JS is disabled.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_generate_order_key": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_generate_order_key",
        "type": "fct",
        "summary": "Generate an order key.",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "The order key."
    },
    "wc_generator_tag": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_generator_tag",
        "type": "fct",
        "summary": "Output generator tag to aid debugging.",
        "description": "",
        "inputs": {
            "gen": {
                "label": "gen",
                "type": "string",
                "requried": false,
                "description": "Generator."
            },
            "type": {
                "label": "type",
                "type": "string",
                "requried": false,
                "description": "Type."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_get_account_downloads_columns": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_account_downloads_columns",
        "type": "fct",
        "summary": "Get My Account > Downloads columns.",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "array",
                "type": "array"
            }
        },
        "rank": 1,
        "return_description": "array"
    },
    "wc_get_account_endpoint_url": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_account_endpoint_url",
        "type": "fct",
        "summary": "Get account endpoint URL.",
        "description": "",
        "inputs": {
            "endpoint": {
                "label": "endpoint",
                "type": "string",
                "requried": false,
                "description": "Endpoint."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_get_account_formatted_address": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_account_formatted_address",
        "type": "fct",
        "summary": "Get account formatted address.",
        "description": "",
        "inputs": {
            "address_type": {
                "label": "address_type",
                "type": "string",
                "requried": false,
                "description": "<p>Address type.\n                             Accepts: 'billing' or 'shipping'.\n                             Default to 'billing'.<\/p>"
            },
            "customer_id": {
                "label": "customer_id",
                "type": "int",
                "requried": false,
                "description": "<p>Customer ID.\n                             Default to 0.<\/p>"
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_get_account_menu_item_classes": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_account_menu_item_classes",
        "type": "fct",
        "summary": "Get account menu item classes.",
        "description": "",
        "inputs": {
            "endpoint": {
                "label": "endpoint",
                "type": "string",
                "requried": false,
                "description": "Endpoint."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_get_account_menu_items": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_account_menu_items",
        "type": "fct",
        "summary": "Get My Account menu items.",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "array",
                "type": "array"
            }
        },
        "rank": 1,
        "return_description": "array"
    },
    "wc_get_account_orders_actions": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_account_orders_actions",
        "type": "fct",
        "summary": "Get account orders actions.",
        "description": "",
        "inputs": {
            "order": {
                "label": "order",
                "type": "mixed",
                "requried": false,
                "description": "Order instance or ID."
            }
        },
        "outputs": {
            "return": {
                "label": "array",
                "type": "array"
            }
        },
        "rank": 1,
        "return_description": "array"
    },
    "wc_get_account_orders_columns": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_account_orders_columns",
        "type": "fct",
        "summary": "Get My Account > Orders columns.",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "array",
                "type": "array"
            }
        },
        "rank": 1,
        "return_description": "array"
    },
    "wc_get_account_payment_methods_columns": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_account_payment_methods_columns",
        "type": "fct",
        "summary": "Get My Account > Payment methods columns.",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "array",
                "type": "array"
            }
        },
        "rank": 1,
        "return_description": "array"
    },
    "wc_get_account_payment_methods_types": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_account_payment_methods_types",
        "type": "fct",
        "summary": "Get My Account > Payment methods types",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "array",
                "type": "array"
            }
        },
        "rank": 1,
        "return_description": "array"
    },
    "wc_get_account_saved_payment_methods_list": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_account_saved_payment_methods_list",
        "type": "fct",
        "summary": "Returns an array of a user's saved payments list for output on the account tab.",
        "description": "",
        "inputs": {
            "list": {
                "label": "list",
                "type": "array",
                "requried": false,
                "description": "List of payment methods passed from wc_get_customer_saved_methods_list()."
            },
            "customer_id": {
                "label": "customer_id",
                "type": "int",
                "requried": false,
                "description": "The customer to fetch payment methods for."
            }
        },
        "outputs": {
            "return": {
                "label": "array",
                "type": "array"
            }
        },
        "rank": 1,
        "return_description": "Filtered list of customers payment methods."
    },
    "wc_get_account_saved_payment_methods_list_item_cc": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_account_saved_payment_methods_list_item_cc",
        "type": "fct",
        "summary": "Controls the output for credit cards on the my account page.",
        "description": "",
        "inputs": {
            "item": {
                "label": "item",
                "type": "array",
                "requried": false,
                "description": "Individual list item from woocommerce_saved_payment_methods_list."
            },
            "payment_token": {
                "label": "payment_token",
                "type": "mixed",
                "requried": false,
                "description": "The payment token associated with this method entry."
            }
        },
        "outputs": {
            "return": {
                "label": "array",
                "type": "array"
            }
        },
        "rank": 1,
        "return_description": "Filtered item."
    },
    "wc_get_account_saved_payment_methods_list_item_echeck": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_account_saved_payment_methods_list_item_echeck",
        "type": "fct",
        "summary": "Controls the output for eChecks on the my account page.",
        "description": "",
        "inputs": {
            "item": {
                "label": "item",
                "type": "array",
                "requried": false,
                "description": "Individual list item from woocommerce_saved_payment_methods_list."
            },
            "payment_token": {
                "label": "payment_token",
                "type": "mixed",
                "requried": false,
                "description": "The payment token associated with this method entry."
            }
        },
        "outputs": {
            "return": {
                "label": "array",
                "type": "array"
            }
        },
        "rank": 1,
        "return_description": "Filtered item."
    },
    "wc_get_attachment_image_attributes": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_attachment_image_attributes",
        "type": "fct",
        "summary": "Get attachment image attributes.",
        "description": "",
        "inputs": {
            "attr": {
                "label": "attr",
                "type": "array",
                "requried": false,
                "description": "Image attributes."
            }
        },
        "outputs": {
            "return": {
                "label": "array",
                "type": "array"
            }
        },
        "rank": 1,
        "return_description": "array"
    },
    "wc_get_attribute": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_attribute",
        "type": "fct",
        "summary": "Get attribute data by ID.",
        "description": "",
        "inputs": {
            "id": {
                "label": "id",
                "type": "int",
                "requried": false,
                "description": "Attribute ID."
            }
        },
        "outputs": {
            "return": {
                "label": "mixed",
                "type": "mixed"
            }
        },
        "rank": 1,
        "return_description": "stdClass|null"
    },
    "wc_get_attribute_taxonomies": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_attribute_taxonomies",
        "type": "fct",
        "summary": "Get attribute taxonomies.",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "array",
                "type": "array"
            }
        },
        "rank": 1,
        "return_description": "of objects, @since 3.6.0 these are also indexed by ID."
    },
    "wc_get_attribute_taxonomy_ids": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_attribute_taxonomy_ids",
        "type": "fct",
        "summary": "Get (cached) attribute taxonomy ID and name pairs.",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "array",
                "type": "array"
            }
        },
        "rank": 1,
        "return_description": "array"
    },
    "wc_get_attribute_taxonomy_labels": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_attribute_taxonomy_labels",
        "type": "fct",
        "summary": "Get (cached) attribute taxonomy label and name pairs.",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "array",
                "type": "array"
            }
        },
        "rank": 1,
        "return_description": "array"
    },
    "wc_get_attribute_taxonomy_names": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_attribute_taxonomy_names",
        "type": "fct",
        "summary": "Get an array of product attribute taxonomies.",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "array",
                "type": "array"
            }
        },
        "rank": 1,
        "return_description": "array"
    },
    "wc_get_attribute_type_label": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_attribute_type_label",
        "type": "fct",
        "summary": "Get attribute type label.",
        "description": "",
        "inputs": {
            "type": {
                "label": "type",
                "type": "string",
                "requried": false,
                "description": "Attribute type slug."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_get_attribute_types": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_attribute_types",
        "type": "fct",
        "summary": "Get attribute types.",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "array",
                "type": "array"
            }
        },
        "rank": 1,
        "return_description": "array"
    },
    "wc_get_base_location": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_base_location",
        "type": "fct",
        "summary": "Get the store's base location.",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "array",
                "type": "array"
            }
        },
        "rank": 1,
        "return_description": "array"
    },
    "wc_get_cart_coupon_types": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_cart_coupon_types",
        "type": "fct",
        "summary": "Coupon types that apply to the cart as a whole. Controls which validation rules will apply.",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "array",
                "type": "array"
            }
        },
        "rank": 1,
        "return_description": "array"
    },
    "wc_get_cart_item_data_hash": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_cart_item_data_hash",
        "type": "fct",
        "summary": "Gets a hash of important product data that when changed should cause cart items to be invalidated.The woocommerce_cart_item_data_to_validate filter can be used to add custom properties.",
        "description": "",
        "inputs": {
            "product": {
                "label": "product",
                "type": "mixed",
                "requried": false,
                "description": "Product object."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_get_cart_remove_url": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_cart_remove_url",
        "type": "fct",
        "summary": "Gets the url to remove an item from the cart.",
        "description": "",
        "inputs": {
            "cart_item_key": {
                "label": "cart_item_key",
                "type": "string",
                "requried": false,
                "description": "contains the id of the cart item."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "url to page"
    },
    "wc_get_cart_undo_url": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_cart_undo_url",
        "type": "fct",
        "summary": "Gets the url to re-add an item into the cart.",
        "description": "",
        "inputs": {
            "cart_item_key": {
                "label": "cart_item_key",
                "type": "string",
                "requried": false,
                "description": "Cart item key to undo."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "url to page"
    },
    "wc_get_cart_url": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_cart_url",
        "type": "fct",
        "summary": "Gets the url to the cart page.",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "Url to cart page"
    },
    "wc_get_checkout_url": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_checkout_url",
        "type": "fct",
        "summary": "Gets the url to the checkout page.",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "Url to checkout page"
    },
    "wc_get_chosen_shipping_method_for_package": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_chosen_shipping_method_for_package",
        "type": "fct",
        "summary": "Get chosen method for package from session.",
        "description": "",
        "inputs": {
            "key": {
                "label": "key",
                "type": "int",
                "requried": false,
                "description": "Key of package."
            },
            "package": {
                "label": "package",
                "type": "array",
                "requried": false,
                "description": "Package data array."
            }
        },
        "outputs": {
            "return": {
                "label": "mixed",
                "type": "mixed"
            }
        },
        "rank": 1,
        "return_description": "string|bool"
    },
    "wc_get_chosen_shipping_method_ids": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_chosen_shipping_method_ids",
        "type": "fct",
        "summary": "Gets chosen shipping method IDs from chosen_shipping_methods session, without instance IDs.",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "mixed",
                "type": "mixed"
            }
        },
        "rank": 1,
        "return_description": "string[]"
    },
    "wc_get_coupon_code_by_id": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_coupon_code_by_id",
        "type": "fct",
        "summary": "Get coupon code by ID.",
        "description": "",
        "inputs": {
            "id": {
                "label": "id",
                "type": "int",
                "requried": false,
                "description": "Coupon ID."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_get_coupon_id_by_code": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_coupon_id_by_code",
        "type": "fct",
        "summary": "Get coupon code by ID.",
        "description": "",
        "inputs": {
            "code": {
                "label": "code",
                "type": "string",
                "requried": false,
                "description": "Coupon code."
            },
            "exclude": {
                "label": "exclude",
                "type": "int",
                "requried": false,
                "description": "Used to exclude an ID from the check if you're checking existence."
            }
        },
        "outputs": {
            "return": {
                "label": "int",
                "type": "int"
            }
        },
        "rank": 1,
        "return_description": "int"
    },
    "wc_get_coupon_type": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_coupon_type",
        "type": "fct",
        "summary": "Get a coupon type's name.",
        "description": "",
        "inputs": {
            "type": {
                "label": "type",
                "type": "string",
                "requried": false,
                "description": "Coupon type."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_get_coupon_types": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_coupon_types",
        "type": "fct",
        "summary": "Get coupon types.",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "array",
                "type": "array"
            }
        },
        "rank": 1,
        "return_description": "array"
    },
    "wc_get_credit_card_type_label": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_credit_card_type_label",
        "type": "fct",
        "summary": "Get a nice name for credit card providers.",
        "description": "",
        "inputs": {
            "type": {
                "label": "type",
                "type": "string",
                "requried": false,
                "description": "Provider Slug\/Type."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_get_customer_available_downloads": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_customer_available_downloads",
        "type": "fct",
        "summary": "Get customer available downloads.",
        "description": "",
        "inputs": {
            "customer_id": {
                "label": "customer_id",
                "type": "int",
                "requried": false,
                "description": "Customer\/User ID."
            }
        },
        "outputs": {
            "return": {
                "label": "array",
                "type": "array"
            }
        },
        "rank": 1,
        "return_description": "array"
    },
    "wc_get_customer_default_location": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_customer_default_location",
        "type": "fct",
        "summary": "Get the customer's default location.Filtered, and set to base location or left blank. If cache-busting,this should only be used when 'location' is set in the querystring.",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "array",
                "type": "array"
            }
        },
        "rank": 1,
        "return_description": "array"
    },
    "wc_get_customer_download_permissions": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_customer_download_permissions",
        "type": "fct",
        "summary": "Get customer download permissions from the database.",
        "description": "",
        "inputs": {
            "customer_id": {
                "label": "customer_id",
                "type": "int",
                "requried": false,
                "description": "Customer\/User ID."
            }
        },
        "outputs": {
            "return": {
                "label": "array",
                "type": "array"
            }
        },
        "rank": 1,
        "return_description": "array"
    },
    "wc_get_customer_last_order": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_customer_last_order",
        "type": "fct",
        "summary": "Get info about customer's last order.",
        "description": "",
        "inputs": {
            "customer_id": {
                "label": "customer_id",
                "type": "int",
                "requried": false,
                "description": "Customer ID."
            }
        },
        "outputs": {
            "return": {
                "label": "mixed",
                "type": "mixed"
            }
        },
        "rank": 1,
        "return_description": "Order object if successful or false."
    },
    "wc_get_customer_order_count": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_customer_order_count",
        "type": "fct",
        "summary": "Get total orders by customer.",
        "description": "",
        "inputs": {
            "user_id": {
                "label": "user_id",
                "type": "int",
                "requried": false,
                "description": "User ID."
            }
        },
        "outputs": {
            "return": {
                "label": "int",
                "type": "int"
            }
        },
        "rank": 1,
        "return_description": "int"
    },
    "wc_get_customer_saved_methods_list": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_customer_saved_methods_list",
        "type": "fct",
        "summary": "Get customer saved payment methods list.",
        "description": "",
        "inputs": {
            "customer_id": {
                "label": "customer_id",
                "type": "int",
                "requried": false,
                "description": "Customer ID."
            }
        },
        "outputs": {
            "return": {
                "label": "array",
                "type": "array"
            }
        },
        "rank": 1,
        "return_description": "array"
    },
    "wc_get_customer_total_spent": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_customer_total_spent",
        "type": "fct",
        "summary": "Get total spent by customer.",
        "description": "",
        "inputs": {
            "user_id": {
                "label": "user_id",
                "type": "int",
                "requried": false,
                "description": "User ID."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_get_default_product_rows_per_page": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_default_product_rows_per_page",
        "type": "fct",
        "summary": "Get the default rows setting - this is how many product rows will be shown in loops.",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "int",
                "type": "int"
            }
        },
        "rank": 1,
        "return_description": "int"
    },
    "wc_get_default_products_per_row": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_default_products_per_row",
        "type": "fct",
        "summary": "Get the default columns setting - this is how many products will be shown per row in loops.",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "int",
                "type": "int"
            }
        },
        "rank": 1,
        "return_description": "int"
    },
    "wc_get_default_shipping_method_for_package": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_default_shipping_method_for_package",
        "type": "fct",
        "summary": "Choose the default method for a package.",
        "description": "",
        "inputs": {
            "key": {
                "label": "key",
                "type": "int",
                "requried": false,
                "description": "Key of package."
            },
            "package": {
                "label": "package",
                "type": "array",
                "requried": false,
                "description": "Package data array."
            },
            "chosen_method": {
                "label": "chosen_method",
                "type": "string",
                "requried": false,
                "description": "Chosen method id."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_get_dimension": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_dimension",
        "type": "fct",
        "summary": "Normalise dimensions, unify to cm then convert to wanted unit value.Usage:wc_get_dimension( 55, 'in' );wc_get_dimension( 55, 'in', 'm' );",
        "description": "",
        "inputs": {
            "dimension": {
                "label": "dimension",
                "type": "mixed",
                "requried": false,
                "description": "Dimension."
            },
            "to_unit": {
                "label": "to_unit",
                "type": "string",
                "requried": false,
                "description": "<p>Unit to convert to.\n                               Options: 'in', 'm', 'cm', 'm'.<\/p>"
            },
            "from_unit": {
                "label": "from_unit",
                "type": "string",
                "requried": false,
                "description": "<p>Unit to convert from.\n                               Defaults to ''.\n                               Options: 'in', 'm', 'cm', 'm'.<\/p>"
            }
        },
        "outputs": {
            "return": {
                "label": "float",
                "type": "float"
            }
        },
        "rank": 1,
        "return_description": "float"
    },
    "wc_get_email_order_items": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_email_order_items",
        "type": "fct",
        "summary": "Get HTML for the order items to be shown in emails.",
        "description": "",
        "inputs": {
            "order": {
                "label": "order",
                "type": "mixed",
                "requried": false,
                "description": "Order object."
            },
            "args": {
                "label": "args",
                "type": "array",
                "requried": false,
                "description": "Arguments."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_get_endpoint_url": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_endpoint_url",
        "type": "fct",
        "summary": "Get endpoint URL.Gets the URL for an endpoint, which varies depending on permalink settings.",
        "description": "",
        "inputs": {
            "endpoint": {
                "label": "endpoint",
                "type": "string",
                "requried": false,
                "description": "Endpoint slug."
            },
            "value": {
                "label": "value",
                "type": "string",
                "requried": false,
                "description": "Query param value."
            },
            "permalink": {
                "label": "permalink",
                "type": "string",
                "requried": false,
                "description": "Permalink."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_get_featured_product_ids": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_featured_product_ids",
        "type": "fct",
        "summary": "Function that returns an array containing the IDs of the featured products.",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "array",
                "type": "array"
            }
        },
        "rank": 1,
        "return_description": "array"
    },
    "wc_get_filename_from_url": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_filename_from_url",
        "type": "fct",
        "summary": "Gets the filename part of a download URL.",
        "description": "",
        "inputs": {
            "file_url": {
                "label": "file_url",
                "type": "string",
                "requried": false,
                "description": "File URL."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_get_formatted_cart_item_data": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_formatted_cart_item_data",
        "type": "fct",
        "summary": "Gets and formats a list of cart item data + variations for display on the frontend.",
        "description": "",
        "inputs": {
            "cart_item": {
                "label": "cart_item",
                "type": "array",
                "requried": false,
                "description": "Cart item object."
            },
            "flat": {
                "label": "flat",
                "type": "bool",
                "requried": false,
                "description": "Should the data be returned flat or in a list."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_get_formatted_variation": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_formatted_variation",
        "type": "fct",
        "summary": "Variation Formatting.Gets a formatted version of variation data or item meta.",
        "description": "",
        "inputs": {
            "variation": {
                "label": "variation",
                "type": "mixed",
                "requried": false,
                "description": "Variation object."
            },
            "flat": {
                "label": "flat",
                "type": "bool",
                "requried": false,
                "description": "Should this be a flat list or HTML list? (default: false)."
            },
            "include_names": {
                "label": "include_names",
                "type": "bool",
                "requried": false,
                "description": "include attribute names\/labels in the list."
            },
            "skip_attributes_in_name": {
                "label": "skip_attributes_in_name",
                "type": "bool",
                "requried": false,
                "description": "Do not list attributes already part of the variation name."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_get_gallery_image_html": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_gallery_image_html",
        "type": "fct",
        "summary": "Get HTML for a gallery image.Woocommerce_gallery_thumbnail_size, woocommerce_gallery_image_size and woocommerce_gallery_full_size accept name based image sizes, or an array of width\/height values.",
        "description": "",
        "inputs": {
            "attachment_id": {
                "label": "attachment_id",
                "type": "int",
                "requried": false,
                "description": "Attachment ID."
            },
            "main_image": {
                "label": "main_image",
                "type": "bool",
                "requried": false,
                "description": "Is this the main image or a thumbnail?."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_get_held_stock_quantity": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_held_stock_quantity",
        "type": "fct",
        "summary": "See how much stock is being held in pending orders.",
        "description": "",
        "inputs": {
            "product": {
                "label": "product",
                "type": "mixed",
                "requried": false,
                "description": "Product to check."
            },
            "exclude_order_id": {
                "label": "exclude_order_id",
                "type": "int",
                "requried": false,
                "description": "Order ID to exclude."
            }
        },
        "outputs": {
            "return": {
                "label": "int",
                "type": "int"
            }
        },
        "rank": 1,
        "return_description": "int"
    },
    "wc_get_image_size": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_image_size",
        "type": "fct",
        "summary": "Get an image size by name or defined dimensions.The returned variable is filtered by woocommerce_get_image_size_{image_size} filter toallow 3rd party customisation.Sizes defined by the theme take priority over settings. Settings are hidden when a themedefines sizes.",
        "description": "",
        "inputs": {
            "image_size": {
                "label": "image_size",
                "type": "mixed",
                "requried": false,
                "description": "Name of the image size to get, or an array of dimensions."
            }
        },
        "outputs": {
            "return": {
                "label": "array",
                "type": "array"
            }
        },
        "rank": 1,
        "return_description": "Array of dimensions including width, height, and cropping mode. Cropping mode is 0 for no crop, and 1 for hard crop."
    },
    "wc_get_is_paid_statuses": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_is_paid_statuses",
        "type": "fct",
        "summary": "Get list of statuses which are consider 'paid'.",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "array",
                "type": "array"
            }
        },
        "rank": 1,
        "return_description": "array"
    },
    "wc_get_is_pending_statuses": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_is_pending_statuses",
        "type": "fct",
        "summary": "Get list of statuses which are consider 'pending payment'.",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "array",
                "type": "array"
            }
        },
        "rank": 1,
        "return_description": "array"
    },
    "wc_get_log_file_name": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_log_file_name",
        "type": "fct",
        "summary": "Get a log file name.",
        "description": "",
        "inputs": {
            "handle": {
                "label": "handle",
                "type": "string",
                "requried": false,
                "description": "Name."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "The log file name."
    },
    "wc_get_log_file_path": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_log_file_path",
        "type": "fct",
        "summary": "Get a log file path.",
        "description": "",
        "inputs": {
            "handle": {
                "label": "handle",
                "type": "string",
                "requried": false,
                "description": "name."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "the log file path."
    },
    "wc_get_logger": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_logger",
        "type": "fct",
        "summary": "Get a shared logger instance.Use the woocommerce_logging_class filter to change the logging class. You may provide one of the following: - a class name which will be instantiated as new $class with no arguments - an instance which will be used directly as the loggerIn either case, the class or instance must implement WC_Logger_Interface.",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "mixed",
                "type": "mixed"
            }
        },
        "rank": 1,
        "return_description": "WC_Logger"
    },
    "wc_get_loop_class": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_loop_class",
        "type": "fct",
        "summary": "Get classname for woocommerce loops.",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_get_loop_prop": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_loop_prop",
        "type": "fct",
        "summary": "Gets a property from the woocommerce_loop global.",
        "description": "",
        "inputs": {
            "prop": {
                "label": "prop",
                "type": "string",
                "requried": false,
                "description": "Prop to get."
            },
            "default": {
                "label": "default",
                "type": "string",
                "requried": false,
                "description": "Default if the prop does not exist."
            }
        },
        "outputs": {
            "return": {
                "label": "mixed",
                "type": "mixed"
            }
        },
        "rank": 1,
        "return_description": "mixed"
    },
    "wc_get_low_stock_amount": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_low_stock_amount",
        "type": "fct",
        "summary": "Return low stock amount to determine if notification needs to be sent",
        "description": "",
        "inputs": {
            "product": {
                "label": "product",
                "type": "mixed",
                "requried": false,
                "description": "Product to get data from."
            }
        },
        "outputs": {
            "return": {
                "label": "int",
                "type": "int"
            }
        },
        "rank": 1,
        "return_description": "int"
    },
    "wc_get_notices": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_notices",
        "type": "fct",
        "summary": "Returns all queued notices, optionally filtered by a notice type.",
        "description": "",
        "inputs": {
            "notice_type": {
                "label": "notice_type",
                "type": "string",
                "requried": false,
                "description": "Optional. The singular name of the notice type - either error, success or notice."
            }
        },
        "outputs": {
            "return": {
                "label": "mixed",
                "type": "mixed"
            }
        },
        "rank": 1,
        "return_description": "array|mixed"
    },
    "wc_get_object_terms": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_object_terms",
        "type": "fct",
        "summary": "Helper to get cached object terms and filter by field using wp_list_pluck().Works as a cached alternative for wp_get_post_terms() and wp_get_object_terms().",
        "description": "",
        "inputs": {
            "object_id": {
                "label": "object_id",
                "type": "int",
                "requried": false,
                "description": "Object ID."
            },
            "taxonomy": {
                "label": "taxonomy",
                "type": "string",
                "requried": false,
                "description": "Taxonomy slug."
            },
            "field": {
                "label": "field",
                "type": "string",
                "requried": false,
                "description": "Field name."
            },
            "index_key": {
                "label": "index_key",
                "type": "string",
                "requried": false,
                "description": "Index key name."
            }
        },
        "outputs": {
            "return": {
                "label": "array",
                "type": "array"
            }
        },
        "rank": 1,
        "return_description": "array"
    },
    "wc_get_order": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_order",
        "type": "fct",
        "summary": "Main function for returning orders, uses the WC_Order_Factory class.",
        "description": "",
        "inputs": {
            "the_order": {
                "label": "the_order",
                "type": "mixed",
                "requried": false,
                "description": "Post object or post ID of the order."
            }
        },
        "outputs": {
            "return": {
                "label": "mixed",
                "type": "mixed"
            }
        },
        "rank": 1,
        "return_description": "bool|WC_Order|WC_Order_Refund"
    },
    "wc_get_order_id_by_order_item_id": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_order_id_by_order_item_id",
        "type": "fct",
        "summary": "Get order ID by order item ID.",
        "description": "",
        "inputs": {
            "item_id": {
                "label": "item_id",
                "type": "int",
                "requried": false,
                "description": "Item ID."
            }
        },
        "outputs": {
            "return": {
                "label": "int",
                "type": "int"
            }
        },
        "rank": 1,
        "return_description": "int"
    },
    "wc_get_order_id_by_order_key": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_order_id_by_order_key",
        "type": "fct",
        "summary": "Finds an Order ID based on an order key.",
        "description": "",
        "inputs": {
            "order_key": {
                "label": "order_key",
                "type": "string",
                "requried": false,
                "description": "An order key has generated by."
            }
        },
        "outputs": {
            "return": {
                "label": "int",
                "type": "int"
            }
        },
        "rank": 1,
        "return_description": "The ID of an order, or 0 if the order could not be found."
    },
    "wc_get_order_item_meta": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_order_item_meta",
        "type": "fct",
        "summary": "WooCommerce Order Item Meta API - Get term meta.",
        "description": "",
        "inputs": {
            "item_id": {
                "label": "item_id",
                "type": "int",
                "requried": false,
                "description": "Item ID."
            },
            "key": {
                "label": "key",
                "type": "string",
                "requried": false,
                "description": "Meta key."
            },
            "single": {
                "label": "single",
                "type": "bool",
                "requried": false,
                "description": "Whether to return a single value. (default: true)."
            }
        },
        "outputs": {
            "return": {
                "label": "mixed",
                "type": "mixed"
            }
        },
        "rank": 1,
        "return_description": "mixed"
    },
    "wc_get_order_note": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_order_note",
        "type": "fct",
        "summary": "Get an order note.",
        "description": "",
        "inputs": {
            "data": {
                "label": "data",
                "type": "mixed",
                "requried": false,
                "description": "Note ID (or WP_Comment instance for internal use only)."
            }
        },
        "outputs": {
            "return": {
                "label": "mixed",
                "type": "mixed"
            }
        },
        "rank": 1,
        "return_description": "Object with order note details or null when does not exists."
    },
    "wc_get_order_notes": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_order_notes",
        "type": "fct",
        "summary": "Get order notes.",
        "description": "",
        "inputs": {
            "args": {
                "label": "args",
                "type": "array",
                "requried": false,
                "description": "<p>Query arguments {\n    Array of query parameters.<\/p>"
            }
        },
        "outputs": {
            "return": {
                "label": "mixed",
                "type": "mixed"
            }
        },
        "rank": 1,
        "return_description": "Array of stdClass objects with order notes details."
    },
    "wc_get_order_status_name": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_order_status_name",
        "type": "fct",
        "summary": "Get the nice name for an order status.",
        "description": "",
        "inputs": {
            "status": {
                "label": "status",
                "type": "string",
                "requried": false,
                "description": "Status."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_get_order_statuses": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_order_statuses",
        "type": "fct",
        "summary": "Get all order statuses.",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "array",
                "type": "array"
            }
        },
        "rank": 1,
        "return_description": "array"
    },
    "wc_get_order_type": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_order_type",
        "type": "fct",
        "summary": "Get an order type by post type name.",
        "description": "",
        "inputs": {
            "type": {
                "label": "type",
                "type": "string",
                "requried": false,
                "description": "Post type name."
            }
        },
        "outputs": {
            "return": {
                "label": "mixed",
                "type": "mixed"
            }
        },
        "rank": 1,
        "return_description": "Details about the order type."
    },
    "wc_get_order_types": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_order_types",
        "type": "fct",
        "summary": "Get all registered order types.",
        "description": "",
        "inputs": {
            "for": {
                "label": "for",
                "type": "string",
                "requried": false,
                "description": "<p>Optionally define what you are getting order types for so\n                    only relevant types are returned.\n                    e.g. for 'order-meta-boxes', 'order-count'.<\/p>"
            }
        },
        "outputs": {
            "return": {
                "label": "array",
                "type": "array"
            }
        },
        "rank": 1,
        "return_description": "array"
    },
    "wc_get_orders": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_orders",
        "type": "fct",
        "summary": "Standard way of retrieving orders based on certain parameters.This function should be used for order retrieval so that when we move tocustom tables, functions still work.Args and usage: https:\/\/github.com\/woocommerce\/woocommerce\/wiki\/wc_get_orders-and-WC_Order_Query",
        "description": "",
        "inputs": {
            "args": {
                "label": "args",
                "type": "array",
                "requried": false,
                "description": "Array of args (above)."
            }
        },
        "outputs": {
            "return": {
                "label": "mixed",
                "type": "mixed"
            }
        },
        "rank": 1,
        "return_description": "Number of pages and an array of order objects if                            paginate is true, or just an array of values."
    },
    "wc_get_page_children": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_page_children",
        "type": "fct",
        "summary": "Recursively get page children.",
        "description": "",
        "inputs": {
            "page_id": {
                "label": "page_id",
                "type": "int",
                "requried": false,
                "description": "Page ID."
            }
        },
        "outputs": {
            "return": {
                "label": "mixed",
                "type": "mixed"
            }
        },
        "rank": 1,
        "return_description": "int[]"
    },
    "wc_get_page_id": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_page_id",
        "type": "fct",
        "summary": "Retrieve page ids - used for myaccount, edit_address, shop, cart, checkout, pay, view_order, terms. returns -1 if no page is found.",
        "description": "",
        "inputs": {
            "page": {
                "label": "page",
                "type": "string",
                "requried": false,
                "description": "Page slug."
            }
        },
        "outputs": {
            "return": {
                "label": "int",
                "type": "int"
            }
        },
        "rank": 1,
        "return_description": "int"
    },
    "wc_get_page_permalink": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_page_permalink",
        "type": "fct",
        "summary": "Retrieve page permalink.",
        "description": "",
        "inputs": {
            "page": {
                "label": "page",
                "type": "string",
                "requried": false,
                "description": "page slug."
            },
            "fallback": {
                "label": "fallback",
                "type": "mixed",
                "requried": false,
                "description": "Fallback URL if page is not set. Defaults to home URL. @since 3.4.0."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_get_payment_gateway_by_order": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_payment_gateway_by_order",
        "type": "fct",
        "summary": "Get payment gateway class by order data.",
        "description": "",
        "inputs": {
            "order": {
                "label": "order",
                "type": "mixed",
                "requried": false,
                "description": "Order instance."
            }
        },
        "outputs": {
            "return": {
                "label": "mixed",
                "type": "mixed"
            }
        },
        "rank": 1,
        "return_description": "WC_Payment_Gateway|bool"
    },
    "wc_get_permalink_structure": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_permalink_structure",
        "type": "fct",
        "summary": "Get permalink settings for things like products and taxonomies.As of 3.3.0, the permalink settings are stored to the option instead ofbeing blank and inheritting from the locale. This speeds up page loadingtimes by negating the need to switch locales on each page load.This is more inline with WP core behavior which does not localize slugs.",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "array",
                "type": "array"
            }
        },
        "rank": 1,
        "return_description": "array"
    },
    "wc_get_post_data_by_key": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_post_data_by_key",
        "type": "fct",
        "summary": "Get an item of post data if set, otherwise return a default value.",
        "description": "",
        "inputs": {
            "key": {
                "label": "key",
                "type": "string",
                "requried": false,
                "description": "Meta key."
            },
            "default": {
                "label": "default",
                "type": "string",
                "requried": false,
                "description": "Default value."
            }
        },
        "outputs": {
            "return": {
                "label": "mixed",
                "type": "mixed"
            }
        },
        "rank": 1,
        "return_description": "Value sanitized by wc_clean."
    },
    "wc_get_price_decimal_separator": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_price_decimal_separator",
        "type": "fct",
        "summary": "Return the decimal separator for prices.",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_get_price_decimals": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_price_decimals",
        "type": "fct",
        "summary": "Return the number of decimals after the decimal point.",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "int",
                "type": "int"
            }
        },
        "rank": 1,
        "return_description": "int"
    },
    "wc_get_price_excluding_tax": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_price_excluding_tax",
        "type": "fct",
        "summary": "For a given product, and optionally price\/qty, work out the price with tax excluded, based on store settings.",
        "description": "",
        "inputs": {
            "product": {
                "label": "product",
                "type": "mixed",
                "requried": false,
                "description": "WC_Product object."
            },
            "args": {
                "label": "args",
                "type": "array",
                "requried": false,
                "description": "Optional arguments to pass product quantity and price."
            }
        },
        "outputs": {
            "return": {
                "label": "float",
                "type": "float"
            }
        },
        "rank": 1,
        "return_description": "float"
    },
    "wc_get_price_html_from_text": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_price_html_from_text",
        "type": "fct",
        "summary": "Returns a 'from' prefix if you want to show where prices start at.",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_get_price_including_tax": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_price_including_tax",
        "type": "fct",
        "summary": "For a given product, and optionally price\/qty, work out the price with tax included, based on store settings.",
        "description": "",
        "inputs": {
            "product": {
                "label": "product",
                "type": "mixed",
                "requried": false,
                "description": "WC_Product object."
            },
            "args": {
                "label": "args",
                "type": "array",
                "requried": false,
                "description": "Optional arguments to pass product quantity and price."
            }
        },
        "outputs": {
            "return": {
                "label": "float",
                "type": "float"
            }
        },
        "rank": 1,
        "return_description": "float"
    },
    "wc_get_price_thousand_separator": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_price_thousand_separator",
        "type": "fct",
        "summary": "Return the thousand separator for prices.",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_get_price_to_display": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_price_to_display",
        "type": "fct",
        "summary": "Returns the price including or excluding tax, based on the 'woocommerce_tax_display_shop' setting.",
        "description": "",
        "inputs": {
            "product": {
                "label": "product",
                "type": "mixed",
                "requried": false,
                "description": "WC_Product object."
            },
            "args": {
                "label": "args",
                "type": "array",
                "requried": false,
                "description": "Optional arguments to pass product quantity and price."
            }
        },
        "outputs": {
            "return": {
                "label": "float",
                "type": "float"
            }
        },
        "rank": 1,
        "return_description": "float"
    },
    "wc_get_privacy_policy_text": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_privacy_policy_text",
        "type": "fct",
        "summary": "Get the privacy policy text, if set.",
        "description": "",
        "inputs": {
            "type": {
                "label": "type",
                "type": "string",
                "requried": false,
                "description": "Type of policy to load. Valid values include registration and checkout."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_get_product": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_product",
        "type": "fct",
        "summary": "Main function for returning products, uses the WC_Product_Factory class.",
        "description": "",
        "inputs": {
            "the_product": {
                "label": "the_product",
                "type": "mixed",
                "requried": false,
                "description": "Post object or post ID of the product."
            },
            "deprecated": {
                "label": "deprecated",
                "type": "array",
                "requried": false,
                "description": "Previously used to pass arguments to the factory, e.g. to force a type."
            }
        },
        "outputs": {
            "return": {
                "label": "mixed",
                "type": "mixed"
            }
        },
        "rank": 1,
        "return_description": "WC_Product|null|false"
    },
    "wc_get_product_attachment_props": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_product_attachment_props",
        "type": "fct",
        "summary": "Gets data about an attachment, such as alt text and captions.",
        "description": "",
        "inputs": {
            "attachment_id": {
                "label": "attachment_id",
                "type": "mixed",
                "requried": false,
                "description": "Attachment ID."
            },
            "product": {
                "label": "product",
                "type": "mixed",
                "requried": false,
                "description": "WC_Product object."
            }
        },
        "outputs": {
            "return": {
                "label": "array",
                "type": "array"
            }
        },
        "rank": 1,
        "return_description": "array"
    },
    "wc_get_product_backorder_options": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_product_backorder_options",
        "type": "fct",
        "summary": "Get backorder options.",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "array",
                "type": "array"
            }
        },
        "rank": 1,
        "return_description": "array"
    },
    "wc_get_product_cat_class": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_product_cat_class",
        "type": "fct",
        "summary": "Get the classes for the product cat div.",
        "description": "",
        "inputs": {
            "class": {
                "label": "class",
                "type": "mixed",
                "requried": false,
                "description": "One or more classes to add to the class list."
            },
            "category": {
                "label": "category",
                "type": "object",
                "requried": false,
                "description": "object Optional."
            }
        },
        "outputs": {
            "return": {
                "label": "array",
                "type": "array"
            }
        },
        "rank": 1,
        "return_description": "array"
    },
    "wc_get_product_cat_ids": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_product_cat_ids",
        "type": "fct",
        "summary": "Get all product cats for a product by ID, including hierarchy",
        "description": "",
        "inputs": {
            "product_id": {
                "label": "product_id",
                "type": "int",
                "requried": false,
                "description": "Product ID."
            }
        },
        "outputs": {
            "return": {
                "label": "array",
                "type": "array"
            }
        },
        "rank": 1,
        "return_description": "array"
    },
    "wc_get_product_category_list": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_product_category_list",
        "type": "fct",
        "summary": "Returns the product categories in a list.",
        "description": "",
        "inputs": {
            "product_id": {
                "label": "product_id",
                "type": "int",
                "requried": false,
                "description": "Product ID."
            },
            "sep": {
                "label": "sep",
                "type": "string",
                "requried": false,
                "description": "(default: ', ')."
            },
            "before": {
                "label": "before",
                "type": "string",
                "requried": false,
                "description": "(default: '')."
            },
            "after": {
                "label": "after",
                "type": "string",
                "requried": false,
                "description": "(default: '')."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_get_product_class": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_product_class",
        "type": "fct",
        "summary": "Retrieves the classes for the post div as an array.This method was modified from WordPress's get_post_class() to allow the removal of taxonomies(for performance reasons).Previously wc_product_post_class was hooked into post_class. That still happens, but this functionnegates the need for it and thus unhooks it when running the post_class hook. @since 3.6.0",
        "description": "",
        "inputs": {
            "class": {
                "label": "class",
                "type": "mixed",
                "requried": false,
                "description": "One or more classes to add to the class list."
            },
            "product_id": {
                "label": "product_id",
                "type": "mixed",
                "requried": false,
                "description": "Product ID or product object."
            }
        },
        "outputs": {
            "return": {
                "label": "array",
                "type": "array"
            }
        },
        "rank": 1,
        "return_description": "array"
    },
    "wc_get_product_coupon_types": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_product_coupon_types",
        "type": "fct",
        "summary": "Coupon types that apply to individual products. Controls which validation rules will apply.",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "array",
                "type": "array"
            }
        },
        "rank": 1,
        "return_description": "array"
    },
    "wc_get_product_id_by_sku": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_product_id_by_sku",
        "type": "fct",
        "summary": "Get product ID by SKU.",
        "description": "",
        "inputs": {
            "sku": {
                "label": "sku",
                "type": "string",
                "requried": false,
                "description": "Product SKU."
            }
        },
        "outputs": {
            "return": {
                "label": "int",
                "type": "int"
            }
        },
        "rank": 1,
        "return_description": "int"
    },
    "wc_get_product_ids_on_sale": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_product_ids_on_sale",
        "type": "fct",
        "summary": "Function that returns an array containing the IDs of the products that are on sale.",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "array",
                "type": "array"
            }
        },
        "rank": 1,
        "return_description": "array"
    },
    "wc_get_product_stock_status_options": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_product_stock_status_options",
        "type": "fct",
        "summary": "Get stock status options.",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "array",
                "type": "array"
            }
        },
        "rank": 1,
        "return_description": "array"
    },
    "wc_get_product_tag_list": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_product_tag_list",
        "type": "fct",
        "summary": "Returns the product tags in a list.",
        "description": "",
        "inputs": {
            "product_id": {
                "label": "product_id",
                "type": "int",
                "requried": false,
                "description": "Product ID."
            },
            "sep": {
                "label": "sep",
                "type": "string",
                "requried": false,
                "description": "(default: ', ')."
            },
            "before": {
                "label": "before",
                "type": "string",
                "requried": false,
                "description": "(default: '')."
            },
            "after": {
                "label": "after",
                "type": "string",
                "requried": false,
                "description": "(default: '')."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_get_product_tax_class_options": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_product_tax_class_options",
        "type": "fct",
        "summary": "Get product tax class options.",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "array",
                "type": "array"
            }
        },
        "rank": 1,
        "return_description": "array"
    },
    "wc_get_product_taxonomy_class": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_product_taxonomy_class",
        "type": "fct",
        "summary": "Get product taxonomy HTML classes.",
        "description": "",
        "inputs": {
            "term_ids": {
                "label": "term_ids",
                "type": "array",
                "requried": false,
                "description": "Array of terms IDs or objects."
            },
            "taxonomy": {
                "label": "taxonomy",
                "type": "string",
                "requried": false,
                "description": "Taxonomy."
            }
        },
        "outputs": {
            "return": {
                "label": "array",
                "type": "array"
            }
        },
        "rank": 1,
        "return_description": "array"
    },
    "wc_get_product_term_ids": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_product_term_ids",
        "type": "fct",
        "summary": "Retrieves product term ids for a taxonomy.",
        "description": "",
        "inputs": {
            "product_id": {
                "label": "product_id",
                "type": "int",
                "requried": false,
                "description": "Product ID."
            },
            "taxonomy": {
                "label": "taxonomy",
                "type": "string",
                "requried": false,
                "description": "Taxonomy slug."
            }
        },
        "outputs": {
            "return": {
                "label": "array",
                "type": "array"
            }
        },
        "rank": 1,
        "return_description": "array"
    },
    "wc_get_product_terms": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_product_terms",
        "type": "fct",
        "summary": "Wrapper used to get terms for a product.",
        "description": "",
        "inputs": {
            "product_id": {
                "label": "product_id",
                "type": "int",
                "requried": false,
                "description": "Product ID."
            },
            "taxonomy": {
                "label": "taxonomy",
                "type": "string",
                "requried": false,
                "description": "Taxonomy slug."
            },
            "args": {
                "label": "args",
                "type": "array",
                "requried": false,
                "description": "Query arguments."
            }
        },
        "outputs": {
            "return": {
                "label": "array",
                "type": "array"
            }
        },
        "rank": 1,
        "return_description": "array"
    },
    "wc_get_product_types": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_product_types",
        "type": "fct",
        "summary": "Get product types.",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "array",
                "type": "array"
            }
        },
        "rank": 1,
        "return_description": "array"
    },
    "wc_get_product_variation_attributes": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_product_variation_attributes",
        "type": "fct",
        "summary": "Get attibutes\/data for an individual variation from the database and maintain it's integrity.",
        "description": "",
        "inputs": {
            "variation_id": {
                "label": "variation_id",
                "type": "int",
                "requried": false,
                "description": "Variation ID."
            }
        },
        "outputs": {
            "return": {
                "label": "array",
                "type": "array"
            }
        },
        "rank": 1,
        "return_description": "array"
    },
    "wc_get_product_visibility_options": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_product_visibility_options",
        "type": "fct",
        "summary": "Get product visibility options.",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "array",
                "type": "array"
            }
        },
        "rank": 1,
        "return_description": "array"
    },
    "wc_get_product_visibility_term_ids": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_product_visibility_term_ids",
        "type": "fct",
        "summary": "Get full list of product visibilty term ids.",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "mixed",
                "type": "mixed"
            }
        },
        "rank": 1,
        "return_description": "int[]"
    },
    "wc_get_products": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_products",
        "type": "fct",
        "summary": "Standard way of retrieving products based on certain parameters.This function should be used for product retrieval so that we have a data agnosticway to get a list of products.Args and usage: https:\/\/github.com\/woocommerce\/woocommerce\/wiki\/wc_get_products-and-WC_Product_Query",
        "description": "",
        "inputs": {
            "args": {
                "label": "args",
                "type": "array",
                "requried": false,
                "description": "Array of args (above)."
            }
        },
        "outputs": {
            "return": {
                "label": "mixed",
                "type": "mixed"
            }
        },
        "rank": 1,
        "return_description": "Number of pages and an array of product objects if                            paginate is true, or just an array of values."
    },
    "wc_get_rating_html": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_rating_html",
        "type": "fct",
        "summary": "Get HTML for ratings.",
        "description": "",
        "inputs": {
            "rating": {
                "label": "rating",
                "type": "float",
                "requried": false,
                "description": "Rating being shown."
            },
            "count": {
                "label": "count",
                "type": "int",
                "requried": false,
                "description": "Total number of ratings."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_get_raw_referer": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_raw_referer",
        "type": "fct",
        "summary": "Retrieves unvalidated referer from '_wp_http_referer' or HTTP referer.Do not use for redirects, use wp_get_referer() instead.",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "mixed",
                "type": "mixed"
            }
        },
        "rank": 1,
        "return_description": "Referer URL on success, false on failure."
    },
    "wc_get_related_products": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_related_products",
        "type": "fct",
        "summary": "Get related products based on product category and tags.",
        "description": "",
        "inputs": {
            "product_id": {
                "label": "product_id",
                "type": "int",
                "requried": false,
                "description": "Product ID."
            },
            "limit": {
                "label": "limit",
                "type": "int",
                "requried": false,
                "description": "Limit of results."
            },
            "exclude_ids": {
                "label": "exclude_ids",
                "type": "array",
                "requried": false,
                "description": "Exclude IDs from the results."
            }
        },
        "outputs": {
            "return": {
                "label": "array",
                "type": "array"
            }
        },
        "rank": 1,
        "return_description": "array"
    },
    "wc_get_relative_url": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_relative_url",
        "type": "fct",
        "summary": "Make a URL relative, if possible.",
        "description": "",
        "inputs": {
            "url": {
                "label": "url",
                "type": "string",
                "requried": false,
                "description": "URL to make relative."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_get_rounding_precision": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_rounding_precision",
        "type": "fct",
        "summary": "Get rounding precision for internal WC calculations.Will increase the precision of wc_get_price_decimals by 2 decimals, unless WC_ROUNDING_PRECISION is set to a higher number.",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "int",
                "type": "int"
            }
        },
        "rank": 1,
        "return_description": "int"
    },
    "wc_get_server_database_version": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_server_database_version",
        "type": "fct",
        "summary": "Retrieves the MySQL server version. Based on $wpdb.",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "array",
                "type": "array"
            }
        },
        "rank": 1,
        "return_description": "Vesion information."
    },
    "wc_get_shipping_method_count": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_shipping_method_count",
        "type": "fct",
        "summary": "Gets number of shipping methods currently enabled. Used to identify ifshipping is configured.",
        "description": "",
        "inputs": {
            "include_legacy": {
                "label": "include_legacy",
                "type": "bool",
                "requried": false,
                "description": "Count legacy shipping methods too."
            }
        },
        "outputs": {
            "return": {
                "label": "int",
                "type": "int"
            }
        },
        "rank": 1,
        "return_description": "int"
    },
    "wc_get_shipping_zone": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_shipping_zone",
        "type": "fct",
        "summary": "Get the shipping zone matching a given package from the cart.",
        "description": "",
        "inputs": {
            "package": {
                "label": "package",
                "type": "array",
                "requried": false,
                "description": "Shipping package."
            }
        },
        "outputs": {
            "return": {
                "label": "mixed",
                "type": "mixed"
            }
        },
        "rank": 1,
        "return_description": "WC_Shipping_Zone"
    },
    "wc_get_star_rating_html": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_star_rating_html",
        "type": "fct",
        "summary": "Get HTML for star rating.",
        "description": "",
        "inputs": {
            "rating": {
                "label": "rating",
                "type": "float",
                "requried": false,
                "description": "Rating being shown."
            },
            "count": {
                "label": "count",
                "type": "int",
                "requried": false,
                "description": "Total number of ratings."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_get_stock_html": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_stock_html",
        "type": "fct",
        "summary": "Get HTML to show product stock.",
        "description": "",
        "inputs": {
            "product": {
                "label": "product",
                "type": "mixed",
                "requried": false,
                "description": "Product Object."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_get_string_before_colon": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_string_before_colon",
        "type": "fct",
        "summary": "Get part of a string before :.Used for example in shipping methods ids where they take the formatmethod_id:instance_id",
        "description": "",
        "inputs": {
            "string": {
                "label": "string",
                "type": "string",
                "requried": false,
                "description": "String to extract."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_get_tax_class_by_tax_id": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_tax_class_by_tax_id",
        "type": "fct",
        "summary": "Get tax class by tax id.",
        "description": "",
        "inputs": {
            "tax_id": {
                "label": "tax_id",
                "type": "int",
                "requried": false,
                "description": "Tax ID."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_get_tax_rounding_mode": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_tax_rounding_mode",
        "type": "fct",
        "summary": "Get rounding mode for internal tax calculations.",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "int",
                "type": "int"
            }
        },
        "rank": 1,
        "return_description": "int"
    },
    "wc_get_template": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_template",
        "type": "efct",
        "summary": "Get other templates (e.g. product attributes) passing attributes and including the file.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "template_name": {
                "label": "template_name",
                "type": "string",
                "requried": false,
                "description": "Template name."
            },
            "args": {
                "label": "args",
                "type": "array",
                "requried": false,
                "description": "Arguments. (default: array)."
            },
            "template_path": {
                "label": "template_path",
                "type": "string",
                "requried": false,
                "description": "Template path. (default: '')."
            },
            "default_path": {
                "label": "default_path",
                "type": "string",
                "requried": false,
                "description": "Default path. (default: '')."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_get_template_html": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_template_html",
        "type": "fct",
        "summary": "Like wc_get_template, but returns the HTML instead of outputting.",
        "description": "",
        "inputs": {
            "template_name": {
                "label": "template_name",
                "type": "string",
                "requried": false,
                "description": "Template name."
            },
            "args": {
                "label": "args",
                "type": "array",
                "requried": false,
                "description": "Arguments. (default: array)."
            },
            "template_path": {
                "label": "template_path",
                "type": "string",
                "requried": false,
                "description": "Template path. (default: '')."
            },
            "default_path": {
                "label": "default_path",
                "type": "string",
                "requried": false,
                "description": "Default path. (default: '')."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_get_template_part": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_template_part",
        "type": "efct",
        "summary": "Get template part (for templates like the shop-loop).WC_TEMPLATE_DEBUG_MODE will prevent overrides in themes from taking priority.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "slug": {
                "label": "slug",
                "type": "mixed",
                "requried": false,
                "description": "Template slug."
            },
            "name": {
                "label": "name",
                "type": "string",
                "requried": false,
                "description": "Template name (default: '')."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_get_term_product_ids": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_term_product_ids",
        "type": "fct",
        "summary": "Return products in a given term, and cache value.To keep in sync, product_count will be cleared on \"set_object_terms\".",
        "description": "",
        "inputs": {
            "term_id": {
                "label": "term_id",
                "type": "int",
                "requried": false,
                "description": "Term ID."
            },
            "taxonomy": {
                "label": "taxonomy",
                "type": "string",
                "requried": false,
                "description": "Taxonomy."
            }
        },
        "outputs": {
            "return": {
                "label": "array",
                "type": "array"
            }
        },
        "rank": 1,
        "return_description": "array"
    },
    "wc_get_terms_and_conditions_checkbox_text": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_terms_and_conditions_checkbox_text",
        "type": "fct",
        "summary": "Get the terms and conditons checkbox text, if set.",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_get_text_attributes": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_text_attributes",
        "type": "fct",
        "summary": "Gets text attributes from a string.",
        "description": "",
        "inputs": {
            "raw_attributes": {
                "label": "raw_attributes",
                "type": "string",
                "requried": false,
                "description": "Raw attributes."
            }
        },
        "outputs": {
            "return": {
                "label": "array",
                "type": "array"
            }
        },
        "rank": 1,
        "return_description": "array"
    },
    "wc_get_text_attributes_filter_callback": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_text_attributes_filter_callback",
        "type": "fct",
        "summary": "See if an attribute is actually valid.",
        "description": "",
        "inputs": {
            "value": {
                "label": "value",
                "type": "string",
                "requried": false,
                "description": "Value."
            }
        },
        "outputs": {
            "return": {
                "label": "bool",
                "type": "bool"
            }
        },
        "rank": 1,
        "return_description": "bool"
    },
    "wc_get_theme_slug_for_templates": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_theme_slug_for_templates",
        "type": "fct",
        "summary": "Get a slug identifying the current theme.",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_get_theme_support": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_theme_support",
        "type": "fct",
        "summary": "Return \"theme support\" values from the current theme, if set.",
        "description": "",
        "inputs": {
            "prop": {
                "label": "prop",
                "type": "string",
                "requried": false,
                "description": "Name of prop (or key::subkey for arrays of props) if you want a specific value. Leave blank to get all props as an array."
            },
            "default": {
                "label": "default",
                "type": "mixed",
                "requried": false,
                "description": "Optional value to return if the theme does not declare support for a prop."
            }
        },
        "outputs": {
            "return": {
                "label": "mixed",
                "type": "mixed"
            }
        },
        "rank": 1,
        "return_description": "Value of prop(s)."
    },
    "wc_get_user_agent": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_user_agent",
        "type": "fct",
        "summary": "Get user agent string.",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_get_var": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_var",
        "type": "fct",
        "summary": "Get data if set, otherwise return a default value or null. Prevents notices when data is not set.",
        "description": "",
        "inputs": {
            "& $var": {
                "label": "& $var",
                "type": "mixed",
                "requried": false,
                "description": "Variable."
            },
            "default": {
                "label": "default",
                "type": "string",
                "requried": false,
                "description": "Default value."
            }
        },
        "outputs": {
            "return": {
                "label": "mixed",
                "type": "mixed"
            }
        },
        "rank": 1,
        "return_description": "mixed"
    },
    "wc_get_webhook": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_webhook",
        "type": "fct",
        "summary": "Get webhook.",
        "description": "",
        "inputs": {
            "id": {
                "label": "id",
                "type": "mixed",
                "requried": false,
                "description": "Webhook ID or object."
            }
        },
        "outputs": {
            "return": {
                "label": "mixed",
                "type": "mixed"
            }
        },
        "rank": 1,
        "return_description": "WC_Webhook|null"
    },
    "wc_get_webhook_rest_api_versions": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_webhook_rest_api_versions",
        "type": "fct",
        "summary": "Get webhoook REST API versions.",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "array",
                "type": "array"
            }
        },
        "rank": 1,
        "return_description": "array"
    },
    "wc_get_webhook_statuses": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_webhook_statuses",
        "type": "fct",
        "summary": "Get Webhook statuses.",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "array",
                "type": "array"
            }
        },
        "rank": 1,
        "return_description": "array"
    },
    "wc_get_weight": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_weight",
        "type": "fct",
        "summary": "Normalise weights, unify to kg then convert to wanted unit value.Usage:wc_get_weight(55, 'kg');wc_get_weight(55, 'kg', 'lbs');",
        "description": "",
        "inputs": {
            "weight": {
                "label": "weight",
                "type": "mixed",
                "requried": false,
                "description": "Weight."
            },
            "to_unit": {
                "label": "to_unit",
                "type": "string",
                "requried": false,
                "description": "<p>Unit to convert to.\n                            Options: 'g', 'kg', 'lbs', 'oz'.<\/p>"
            },
            "from_unit": {
                "label": "from_unit",
                "type": "string",
                "requried": false,
                "description": "<p>Unit to convert from.\n                            Defaults to ''.\n                            Options: 'g', 'kg', 'lbs', 'oz'.<\/p>"
            }
        },
        "outputs": {
            "return": {
                "label": "float",
                "type": "float"
            }
        },
        "rank": 1,
        "return_description": "float"
    },
    "wc_get_wildcard_postcodes": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_get_wildcard_postcodes",
        "type": "fct",
        "summary": "Return a list of potential postcodes for wildcard searching.",
        "description": "",
        "inputs": {
            "postcode": {
                "label": "postcode",
                "type": "string",
                "requried": false,
                "description": "Postcode."
            },
            "country": {
                "label": "country",
                "type": "string",
                "requried": false,
                "description": "Country to format postcode for matching."
            }
        },
        "outputs": {
            "return": {
                "label": "mixed",
                "type": "mixed"
            }
        },
        "rank": 1,
        "return_description": "string[]"
    },
    "wc_has_custom_attribute_types": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_has_custom_attribute_types",
        "type": "fct",
        "summary": "Check if there are custom attribute types.",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "bool",
                "type": "bool"
            }
        },
        "rank": 1,
        "return_description": "True if there are custom types, otherwise false."
    },
    "wc_has_notice": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_has_notice",
        "type": "fct",
        "summary": "Check if a notice has already been added.",
        "description": "",
        "inputs": {
            "message": {
                "label": "message",
                "type": "string",
                "requried": false,
                "description": "The text to display in the notice."
            },
            "notice_type": {
                "label": "notice_type",
                "type": "string",
                "requried": false,
                "description": "Optional. The name of the notice type - either error, success or notice."
            }
        },
        "outputs": {
            "return": {
                "label": "bool",
                "type": "bool"
            }
        },
        "rank": 1,
        "return_description": "bool"
    },
    "wc_help_tip": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_help_tip",
        "type": "fct",
        "summary": "Display a WooCommerce help tip.",
        "description": "",
        "inputs": {
            "tip": {
                "label": "tip",
                "type": "string",
                "requried": false,
                "description": "Help tip text."
            },
            "allow_html": {
                "label": "allow_html",
                "type": "bool",
                "requried": false,
                "description": "Allow sanitized HTML if true or escape."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_hex_darker": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_hex_darker",
        "type": "fct",
        "summary": "Make HEX color darker.",
        "description": "",
        "inputs": {
            "color": {
                "label": "color",
                "type": "mixed",
                "requried": false,
                "description": "Color."
            },
            "factor": {
                "label": "factor",
                "type": "int",
                "requried": false,
                "description": "<p>Darker factor.\n                     Defaults to 30.<\/p>"
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_hex_is_light": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_hex_is_light",
        "type": "fct",
        "summary": "Determine whether a hex color is light.",
        "description": "",
        "inputs": {
            "color": {
                "label": "color",
                "type": "mixed",
                "requried": false,
                "description": "Color."
            }
        },
        "outputs": {
            "return": {
                "label": "bool",
                "type": "bool"
            }
        },
        "rank": 1,
        "return_description": "True if a light color."
    },
    "wc_hex_lighter": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_hex_lighter",
        "type": "fct",
        "summary": "Make HEX color lighter.",
        "description": "",
        "inputs": {
            "color": {
                "label": "color",
                "type": "mixed",
                "requried": false,
                "description": "Color."
            },
            "factor": {
                "label": "factor",
                "type": "int",
                "requried": false,
                "description": "<p>Lighter factor.\n                     Defaults to 30.<\/p>"
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_implode_html_attributes": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_implode_html_attributes",
        "type": "fct",
        "summary": "Implode and escape HTML attributes for output.",
        "description": "",
        "inputs": {
            "raw_attributes": {
                "label": "raw_attributes",
                "type": "array",
                "requried": false,
                "description": "Attribute name value pairs."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_implode_text_attributes": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_implode_text_attributes",
        "type": "fct",
        "summary": "Implode an array of attributes using WC_DELIMITER.",
        "description": "",
        "inputs": {
            "attributes": {
                "label": "attributes",
                "type": "array",
                "requried": false,
                "description": "Attributes list."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_increase_stock_levels": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_increase_stock_levels",
        "type": "efct",
        "summary": "Increase stock levels for items within an order.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "order_id": {
                "label": "order_id",
                "type": "mixed",
                "requried": false,
                "description": "Order ID or order instance."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_is_active_theme": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_is_active_theme",
        "type": "fct",
        "summary": "See if theme\/s is activate or not.",
        "description": "",
        "inputs": {
            "theme": {
                "label": "theme",
                "type": "mixed",
                "requried": false,
                "description": "Theme name or array of theme names to check."
            }
        },
        "outputs": {
            "return": {
                "label": "bool",
                "type": "bool"
            }
        },
        "rank": 1,
        "return_description": "boolean"
    },
    "wc_is_attribute_in_product_name": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_is_attribute_in_product_name",
        "type": "fct",
        "summary": "Check if an attribute is included in the attributes area of a variation name.",
        "description": "",
        "inputs": {
            "attribute": {
                "label": "attribute",
                "type": "string",
                "requried": false,
                "description": "Attribute value to check for."
            },
            "name": {
                "label": "name",
                "type": "string",
                "requried": false,
                "description": "Product name to check in."
            }
        },
        "outputs": {
            "return": {
                "label": "bool",
                "type": "bool"
            }
        },
        "rank": 1,
        "return_description": "bool"
    },
    "wc_is_external_resource": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_is_external_resource",
        "type": "fct",
        "summary": "See if a resource is remote.",
        "description": "",
        "inputs": {
            "url": {
                "label": "url",
                "type": "string",
                "requried": false,
                "description": "URL to check."
            }
        },
        "outputs": {
            "return": {
                "label": "bool",
                "type": "bool"
            }
        },
        "rank": 1,
        "return_description": "bool"
    },
    "wc_is_order_status": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_is_order_status",
        "type": "fct",
        "summary": "See if a string is an order status.",
        "description": "",
        "inputs": {
            "maybe_status": {
                "label": "maybe_status",
                "type": "string",
                "requried": false,
                "description": "Status, including any wc- prefix."
            }
        },
        "outputs": {
            "return": {
                "label": "bool",
                "type": "bool"
            }
        },
        "rank": 1,
        "return_description": "bool"
    },
    "wc_is_valid_url": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_is_valid_url",
        "type": "fct",
        "summary": "Simple check for validating a URL, it must start with http:\/\/ or https:\/\/.and pass FILTER_VALIDATE_URL validation.",
        "description": "",
        "inputs": {
            "url": {
                "label": "url",
                "type": "string",
                "requried": false,
                "description": "to check."
            }
        },
        "outputs": {
            "return": {
                "label": "bool",
                "type": "bool"
            }
        },
        "rank": 1,
        "return_description": "bool"
    },
    "wc_is_webhook_valid_status": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_is_webhook_valid_status",
        "type": "fct",
        "summary": "Check if given status is a valid webhook status.",
        "description": "",
        "inputs": {
            "status": {
                "label": "status",
                "type": "string",
                "requried": false,
                "description": "Status to check."
            }
        },
        "outputs": {
            "return": {
                "label": "bool",
                "type": "bool"
            }
        },
        "rank": 1,
        "return_description": "bool"
    },
    "wc_is_webhook_valid_topic": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_is_webhook_valid_topic",
        "type": "fct",
        "summary": "Check if the given topic is a valid webhook topic, a topic is valid if:starts with action.woocommerce_ or action.wc_.it has a valid resource & event.",
        "description": "",
        "inputs": {
            "topic": {
                "label": "topic",
                "type": "string",
                "requried": false,
                "description": "Webhook topic."
            }
        },
        "outputs": {
            "return": {
                "label": "bool",
                "type": "bool"
            }
        },
        "rank": 1,
        "return_description": "bool"
    },
    "wc_kses_notice": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_kses_notice",
        "type": "fct",
        "summary": "Filters out the same tags as wp_kses_post, but allows tabindex for  element.",
        "description": "",
        "inputs": {
            "message": {
                "label": "message",
                "type": "string",
                "requried": false,
                "description": "Content to filter through kses."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_legacy_round_half_down": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_legacy_round_half_down",
        "type": "fct",
        "summary": "Round half down in PHP 5.2.",
        "description": "",
        "inputs": {
            "value": {
                "label": "value",
                "type": "float",
                "requried": false,
                "description": "Value to round."
            },
            "precision": {
                "label": "precision",
                "type": "int",
                "requried": false,
                "description": "Precision to round down to."
            }
        },
        "outputs": {
            "return": {
                "label": "float",
                "type": "float"
            }
        },
        "rank": 1,
        "return_description": "float"
    },
    "wc_let_to_num": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_let_to_num",
        "type": "fct",
        "summary": "Notation to numbers.This function transforms the php.ini notation for numbers (like '2M') to an integer.",
        "description": "",
        "inputs": {
            "size": {
                "label": "size",
                "type": "string",
                "requried": false,
                "description": "Size value."
            }
        },
        "outputs": {
            "return": {
                "label": "int",
                "type": "int"
            }
        },
        "rank": 1,
        "return_description": "int"
    },
    "wc_light_or_dark": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_light_or_dark",
        "type": "fct",
        "summary": "Detect if we should use a light or dark color on a background color.",
        "description": "",
        "inputs": {
            "color": {
                "label": "color",
                "type": "mixed",
                "requried": false,
                "description": "Color."
            },
            "dark": {
                "label": "dark",
                "type": "string",
                "requried": false,
                "description": "<p>Darkest reference.\n                     Defaults to '#000000'.<\/p>"
            },
            "light": {
                "label": "light",
                "type": "string",
                "requried": false,
                "description": "<p>Lightest reference.\n                     Defaults to '#FFFFFF'.<\/p>"
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_list_pages": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_list_pages",
        "type": "fct",
        "summary": "Fix active class in wp_list_pages for shop page.See details in https:\/\/github.com\/woocommerce\/woocommerce\/issues\/177.",
        "description": "",
        "inputs": {
            "pages": {
                "label": "pages",
                "type": "string",
                "requried": false,
                "description": "Pages list."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_list_pluck": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_list_pluck",
        "type": "fct",
        "summary": "Based on wp_list_pluck, this calls a method instead of returning a property.",
        "description": "",
        "inputs": {
            "list": {
                "label": "list",
                "type": "array",
                "requried": false,
                "description": "List of objects or arrays."
            },
            "callback_or_field": {
                "label": "callback_or_field",
                "type": "mixed",
                "requried": false,
                "description": "Callback method from the object to place instead of the entire object."
            },
            "index_key": {
                "label": "index_key",
                "type": "mixed",
                "requried": false,
                "description": "<p>Optional. Field from the object to use as keys for the new array.\n                                     Default null.<\/p>"
            }
        },
        "outputs": {
            "return": {
                "label": "array",
                "type": "array"
            }
        },
        "rank": 1,
        "return_description": "Array of values."
    },
    "wc_load_webhooks": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_load_webhooks",
        "type": "fct",
        "summary": "Load webhooks.",
        "description": "",
        "inputs": {
            "status": {
                "label": "status",
                "type": "string",
                "requried": false,
                "description": "Optional - status to filter results by. Must be a key in return value of @see wc_get_webhook_statuses(). @since 3.5.0."
            },
            "limit": {
                "label": "limit",
                "type": "mixed",
                "requried": false,
                "description": "Limit number of webhooks loaded. @since 3.6.0."
            }
        },
        "outputs": {
            "return": {
                "label": "bool",
                "type": "bool"
            }
        },
        "rank": 1,
        "return_description": "bool"
    },
    "wc_locate_template": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_locate_template",
        "type": "fct",
        "summary": "Locate a template and return the path for inclusion.This is the load order:yourtheme\/$template_path\/$template_nameyourtheme\/$template_name$default_path\/$template_name",
        "description": "",
        "inputs": {
            "template_name": {
                "label": "template_name",
                "type": "string",
                "requried": false,
                "description": "Template name."
            },
            "template_path": {
                "label": "template_path",
                "type": "string",
                "requried": false,
                "description": "Template path. (default: '')."
            },
            "default_path": {
                "label": "default_path",
                "type": "string",
                "requried": false,
                "description": "Default path. (default: '')."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_logout_url": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_logout_url",
        "type": "fct",
        "summary": "Get logout endpoint.",
        "description": "",
        "inputs": {
            "redirect": {
                "label": "redirect",
                "type": "string",
                "requried": false,
                "description": "Redirect URL."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_lostpassword_url": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_lostpassword_url",
        "type": "fct",
        "summary": "Returns the url to the lost password endpoint url.",
        "description": "",
        "inputs": {
            "default_url": {
                "label": "default_url",
                "type": "string",
                "requried": false,
                "description": "Default lost password URL."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_mail": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_mail",
        "type": "efct",
        "summary": "Send HTML emails from WooCommerce.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "to": {
                "label": "to",
                "type": "mixed",
                "requried": false,
                "description": "Receiver."
            },
            "subject": {
                "label": "subject",
                "type": "mixed",
                "requried": false,
                "description": "Subject."
            },
            "message": {
                "label": "message",
                "type": "mixed",
                "requried": false,
                "description": "Message."
            },
            "headers": {
                "label": "headers",
                "type": "string",
                "requried": false,
                "description": "Headers. (default: \"Content-Type: text\/html\\r\\n\")."
            },
            "attachments": {
                "label": "attachments",
                "type": "string",
                "requried": false,
                "description": "Attachments. (default: \"\")."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_make_numeric_postcode": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_make_numeric_postcode",
        "type": "fct",
        "summary": "Make numeric postcode.Converts letters to numbers so we can do a simple range check on postcodes.E.g. PE30 becomes 16050300 (P = 16, E = 05, 3 = 03, 0 = 00)",
        "description": "",
        "inputs": {
            "postcode": {
                "label": "postcode",
                "type": "string",
                "requried": false,
                "description": "Regular postcode."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_make_phone_clickable": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_make_phone_clickable",
        "type": "fct",
        "summary": "Convert plaintext phone number to clickable phone number.Remove formatting and allow \"+\".Example and specs: https:\/\/developer.mozilla.org\/en\/docs\/Web\/HTML\/Element\/a#Creating_a_phone_link",
        "description": "",
        "inputs": {
            "phone": {
                "label": "phone",
                "type": "string",
                "requried": false,
                "description": "Content to convert phone number."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "Content with converted phone number."
    },
    "wc_maybe_define_constant": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_maybe_define_constant",
        "type": "efct",
        "summary": "Define a constant if it is not already defined.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "name": {
                "label": "name",
                "type": "string",
                "requried": false,
                "description": "Constant name."
            },
            "value": {
                "label": "value",
                "type": "mixed",
                "requried": false,
                "description": "Value."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_maybe_increase_stock_levels": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_maybe_increase_stock_levels",
        "type": "efct",
        "summary": "When a payment is cancelled, restore stock.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "order_id": {
                "label": "order_id",
                "type": "int",
                "requried": false,
                "description": "Order ID."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_maybe_reduce_stock_levels": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_maybe_reduce_stock_levels",
        "type": "efct",
        "summary": "When a payment is complete, we can reduce stock levels for items within an order.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "order_id": {
                "label": "order_id",
                "type": "int",
                "requried": false,
                "description": "Order ID."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_maybe_store_user_agent": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_maybe_store_user_agent",
        "type": "efct",
        "summary": "Store user agents. Used for tracker.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "user_login": {
                "label": "user_login",
                "type": "string",
                "requried": false,
                "description": "User login."
            },
            "user": {
                "label": "user",
                "type": "mixed",
                "requried": false,
                "description": "User."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_meta_update_last_update_time": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_meta_update_last_update_time",
        "type": "efct",
        "summary": "Hooks into the update user meta function to set the user last updated timestamp.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "meta_id": {
                "label": "meta_id",
                "type": "int",
                "requried": false,
                "description": "ID of the meta object that was changed."
            },
            "user_id": {
                "label": "user_id",
                "type": "int",
                "requried": false,
                "description": "The user that was updated."
            },
            "meta_key": {
                "label": "meta_key",
                "type": "string",
                "requried": false,
                "description": "Name of the meta key that was changed."
            },
            "_meta_value": {
                "label": "_meta_value",
                "type": "string",
                "requried": false,
                "description": "Value of the meta that was changed."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_modify_editable_roles": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_modify_editable_roles",
        "type": "fct",
        "summary": "Modify the list of editable roles to prevent non-admin adding admin users.",
        "description": "",
        "inputs": {
            "roles": {
                "label": "roles",
                "type": "array",
                "requried": false,
                "description": "Roles."
            }
        },
        "outputs": {
            "return": {
                "label": "array",
                "type": "array"
            }
        },
        "rank": 1,
        "return_description": "array"
    },
    "wc_modify_map_meta_cap": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_modify_map_meta_cap",
        "type": "fct",
        "summary": "Modify capabilities to prevent non-admin users editing admin users.$args[0] will be the user being edited in this case.",
        "description": "",
        "inputs": {
            "caps": {
                "label": "caps",
                "type": "array",
                "requried": false,
                "description": "Array of caps."
            },
            "cap": {
                "label": "cap",
                "type": "string",
                "requried": false,
                "description": "Name of the cap we are checking."
            },
            "user_id": {
                "label": "user_id",
                "type": "int",
                "requried": false,
                "description": "ID of the user being checked against."
            },
            "args": {
                "label": "args",
                "type": "array",
                "requried": false,
                "description": "Arguments."
            }
        },
        "outputs": {
            "return": {
                "label": "array",
                "type": "array"
            }
        },
        "rank": 1,
        "return_description": "array"
    },
    "wc_ms_protect_download_rewite_rules": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_ms_protect_download_rewite_rules",
        "type": "fct",
        "summary": "Protect downloads from ms-files.php in multisite.",
        "description": "",
        "inputs": {
            "rewrite": {
                "label": "rewrite",
                "type": "string",
                "requried": false,
                "description": "rewrite rules."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_nav_menu_item_classes": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_nav_menu_item_classes",
        "type": "fct",
        "summary": "Fix active class in nav for shop page.",
        "description": "",
        "inputs": {
            "menu_items": {
                "label": "menu_items",
                "type": "array",
                "requried": false,
                "description": "Menu items."
            }
        },
        "outputs": {
            "return": {
                "label": "array",
                "type": "array"
            }
        },
        "rank": 1,
        "return_description": "array"
    },
    "wc_nav_menu_items": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_nav_menu_items",
        "type": "fct",
        "summary": "Hide menu items conditionally.",
        "description": "",
        "inputs": {
            "items": {
                "label": "items",
                "type": "array",
                "requried": false,
                "description": "Navigation items."
            }
        },
        "outputs": {
            "return": {
                "label": "array",
                "type": "array"
            }
        },
        "rank": 1,
        "return_description": "array"
    },
    "wc_no_js": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_no_js",
        "type": "efct",
        "summary": "NO JS handling.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_no_products_found": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_no_products_found",
        "type": "efct",
        "summary": "Handles the loop when no products were found\/no product exist.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_nocache_headers": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_nocache_headers",
        "type": "efct",
        "summary": "Wrapper for nocache_headers which also disables page caching.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_normalize_postcode": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_normalize_postcode",
        "type": "fct",
        "summary": "Normalize postcodes.Remove spaces and convert characters to uppercase.",
        "description": "",
        "inputs": {
            "postcode": {
                "label": "postcode",
                "type": "string",
                "requried": false,
                "description": "Postcode."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_notice_count": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_notice_count",
        "type": "fct",
        "summary": "Get the count of notices added, either for all notices (default) or for one.particular notice type specified by $notice_type.",
        "description": "",
        "inputs": {
            "notice_type": {
                "label": "notice_type",
                "type": "string",
                "requried": false,
                "description": "Optional. The name of the notice type - either error, success or notice."
            }
        },
        "outputs": {
            "return": {
                "label": "int",
                "type": "int"
            }
        },
        "rank": 1,
        "return_description": "int"
    },
    "wc_order_fully_refunded": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_order_fully_refunded",
        "type": "efct",
        "summary": "When refunding an order, create a refund line item if the partial refunds do not match order total.This is manual; no gateway refund will be performed.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "order_id": {
                "label": "order_id",
                "type": "int",
                "requried": false,
                "description": "Order ID."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_order_search": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_order_search",
        "type": "fct",
        "summary": "Search orders.",
        "description": "",
        "inputs": {
            "term": {
                "label": "term",
                "type": "string",
                "requried": false,
                "description": "Term to search."
            }
        },
        "outputs": {
            "return": {
                "label": "array",
                "type": "array"
            }
        },
        "rank": 1,
        "return_description": "List of orders ID."
    },
    "wc_orders_count": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_orders_count",
        "type": "fct",
        "summary": "Return the orders count of a specific order status.",
        "description": "",
        "inputs": {
            "status": {
                "label": "status",
                "type": "string",
                "requried": false,
                "description": "Status."
            }
        },
        "outputs": {
            "return": {
                "label": "int",
                "type": "int"
            }
        },
        "rank": 1,
        "return_description": "int"
    },
    "wc_page_endpoint_title": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_page_endpoint_title",
        "type": "fct",
        "summary": "Replace a page title with the endpoint title.",
        "description": "",
        "inputs": {
            "title": {
                "label": "title",
                "type": "string",
                "requried": false,
                "description": "Post title."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_page_noindex": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_page_noindex",
        "type": "efct",
        "summary": "Disable search engines indexing core, dynamic, cart\/checkout pages.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_parse_relative_date_option": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_parse_relative_date_option",
        "type": "fct",
        "summary": "Parse a relative date option from the settings API into a standard format.",
        "description": "",
        "inputs": {
            "raw_value": {
                "label": "raw_value",
                "type": "mixed",
                "requried": false,
                "description": "Value stored in DB."
            }
        },
        "outputs": {
            "return": {
                "label": "array",
                "type": "array"
            }
        },
        "rank": 1,
        "return_description": "Nicely formatted array with number and unit values."
    },
    "wc_paying_customer": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_paying_customer",
        "type": "efct",
        "summary": "Order Status completed - This is a paying customer.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "order_id": {
                "label": "order_id",
                "type": "int",
                "requried": false,
                "description": "Order ID."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_placeholder_img": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_placeholder_img",
        "type": "fct",
        "summary": "Get the placeholder image.Uses wp_get_attachment_image if using an attachment ID @since 3.6.0 to handle responsiveness.",
        "description": "",
        "inputs": {
            "size": {
                "label": "size",
                "type": "string",
                "requried": false,
                "description": "Image size."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_placeholder_img_src": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_placeholder_img_src",
        "type": "fct",
        "summary": "Get the placeholder image URL either from media, or use the fallback image.",
        "description": "",
        "inputs": {
            "size": {
                "label": "size",
                "type": "string",
                "requried": false,
                "description": "Thumbnail size to use."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_post_content_has_shortcode": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_post_content_has_shortcode",
        "type": "fct",
        "summary": "Checks whether the content passed contains a specific short code.",
        "description": "",
        "inputs": {
            "tag": {
                "label": "tag",
                "type": "string",
                "requried": false,
                "description": "Shortcode tag to check."
            }
        },
        "outputs": {
            "return": {
                "label": "bool",
                "type": "bool"
            }
        },
        "rank": 1,
        "return_description": "bool"
    },
    "wc_postcode_location_matcher": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_postcode_location_matcher",
        "type": "fct",
        "summary": "Used by shipping zones and taxes to compare a given $postcode to storedpostcodes to find matches for numerical ranges, and wildcards.",
        "description": "",
        "inputs": {
            "postcode": {
                "label": "postcode",
                "type": "string",
                "requried": false,
                "description": "Postcode you want to match against stored postcodes."
            },
            "objects": {
                "label": "objects",
                "type": "array",
                "requried": false,
                "description": "Array of postcode objects from Database."
            },
            "object_id_key": {
                "label": "object_id_key",
                "type": "string",
                "requried": false,
                "description": "DB column name for the ID."
            },
            "object_compare_key": {
                "label": "object_compare_key",
                "type": "string",
                "requried": false,
                "description": "DB column name for the value."
            },
            "country": {
                "label": "country",
                "type": "string",
                "requried": false,
                "description": "Country from which this postcode belongs. Allows for formatting."
            }
        },
        "outputs": {
            "return": {
                "label": "array",
                "type": "array"
            }
        },
        "rank": 1,
        "return_description": "Array of matching object ID and matching values."
    },
    "wc_prepare_attachment_for_js": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_prepare_attachment_for_js",
        "type": "fct",
        "summary": "Prepare attachment for JavaScript.",
        "description": "",
        "inputs": {
            "response": {
                "label": "response",
                "type": "array",
                "requried": false,
                "description": "JS version of a attachment post object."
            }
        },
        "outputs": {
            "return": {
                "label": "array",
                "type": "array"
            }
        },
        "rank": 1,
        "return_description": "array"
    },
    "wc_prevent_adjacent_posts_rel_link_wp_head": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_prevent_adjacent_posts_rel_link_wp_head",
        "type": "efct",
        "summary": "Remove adjacent_posts_rel_link_wp_head - pointless for products.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_prevent_dangerous_auto_updates": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_prevent_dangerous_auto_updates",
        "type": "fct",
        "summary": "Prevent auto-updating the WooCommerce plugin on major releases if there are untested extensions active.",
        "description": "",
        "inputs": {
            "should_update": {
                "label": "should_update",
                "type": "bool",
                "requried": false,
                "description": "If should update."
            },
            "plugin": {
                "label": "plugin",
                "type": "object",
                "requried": false,
                "description": "Plugin data."
            }
        },
        "outputs": {
            "return": {
                "label": "bool",
                "type": "bool"
            }
        },
        "rank": 1,
        "return_description": "bool"
    },
    "wc_prevent_endpoint_indexing": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_prevent_endpoint_indexing",
        "type": "efct",
        "summary": "No index our endpoints.Prevent indexing pages like order-received.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_price": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_price",
        "type": "fct",
        "summary": "Format the price with a currency symbol.",
        "description": "",
        "inputs": {
            "price": {
                "label": "price",
                "type": "float",
                "requried": false,
                "description": "Raw price."
            },
            "args": {
                "label": "args",
                "type": "array",
                "requried": false,
                "description": "<p>Arguments to format a price {\n    Array of arguments.\n    Defaults to empty array.<\/p>"
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_prices_include_tax": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_prices_include_tax",
        "type": "fct",
        "summary": "Are prices inclusive of tax?",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "bool",
                "type": "bool"
            }
        },
        "rank": 1,
        "return_description": "bool"
    },
    "wc_print_js": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_print_js",
        "type": "efct",
        "summary": "Output any queued javascript code in the footer.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_print_notice": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_print_notice",
        "type": "efct",
        "summary": "Print a single notice immediately.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "message": {
                "label": "message",
                "type": "string",
                "requried": false,
                "description": "The text to display in the notice."
            },
            "notice_type": {
                "label": "notice_type",
                "type": "string",
                "requried": false,
                "description": "Optional. The singular name of the notice type - either error, success or notice."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_print_notices": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_print_notices",
        "type": "fct",
        "summary": "Prints messages and errors which are stored in the session, then clears them.",
        "description": "",
        "inputs": {
            "return": {
                "label": "return",
                "type": "bool",
                "requried": false,
                "description": "true to return rather than echo. @since 3.5.0."
            }
        },
        "outputs": {
            "return": {
                "label": "mixed",
                "type": "mixed"
            }
        },
        "rank": 1,
        "return_description": "string|null"
    },
    "wc_print_r": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_print_r",
        "type": "fct",
        "summary": "Prints human-readable information about a variable.Some server environments blacklist some debugging functions. This function provides a safe way toturn an expression into a printable, readable form without calling blacklisted functions.",
        "description": "",
        "inputs": {
            "expression": {
                "label": "expression",
                "type": "mixed",
                "requried": false,
                "description": "The expression to be printed."
            },
            "return": {
                "label": "return",
                "type": "bool",
                "requried": false,
                "description": "Optional. Default false. Set to true to return the human-readable string."
            }
        },
        "outputs": {
            "return": {
                "label": "mixed",
                "type": "mixed"
            }
        },
        "rank": 1,
        "return_description": "False if expression could not be printed. True if the expression was printed.    If $return is true, a string representation will be returned."
    },
    "wc_privacy_policy_page_id": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_privacy_policy_page_id",
        "type": "fct",
        "summary": "Get the privacy policy page ID.",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "int",
                "type": "int"
            }
        },
        "rank": 1,
        "return_description": "int"
    },
    "wc_privacy_policy_text": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_privacy_policy_text",
        "type": "efct",
        "summary": "Output privacy policy text. This is custom text which can be added via the customizer\/privacy settings section.Loads the relevant policy for the current page unless a specific policy text is required.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "type": {
                "label": "type",
                "type": "string",
                "requried": false,
                "description": "Type of policy to load. Valid values include registration and checkout."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_processing_order_count": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_processing_order_count",
        "type": "fct",
        "summary": "Return the count of processing orders.",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "int",
                "type": "int"
            }
        },
        "rank": 1,
        "return_description": "int"
    },
    "wc_product_attribute_uasort_comparison": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_product_attribute_uasort_comparison",
        "type": "fct",
        "summary": "Used to sort products attributes with uasort.",
        "description": "",
        "inputs": {
            "a": {
                "label": "a",
                "type": "array",
                "requried": false,
                "description": "First attribute to compare."
            },
            "b": {
                "label": "b",
                "type": "array",
                "requried": false,
                "description": "Second attribute to compare."
            }
        },
        "outputs": {
            "return": {
                "label": "int",
                "type": "int"
            }
        },
        "rank": 1,
        "return_description": "int"
    },
    "wc_product_cat_class": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_product_cat_class",
        "type": "efct",
        "summary": "Display the classes for the product cat div.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "class": {
                "label": "class",
                "type": "mixed",
                "requried": false,
                "description": "One or more classes to add to the class list."
            },
            "category": {
                "label": "category",
                "type": "object",
                "requried": false,
                "description": "object Optional."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_product_class": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_product_class",
        "type": "efct",
        "summary": "Display the classes for the product div.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "class": {
                "label": "class",
                "type": "mixed",
                "requried": false,
                "description": "One or more classes to add to the class list."
            },
            "product_id": {
                "label": "product_id",
                "type": "mixed",
                "requried": false,
                "description": "Product ID or product object."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_product_dimensions_enabled": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_product_dimensions_enabled",
        "type": "fct",
        "summary": "Returns whether or not product dimensions (HxWxD) are enabled.",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "bool",
                "type": "bool"
            }
        },
        "rank": 1,
        "return_description": "bool"
    },
    "wc_product_dropdown_categories": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_product_dropdown_categories",
        "type": "efct",
        "summary": "WooCommerce Dropdown categories.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "args": {
                "label": "args",
                "type": "array",
                "requried": false,
                "description": "Args to control display of dropdown."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_product_force_unique_sku": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_product_force_unique_sku",
        "type": "efct",
        "summary": "Force a unique SKU.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "product_id": {
                "label": "product_id",
                "type": "int",
                "requried": false,
                "description": "Product ID."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_product_generate_unique_sku": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_product_generate_unique_sku",
        "type": "fct",
        "summary": "Recursively appends a suffix until a unique SKU is found.",
        "description": "",
        "inputs": {
            "product_id": {
                "label": "product_id",
                "type": "int",
                "requried": false,
                "description": "Product ID."
            },
            "sku": {
                "label": "sku",
                "type": "string",
                "requried": false,
                "description": "Product SKU."
            },
            "index": {
                "label": "index",
                "type": "int",
                "requried": false,
                "description": "An optional index that can be added to the product SKU."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_product_has_unique_sku": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_product_has_unique_sku",
        "type": "fct",
        "summary": "Check if product sku is unique.",
        "description": "",
        "inputs": {
            "product_id": {
                "label": "product_id",
                "type": "int",
                "requried": false,
                "description": "Product ID."
            },
            "sku": {
                "label": "sku",
                "type": "string",
                "requried": false,
                "description": "Product SKU."
            }
        },
        "outputs": {
            "return": {
                "label": "bool",
                "type": "bool"
            }
        },
        "rank": 1,
        "return_description": "bool"
    },
    "wc_product_post_class": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_product_post_class",
        "type": "fct",
        "summary": "Adds extra post classes for products.",
        "description": "",
        "inputs": {
            "classes": {
                "label": "classes",
                "type": "array",
                "requried": false,
                "description": "Current classes."
            },
            "class": {
                "label": "class",
                "type": "mixed",
                "requried": false,
                "description": "Additional class."
            },
            "post_id": {
                "label": "post_id",
                "type": "int",
                "requried": false,
                "description": "Post ID."
            }
        },
        "outputs": {
            "return": {
                "label": "array",
                "type": "array"
            }
        },
        "rank": 1,
        "return_description": "array"
    },
    "wc_product_post_type_link": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_product_post_type_link",
        "type": "fct",
        "summary": "Filter to allow product_cat in the permalinks for products.",
        "description": "",
        "inputs": {
            "permalink": {
                "label": "permalink",
                "type": "string",
                "requried": false,
                "description": "The existing permalink URL."
            },
            "post": {
                "label": "post",
                "type": "mixed",
                "requried": false,
                "description": "WP_Post object."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_product_sku_enabled": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_product_sku_enabled",
        "type": "fct",
        "summary": "Returns whether or not SKUS are enabled.",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "bool",
                "type": "bool"
            }
        },
        "rank": 1,
        "return_description": "bool"
    },
    "wc_product_weight_enabled": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_product_weight_enabled",
        "type": "fct",
        "summary": "Returns whether or not product weights are enabled.",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "bool",
                "type": "bool"
            }
        },
        "rank": 1,
        "return_description": "bool"
    },
    "wc_products_array_filter_editable": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_products_array_filter_editable",
        "type": "fct",
        "summary": "Callback for array filter to get products the user can edit only.",
        "description": "",
        "inputs": {
            "product": {
                "label": "product",
                "type": "mixed",
                "requried": false,
                "description": "WC_Product object."
            }
        },
        "outputs": {
            "return": {
                "label": "bool",
                "type": "bool"
            }
        },
        "rank": 1,
        "return_description": "bool"
    },
    "wc_products_array_filter_readable": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_products_array_filter_readable",
        "type": "fct",
        "summary": "Callback for array filter to get products the user can view only.",
        "description": "",
        "inputs": {
            "product": {
                "label": "product",
                "type": "mixed",
                "requried": false,
                "description": "WC_Product object."
            }
        },
        "outputs": {
            "return": {
                "label": "bool",
                "type": "bool"
            }
        },
        "rank": 1,
        "return_description": "bool"
    },
    "wc_products_array_filter_visible": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_products_array_filter_visible",
        "type": "fct",
        "summary": "Callback for array filter to get visible only.",
        "description": "",
        "inputs": {
            "product": {
                "label": "product",
                "type": "mixed",
                "requried": false,
                "description": "WC_Product object."
            }
        },
        "outputs": {
            "return": {
                "label": "bool",
                "type": "bool"
            }
        },
        "rank": 1,
        "return_description": "bool"
    },
    "wc_products_array_filter_visible_grouped": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_products_array_filter_visible_grouped",
        "type": "fct",
        "summary": "Callback for array filter to get visible grouped products only.",
        "description": "",
        "inputs": {
            "product": {
                "label": "product",
                "type": "mixed",
                "requried": false,
                "description": "WC_Product object."
            }
        },
        "outputs": {
            "return": {
                "label": "bool",
                "type": "bool"
            }
        },
        "rank": 1,
        "return_description": "bool"
    },
    "wc_products_array_orderby": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_products_array_orderby",
        "type": "fct",
        "summary": "Sort an array of products by a value.",
        "description": "",
        "inputs": {
            "products": {
                "label": "products",
                "type": "array",
                "requried": false,
                "description": "List of products to be ordered."
            },
            "orderby": {
                "label": "orderby",
                "type": "string",
                "requried": false,
                "description": "Optional order criteria."
            },
            "order": {
                "label": "order",
                "type": "string",
                "requried": false,
                "description": "Ascending or descending order."
            }
        },
        "outputs": {
            "return": {
                "label": "array",
                "type": "array"
            }
        },
        "rank": 1,
        "return_description": "array"
    },
    "wc_products_array_orderby_date": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_products_array_orderby_date",
        "type": "fct",
        "summary": "Sort by date.",
        "description": "",
        "inputs": {
            "a": {
                "label": "a",
                "type": "mixed",
                "requried": false,
                "description": "First WC_Product object."
            },
            "b": {
                "label": "b",
                "type": "mixed",
                "requried": false,
                "description": "Second WC_Product object."
            }
        },
        "outputs": {
            "return": {
                "label": "int",
                "type": "int"
            }
        },
        "rank": 1,
        "return_description": "int"
    },
    "wc_products_array_orderby_id": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_products_array_orderby_id",
        "type": "fct",
        "summary": "Sort by id.",
        "description": "",
        "inputs": {
            "a": {
                "label": "a",
                "type": "mixed",
                "requried": false,
                "description": "First WC_Product object."
            },
            "b": {
                "label": "b",
                "type": "mixed",
                "requried": false,
                "description": "Second WC_Product object."
            }
        },
        "outputs": {
            "return": {
                "label": "int",
                "type": "int"
            }
        },
        "rank": 1,
        "return_description": "int"
    },
    "wc_products_array_orderby_menu_order": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_products_array_orderby_menu_order",
        "type": "fct",
        "summary": "Sort by menu order.",
        "description": "",
        "inputs": {
            "a": {
                "label": "a",
                "type": "mixed",
                "requried": false,
                "description": "First WC_Product object."
            },
            "b": {
                "label": "b",
                "type": "mixed",
                "requried": false,
                "description": "Second WC_Product object."
            }
        },
        "outputs": {
            "return": {
                "label": "int",
                "type": "int"
            }
        },
        "rank": 1,
        "return_description": "int"
    },
    "wc_products_array_orderby_modified": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_products_array_orderby_modified",
        "type": "fct",
        "summary": "Sort by modified.",
        "description": "",
        "inputs": {
            "a": {
                "label": "a",
                "type": "mixed",
                "requried": false,
                "description": "First WC_Product object."
            },
            "b": {
                "label": "b",
                "type": "mixed",
                "requried": false,
                "description": "Second WC_Product object."
            }
        },
        "outputs": {
            "return": {
                "label": "int",
                "type": "int"
            }
        },
        "rank": 1,
        "return_description": "int"
    },
    "wc_products_array_orderby_price": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_products_array_orderby_price",
        "type": "fct",
        "summary": "Sort by price low to high.",
        "description": "",
        "inputs": {
            "a": {
                "label": "a",
                "type": "mixed",
                "requried": false,
                "description": "First WC_Product object."
            },
            "b": {
                "label": "b",
                "type": "mixed",
                "requried": false,
                "description": "Second WC_Product object."
            }
        },
        "outputs": {
            "return": {
                "label": "int",
                "type": "int"
            }
        },
        "rank": 1,
        "return_description": "int"
    },
    "wc_products_array_orderby_title": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_products_array_orderby_title",
        "type": "fct",
        "summary": "Sort by title.",
        "description": "",
        "inputs": {
            "a": {
                "label": "a",
                "type": "mixed",
                "requried": false,
                "description": "First WC_Product object."
            },
            "b": {
                "label": "b",
                "type": "mixed",
                "requried": false,
                "description": "Second WC_Product object."
            }
        },
        "outputs": {
            "return": {
                "label": "int",
                "type": "int"
            }
        },
        "rank": 1,
        "return_description": "int"
    },
    "wc_protected_product_add_to_cart": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_protected_product_add_to_cart",
        "type": "fct",
        "summary": "Prevent password protected products being added to the cart.",
        "description": "",
        "inputs": {
            "passed": {
                "label": "passed",
                "type": "bool",
                "requried": false,
                "description": "Validation."
            },
            "product_id": {
                "label": "product_id",
                "type": "int",
                "requried": false,
                "description": "Product ID."
            }
        },
        "outputs": {
            "return": {
                "label": "bool",
                "type": "bool"
            }
        },
        "rank": 1,
        "return_description": "bool"
    },
    "wc_query_string_form_fields": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_query_string_form_fields",
        "type": "fct",
        "summary": "Outputs hidden form inputs for each query string variable.",
        "description": "",
        "inputs": {
            "values": {
                "label": "values",
                "type": "mixed",
                "requried": false,
                "description": "Name value pairs, or a URL to parse."
            },
            "exclude": {
                "label": "exclude",
                "type": "array",
                "requried": false,
                "description": "Keys to exclude."
            },
            "current_key": {
                "label": "current_key",
                "type": "string",
                "requried": false,
                "description": "Current key we are outputting."
            },
            "return": {
                "label": "return",
                "type": "bool",
                "requried": false,
                "description": "Whether to return."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_rand_hash": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_rand_hash",
        "type": "fct",
        "summary": "Generate a rand hash.",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_recount_after_stock_change": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_recount_after_stock_change",
        "type": "efct",
        "summary": "Recount terms after the stock amount changes.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "product_id": {
                "label": "product_id",
                "type": "int",
                "requried": false,
                "description": "Product ID."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_reduce_stock_levels": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_reduce_stock_levels",
        "type": "efct",
        "summary": "Reduce stock levels for items within an order, if stock has not already been reduced for the items.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "order_id": {
                "label": "order_id",
                "type": "mixed",
                "requried": false,
                "description": "Order ID or order instance."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_refund_payment": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_refund_payment",
        "type": "fct",
        "summary": "Try to refund the payment for an order via the gateway.",
        "description": "",
        "inputs": {
            "order": {
                "label": "order",
                "type": "mixed",
                "requried": false,
                "description": "Order instance."
            },
            "amount": {
                "label": "amount",
                "type": "string",
                "requried": false,
                "description": "Amount to refund."
            },
            "reason": {
                "label": "reason",
                "type": "string",
                "requried": false,
                "description": "Refund reason."
            }
        },
        "outputs": {
            "return": {
                "label": "mixed",
                "type": "mixed"
            }
        },
        "rank": 1,
        "return_description": "bool|WP_Error"
    },
    "wc_register_default_log_handler": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_register_default_log_handler",
        "type": "fct",
        "summary": "Registers the default log handler.",
        "description": "",
        "inputs": {
            "handlers": {
                "label": "handlers",
                "type": "array",
                "requried": false,
                "description": "Handlers."
            }
        },
        "outputs": {
            "return": {
                "label": "array",
                "type": "array"
            }
        },
        "rank": 1,
        "return_description": "array"
    },
    "wc_register_order_type": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_register_order_type",
        "type": "fct",
        "summary": "Register order type. Do not use before init.Wrapper for register post type, as well as a method of telling WC which.post types are types of orders, and having them treated as such.$args are passed to register_post_type, but there are a few specific to this function: - exclude_from_orders_screen (bool) Whether or not this order type also get shown in the main. orders screen. - add_order_meta_boxes (bool) Whether or not the order type gets shop_order meta boxes. - exclude_from_order_count (bool) Whether or not this order type is excluded from counts. - exclude_from_order_views (bool) Whether or not this order type is visible by customers when. viewing orders e.g. on the my account page. - exclude_from_order_reports (bool) Whether or not to exclude this type from core reports. - exclude_from_order_sales_reports (bool) Whether or not to exclude this type from core sales reports.",
        "description": "",
        "inputs": {
            "type": {
                "label": "type",
                "type": "string",
                "requried": false,
                "description": "Post type. (max. 20 characters, can not contain capital letters or spaces)."
            },
            "args": {
                "label": "args",
                "type": "array",
                "requried": false,
                "description": "An array of arguments."
            }
        },
        "outputs": {
            "return": {
                "label": "bool",
                "type": "bool"
            }
        },
        "rank": 1,
        "return_description": "Success or failure"
    },
    "wc_register_widgets": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_register_widgets",
        "type": "efct",
        "summary": "Register Widgets.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_registration_privacy_policy_text": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_registration_privacy_policy_text",
        "type": "efct",
        "summary": "Render privacy policy text on the register forms.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_remove_number_precision": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_remove_number_precision",
        "type": "fct",
        "summary": "Remove precision from a number and return a float.",
        "description": "",
        "inputs": {
            "value": {
                "label": "value",
                "type": "float",
                "requried": false,
                "description": "Number to add precision to."
            }
        },
        "outputs": {
            "return": {
                "label": "float",
                "type": "float"
            }
        },
        "rank": 1,
        "return_description": "float"
    },
    "wc_remove_number_precision_deep": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_remove_number_precision_deep",
        "type": "fct",
        "summary": "Remove precision from an array of number and return an array of int.",
        "description": "",
        "inputs": {
            "value": {
                "label": "value",
                "type": "array",
                "requried": false,
                "description": "Number to add precision to."
            }
        },
        "outputs": {
            "return": {
                "label": "mixed",
                "type": "mixed"
            }
        },
        "rank": 1,
        "return_description": "int|array"
    },
    "wc_reorder_terms": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_reorder_terms",
        "type": "efct",
        "summary": "Move a term before the a given element of its hierarchy level.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "the_term": {
                "label": "the_term",
                "type": "int",
                "requried": false,
                "description": "Term ID."
            },
            "next_id": {
                "label": "next_id",
                "type": "int",
                "requried": false,
                "description": "The id of the next sibling element in save hierarchy level."
            },
            "taxonomy": {
                "label": "taxonomy",
                "type": "string",
                "requried": false,
                "description": "Taxnomy."
            },
            "index": {
                "label": "index",
                "type": "int",
                "requried": false,
                "description": "Term index (default: 0)."
            },
            "terms": {
                "label": "terms",
                "type": "mixed",
                "requried": false,
                "description": "List of terms. (default: null)."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            },
            "return": {
                "label": "int",
                "type": "int"
            }
        },
        "rank": 1,
        "return_description": "int"
    },
    "wc_replace_policy_page_link_placeholders": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_replace_policy_page_link_placeholders",
        "type": "fct",
        "summary": "Replaces placeholders with links to WooCommerce policy pages.",
        "description": "",
        "inputs": {
            "text": {
                "label": "text",
                "type": "string",
                "requried": false,
                "description": "Text to find\/replace within."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_reset_loop": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_reset_loop",
        "type": "efct",
        "summary": "Resets the woocommerce_loop global.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_reset_order_customer_id_on_deleted_user": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_reset_order_customer_id_on_deleted_user",
        "type": "efct",
        "summary": "Reset _customer_user on orders when a user is deleted.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "user_id": {
                "label": "user_id",
                "type": "int",
                "requried": false,
                "description": "User ID."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_reset_product_grid_settings": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_reset_product_grid_settings",
        "type": "efct",
        "summary": "Reset the product grid settings when a new theme is activated.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_rest_allowed_image_mime_types": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_rest_allowed_image_mime_types",
        "type": "fct",
        "summary": "Returns image mime types users are allowed to upload via the API.",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "array",
                "type": "array"
            }
        },
        "rank": 1,
        "return_description": "array"
    },
    "wc_rest_check_manager_permissions": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_rest_check_manager_permissions",
        "type": "fct",
        "summary": "Check manager permissions on REST API.",
        "description": "",
        "inputs": {
            "object": {
                "label": "object",
                "type": "string",
                "requried": false,
                "description": "Object."
            },
            "context": {
                "label": "context",
                "type": "string",
                "requried": false,
                "description": "Request context."
            }
        },
        "outputs": {
            "return": {
                "label": "bool",
                "type": "bool"
            }
        },
        "rank": 1,
        "return_description": "bool"
    },
    "wc_rest_check_post_permissions": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_rest_check_post_permissions",
        "type": "fct",
        "summary": "Check permissions of posts on REST API.",
        "description": "",
        "inputs": {
            "post_type": {
                "label": "post_type",
                "type": "string",
                "requried": false,
                "description": "Post type."
            },
            "context": {
                "label": "context",
                "type": "string",
                "requried": false,
                "description": "Request context."
            },
            "object_id": {
                "label": "object_id",
                "type": "int",
                "requried": false,
                "description": "Post ID."
            }
        },
        "outputs": {
            "return": {
                "label": "bool",
                "type": "bool"
            }
        },
        "rank": 1,
        "return_description": "bool"
    },
    "wc_rest_check_product_reviews_permissions": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_rest_check_product_reviews_permissions",
        "type": "fct",
        "summary": "Check product reviews permissions on REST API.",
        "description": "",
        "inputs": {
            "context": {
                "label": "context",
                "type": "string",
                "requried": false,
                "description": "Request context."
            },
            "object_id": {
                "label": "object_id",
                "type": "string",
                "requried": false,
                "description": "Object ID."
            }
        },
        "outputs": {
            "return": {
                "label": "bool",
                "type": "bool"
            }
        },
        "rank": 1,
        "return_description": "bool"
    },
    "wc_rest_check_product_term_permissions": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_rest_check_product_term_permissions",
        "type": "fct",
        "summary": "Check permissions of product terms on REST API.",
        "description": "",
        "inputs": {
            "taxonomy": {
                "label": "taxonomy",
                "type": "string",
                "requried": false,
                "description": "Taxonomy."
            },
            "context": {
                "label": "context",
                "type": "string",
                "requried": false,
                "description": "Request context."
            },
            "object_id": {
                "label": "object_id",
                "type": "int",
                "requried": false,
                "description": "Post ID."
            }
        },
        "outputs": {
            "return": {
                "label": "bool",
                "type": "bool"
            }
        },
        "rank": 1,
        "return_description": "bool"
    },
    "wc_rest_check_user_permissions": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_rest_check_user_permissions",
        "type": "fct",
        "summary": "Check permissions of users on REST API.",
        "description": "",
        "inputs": {
            "context": {
                "label": "context",
                "type": "string",
                "requried": false,
                "description": "Request context."
            },
            "object_id": {
                "label": "object_id",
                "type": "int",
                "requried": false,
                "description": "Post ID."
            }
        },
        "outputs": {
            "return": {
                "label": "bool",
                "type": "bool"
            }
        },
        "rank": 1,
        "return_description": "bool"
    },
    "wc_rest_prepare_date_response": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_rest_prepare_date_response",
        "type": "fct",
        "summary": "Parses and formats a date for ISO8601\/RFC3339.Required WP 4.4 or later.See https:\/\/developer.wordpress.org\/reference\/functions\/mysql_to_rfc3339\/",
        "description": "",
        "inputs": {
            "date": {
                "label": "date",
                "type": "mixed",
                "requried": false,
                "description": "Date."
            },
            "utc": {
                "label": "utc",
                "type": "bool",
                "requried": false,
                "description": "Send false to get local\/offset time."
            }
        },
        "outputs": {
            "return": {
                "label": "mixed",
                "type": "mixed"
            }
        },
        "rank": 1,
        "return_description": "ISO8601\/RFC3339 formatted datetime."
    },
    "wc_rest_set_uploaded_image_as_attachment": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_rest_set_uploaded_image_as_attachment",
        "type": "efct",
        "summary": "Set uploaded image as attachment.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "upload": {
                "label": "upload",
                "type": "array",
                "requried": false,
                "description": "Upload information from wp_upload_bits."
            },
            "id": {
                "label": "id",
                "type": "int",
                "requried": false,
                "description": "Post ID. Default to 0."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            },
            "return": {
                "label": "int",
                "type": "int"
            }
        },
        "rank": 1,
        "return_description": "Attachment ID"
    },
    "wc_rest_upload_image_from_url": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_rest_upload_image_from_url",
        "type": "efct",
        "summary": "Upload image from URL.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "image_url": {
                "label": "image_url",
                "type": "string",
                "requried": false,
                "description": "Image URL."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            },
            "return": {
                "label": "mixed",
                "type": "mixed"
            }
        },
        "rank": 1,
        "return_description": "Attachment data or error message."
    },
    "wc_rest_urlencode_rfc3986": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_rest_urlencode_rfc3986",
        "type": "fct",
        "summary": "Encodes a value according to RFC 3986.Supports multidimensional arrays.",
        "description": "",
        "inputs": {
            "value": {
                "label": "value",
                "type": "mixed",
                "requried": false,
                "description": "The value to encode."
            }
        },
        "outputs": {
            "return": {
                "label": "mixed",
                "type": "mixed"
            }
        },
        "rank": 1,
        "return_description": "Encoded values."
    },
    "wc_rest_validate_reports_request_arg": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_rest_validate_reports_request_arg",
        "type": "fct",
        "summary": "Validate reports request arguments.",
        "description": "",
        "inputs": {
            "value": {
                "label": "value",
                "type": "mixed",
                "requried": false,
                "description": "Value to valdate."
            },
            "request": {
                "label": "request",
                "type": "mixed",
                "requried": false,
                "description": "Request instance."
            },
            "param": {
                "label": "param",
                "type": "string",
                "requried": false,
                "description": "Param to validate."
            }
        },
        "outputs": {
            "return": {
                "label": "mixed",
                "type": "mixed"
            }
        },
        "rank": 1,
        "return_description": "WP_Error|boolean"
    },
    "wc_restock_refunded_items": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_restock_refunded_items",
        "type": "efct",
        "summary": "Restock items during refund.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "order": {
                "label": "order",
                "type": "mixed",
                "requried": false,
                "description": "Order instance."
            },
            "refunded_line_items": {
                "label": "refunded_line_items",
                "type": "array",
                "requried": false,
                "description": "Refunded items list."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_restore_locale": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_restore_locale",
        "type": "efct",
        "summary": "Switch WooCommerce language to original.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_review_is_from_verified_owner": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_review_is_from_verified_owner",
        "type": "fct",
        "summary": "Get review verification status.",
        "description": "",
        "inputs": {
            "comment_id": {
                "label": "comment_id",
                "type": "int",
                "requried": false,
                "description": "Comment ID."
            }
        },
        "outputs": {
            "return": {
                "label": "bool",
                "type": "bool"
            }
        },
        "rank": 1,
        "return_description": "bool"
    },
    "wc_review_ratings_enabled": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_review_ratings_enabled",
        "type": "fct",
        "summary": "Check if reviews ratings are enabled.",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "bool",
                "type": "bool"
            }
        },
        "rank": 1,
        "return_description": "bool"
    },
    "wc_review_ratings_required": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_review_ratings_required",
        "type": "fct",
        "summary": "Check if review ratings are required.",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "bool",
                "type": "bool"
            }
        },
        "rank": 1,
        "return_description": "bool"
    },
    "wc_reviews_enabled": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_reviews_enabled",
        "type": "fct",
        "summary": "Check if reviews are enabled.",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "bool",
                "type": "bool"
            }
        },
        "rank": 1,
        "return_description": "bool"
    },
    "wc_rgb_from_hex": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_rgb_from_hex",
        "type": "fct",
        "summary": "Convert RGB to HEX.",
        "description": "",
        "inputs": {
            "color": {
                "label": "color",
                "type": "mixed",
                "requried": false,
                "description": "Color."
            }
        },
        "outputs": {
            "return": {
                "label": "array",
                "type": "array"
            }
        },
        "rank": 1,
        "return_description": "array"
    },
    "wc_round_discount": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_round_discount",
        "type": "fct",
        "summary": "Round discount.",
        "description": "",
        "inputs": {
            "value": {
                "label": "value",
                "type": "float",
                "requried": false,
                "description": "Amount to round."
            },
            "precision": {
                "label": "precision",
                "type": "int",
                "requried": false,
                "description": "DP to round."
            }
        },
        "outputs": {
            "return": {
                "label": "float",
                "type": "float"
            }
        },
        "rank": 1,
        "return_description": "float"
    },
    "wc_round_tax_total": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_round_tax_total",
        "type": "fct",
        "summary": "Round a tax amount.",
        "description": "",
        "inputs": {
            "value": {
                "label": "value",
                "type": "float",
                "requried": false,
                "description": "Amount to round."
            },
            "precision": {
                "label": "precision",
                "type": "int",
                "requried": false,
                "description": "DP to round. Defaults to wc_get_price_decimals."
            }
        },
        "outputs": {
            "return": {
                "label": "float",
                "type": "float"
            }
        },
        "rank": 1,
        "return_description": "float"
    },
    "wc_sanitize_coupon_code": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_sanitize_coupon_code",
        "type": "fct",
        "summary": "Sanitize a coupon code.Uses sanitize_post_field since coupon codes are stored aspost_titles - the sanitization and escaping must match.",
        "description": "",
        "inputs": {
            "value": {
                "label": "value",
                "type": "string",
                "requried": false,
                "description": "Coupon code to format."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_sanitize_endpoint_slug": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_sanitize_endpoint_slug",
        "type": "fct",
        "summary": "Format the endpoint slug, strip out anything not allowed in a url.",
        "description": "",
        "inputs": {
            "raw_value": {
                "label": "raw_value",
                "type": "string",
                "requried": false,
                "description": "The raw value."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_sanitize_order_id": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_sanitize_order_id",
        "type": "efct",
        "summary": "Sanitize order id removing unwanted characters.E.g Users can sometimes try to track an order id using # with no success.This function will fix this.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "order_id": {
                "label": "order_id",
                "type": "int",
                "requried": false,
                "description": "Order ID."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_sanitize_permalink": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_sanitize_permalink",
        "type": "fct",
        "summary": "Sanitize permalink values before insertion into DB.Cannot use wc_clean because it sometimes strips % chars and breaks the user's setting.",
        "description": "",
        "inputs": {
            "value": {
                "label": "value",
                "type": "string",
                "requried": false,
                "description": "Permalink."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_sanitize_phone_number": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_sanitize_phone_number",
        "type": "fct",
        "summary": "Sanitize phone number.Allows only numbers and \"+\" (plus sign).",
        "description": "",
        "inputs": {
            "phone": {
                "label": "phone",
                "type": "string",
                "requried": false,
                "description": "Phone number."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_sanitize_taxonomy_name": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_sanitize_taxonomy_name",
        "type": "fct",
        "summary": "Sanitize taxonomy names. Slug format (no spaces, lowercase).Urldecode is used to reverse munging of UTF8 characters.",
        "description": "",
        "inputs": {
            "taxonomy": {
                "label": "taxonomy",
                "type": "string",
                "requried": false,
                "description": "Taxonomy name."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_sanitize_term_text_based": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_sanitize_term_text_based",
        "type": "fct",
        "summary": "Sanitize terms from an attribute text based.",
        "description": "",
        "inputs": {
            "term": {
                "label": "term",
                "type": "string",
                "requried": false,
                "description": "Term value."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_sanitize_textarea": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_sanitize_textarea",
        "type": "fct",
        "summary": "Run wc_clean over posted textarea but maintain line breaks.",
        "description": "",
        "inputs": {
            "var": {
                "label": "var",
                "type": "string",
                "requried": false,
                "description": "Data to sanitize."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_sanitize_tooltip": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_sanitize_tooltip",
        "type": "fct",
        "summary": "Sanitize a string destined to be a tooltip.",
        "description": "",
        "inputs": {
            "var": {
                "label": "var",
                "type": "string",
                "requried": false,
                "description": "Data to sanitize."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_scheduled_sales": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_scheduled_sales",
        "type": "efct",
        "summary": "Function which handles the start and end of scheduled sales via cron.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_selected": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_selected",
        "type": "fct",
        "summary": "Return the html selected attribute if stringified $value is found in array of stringified $optionsor if stringified $value is the same as scalar stringified $options.",
        "description": "",
        "inputs": {
            "value": {
                "label": "value",
                "type": "mixed",
                "requried": false,
                "description": "Value to find within options."
            },
            "options": {
                "label": "options",
                "type": "mixed",
                "requried": false,
                "description": "Options to go through when looking for value."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_send_frame_options_header": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_send_frame_options_header",
        "type": "efct",
        "summary": "When loading sensitive checkout or account pages, send a HTTP header to limit rendering of pages to same origin iframes for security reasons.Can be disabled with: remove_action( 'template_redirect', 'wc_send_frame_options_header' );",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_set_customer_auth_cookie": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_set_customer_auth_cookie",
        "type": "efct",
        "summary": "Login a customer (set auth cookie and set global user object).",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "customer_id": {
                "label": "customer_id",
                "type": "int",
                "requried": false,
                "description": "Customer ID."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_set_loop_prop": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_set_loop_prop",
        "type": "efct",
        "summary": "Sets a property in the woocommerce_loop global.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "prop": {
                "label": "prop",
                "type": "string",
                "requried": false,
                "description": "Prop to set."
            },
            "value": {
                "label": "value",
                "type": "string",
                "requried": false,
                "description": "Value to set."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_set_notices": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_set_notices",
        "type": "efct",
        "summary": "Set all notices at once.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "notices": {
                "label": "notices",
                "type": "mixed",
                "requried": false,
                "description": "Array of notices."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_set_term_order": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_set_term_order",
        "type": "fct",
        "summary": "Set the sort order of a term.",
        "description": "",
        "inputs": {
            "term_id": {
                "label": "term_id",
                "type": "int",
                "requried": false,
                "description": "Term ID."
            },
            "index": {
                "label": "index",
                "type": "int",
                "requried": false,
                "description": "Index."
            },
            "taxonomy": {
                "label": "taxonomy",
                "type": "string",
                "requried": false,
                "description": "Taxonomy."
            },
            "recursive": {
                "label": "recursive",
                "type": "bool",
                "requried": false,
                "description": "Recursive (default: false)."
            }
        },
        "outputs": {
            "return": {
                "label": "int",
                "type": "int"
            }
        },
        "rank": 1,
        "return_description": "int"
    },
    "wc_set_time_limit": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_set_time_limit",
        "type": "efct",
        "summary": "Wrapper for set_time_limit to see if it is enabled.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "limit": {
                "label": "limit",
                "type": "int",
                "requried": false,
                "description": "Time limit."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_set_user_last_update_time": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_set_user_last_update_time",
        "type": "efct",
        "summary": "Sets a user's \"last update\" time to the current timestamp.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "user_id": {
                "label": "user_id",
                "type": "int",
                "requried": false,
                "description": "The user to set a timestamp for."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_setcookie": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_setcookie",
        "type": "efct",
        "summary": "Set a cookie - wrapper for setcookie using WP constants.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "name": {
                "label": "name",
                "type": "string",
                "requried": false,
                "description": "Name of the cookie being set."
            },
            "value": {
                "label": "value",
                "type": "string",
                "requried": false,
                "description": "Value of the cookie."
            },
            "expire": {
                "label": "expire",
                "type": "int",
                "requried": false,
                "description": "Expiry of the cookie."
            },
            "secure": {
                "label": "secure",
                "type": "bool",
                "requried": false,
                "description": "Whether the cookie should be served only over https."
            },
            "httponly": {
                "label": "httponly",
                "type": "bool",
                "requried": false,
                "description": "Whether the cookie is only accessible over HTTP, not scripting languages like JavaScript. @since 3.6.0."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_setup_loop": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_setup_loop",
        "type": "efct",
        "summary": "Sets up the woocommerce_loop global from the passed args or from the main query.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "args": {
                "label": "args",
                "type": "array",
                "requried": false,
                "description": "Args to pass into the global."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_setup_product_data": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_setup_product_data",
        "type": "fct",
        "summary": "When the_post is called, put product data into a global.",
        "description": "",
        "inputs": {
            "post": {
                "label": "post",
                "type": "mixed",
                "requried": false,
                "description": "Post Object."
            }
        },
        "outputs": {
            "return": {
                "label": "mixed",
                "type": "mixed"
            }
        },
        "rank": 1,
        "return_description": "WC_Product"
    },
    "wc_ship_to_billing_address_only": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_ship_to_billing_address_only",
        "type": "fct",
        "summary": "See if we only ship to billing addresses.",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "bool",
                "type": "bool"
            }
        },
        "rank": 1,
        "return_description": "bool"
    },
    "wc_shipping_enabled": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_shipping_enabled",
        "type": "fct",
        "summary": "Is shipping enabled?",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "bool",
                "type": "bool"
            }
        },
        "rank": 1,
        "return_description": "bool"
    },
    "wc_shipping_methods_have_changed": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_shipping_methods_have_changed",
        "type": "fct",
        "summary": "See if the methods have changed since the last request.",
        "description": "",
        "inputs": {
            "key": {
                "label": "key",
                "type": "int",
                "requried": false,
                "description": "Key of package."
            },
            "package": {
                "label": "package",
                "type": "array",
                "requried": false,
                "description": "Package data array."
            }
        },
        "outputs": {
            "return": {
                "label": "bool",
                "type": "bool"
            }
        },
        "rank": 1,
        "return_description": "bool"
    },
    "wc_shipping_zone_method_order_uasort_comparison": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_shipping_zone_method_order_uasort_comparison",
        "type": "fct",
        "summary": "Used to sort shipping zone methods with uasort.",
        "description": "",
        "inputs": {
            "a": {
                "label": "a",
                "type": "array",
                "requried": false,
                "description": "First shipping zone method to compare."
            },
            "b": {
                "label": "b",
                "type": "array",
                "requried": false,
                "description": "Second shipping zone method to compare."
            }
        },
        "outputs": {
            "return": {
                "label": "int",
                "type": "int"
            }
        },
        "rank": 1,
        "return_description": "int"
    },
    "wc_shop_manager_has_capability": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_shop_manager_has_capability",
        "type": "fct",
        "summary": "Safe way of allowing shop managers restricted capabilities that will removeaccess to the capabilities if WooCommerce is deactivated.",
        "description": "",
        "inputs": {
            "allcaps": {
                "label": "allcaps",
                "type": "mixed",
                "requried": false,
                "description": "<p>Array of key\/value pairs where keys represent a capability name and boolean values\n                         represent whether the user has that capability.<\/p>"
            },
            "caps": {
                "label": "caps",
                "type": "mixed",
                "requried": false,
                "description": "Required primitive capabilities for the requested capability."
            },
            "args": {
                "label": "args",
                "type": "array",
                "requried": false,
                "description": "Arguments that accompany the requested capability check."
            },
            "user": {
                "label": "user",
                "type": "mixed",
                "requried": false,
                "description": "The user object."
            }
        },
        "outputs": {
            "return": {
                "label": "mixed",
                "type": "mixed"
            }
        },
        "rank": 1,
        "return_description": "bool[]"
    },
    "wc_site_is_https": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_site_is_https",
        "type": "fct",
        "summary": "Check if the home URL is https. If it is, we don't need to do things such as 'force ssl'.",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "bool",
                "type": "bool"
            }
        },
        "rank": 1,
        "return_description": "bool"
    },
    "wc_stock_amount": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_stock_amount",
        "type": "fct",
        "summary": "Formats a stock amount by running it through a filter.",
        "description": "",
        "inputs": {
            "amount": {
                "label": "amount",
                "type": "mixed",
                "requried": false,
                "description": "Stock amount."
            }
        },
        "outputs": {
            "return": {
                "label": "mixed",
                "type": "mixed"
            }
        },
        "rank": 1,
        "return_description": "int|float"
    },
    "wc_string_to_array": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_string_to_array",
        "type": "fct",
        "summary": "Explode a string into an array by $delimiter and remove empty values.",
        "description": "",
        "inputs": {
            "string": {
                "label": "string",
                "type": "string",
                "requried": false,
                "description": "String to convert."
            },
            "delimiter": {
                "label": "delimiter",
                "type": "string",
                "requried": false,
                "description": "Delimiter, defaults to ','."
            }
        },
        "outputs": {
            "return": {
                "label": "array",
                "type": "array"
            }
        },
        "rank": 1,
        "return_description": "array"
    },
    "wc_string_to_bool": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_string_to_bool",
        "type": "fct",
        "summary": "Converts a string (e.g. 'yes' or 'no') to a bool.",
        "description": "",
        "inputs": {
            "string": {
                "label": "string",
                "type": "string",
                "requried": false,
                "description": "String to convert."
            }
        },
        "outputs": {
            "return": {
                "label": "bool",
                "type": "bool"
            }
        },
        "rank": 1,
        "return_description": "bool"
    },
    "wc_string_to_datetime": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_string_to_datetime",
        "type": "fct",
        "summary": "Convert a date string to a WC_DateTime.",
        "description": "",
        "inputs": {
            "time_string": {
                "label": "time_string",
                "type": "string",
                "requried": false,
                "description": "Time string."
            }
        },
        "outputs": {
            "return": {
                "label": "mixed",
                "type": "mixed"
            }
        },
        "rank": 1,
        "return_description": "WC_DateTime"
    },
    "wc_string_to_timestamp": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_string_to_timestamp",
        "type": "fct",
        "summary": "Convert mysql datetime to PHP timestamp, forcing UTC. Wrapper for strtotime.Based on wcs_strtotime_dark_knight() from WC Subscriptions by Prospress.",
        "description": "",
        "inputs": {
            "time_string": {
                "label": "time_string",
                "type": "string",
                "requried": false,
                "description": "Time string."
            },
            "from_timestamp": {
                "label": "from_timestamp",
                "type": "mixed",
                "requried": false,
                "description": "Timestamp to convert from."
            }
        },
        "outputs": {
            "return": {
                "label": "int",
                "type": "int"
            }
        },
        "rank": 1,
        "return_description": "int"
    },
    "wc_strtolower": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_strtolower",
        "type": "fct",
        "summary": "Make a string lowercase.Try to use mb_strtolower() when available.",
        "description": "",
        "inputs": {
            "string": {
                "label": "string",
                "type": "string",
                "requried": false,
                "description": "String to format."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_strtoupper": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_strtoupper",
        "type": "fct",
        "summary": "Wrapper for mb_strtoupper which see's if supported first.",
        "description": "",
        "inputs": {
            "string": {
                "label": "string",
                "type": "string",
                "requried": false,
                "description": "String to format."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_switch_to_site_locale": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_switch_to_site_locale",
        "type": "efct",
        "summary": "Switch WooCommerce to site language.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_tax_enabled": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_tax_enabled",
        "type": "fct",
        "summary": "Are store-wide taxes enabled?",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "bool",
                "type": "bool"
            }
        },
        "rank": 1,
        "return_description": "bool"
    },
    "wc_taxonomy_metadata_migrate_data": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_taxonomy_metadata_migrate_data",
        "type": "efct",
        "summary": "Migrate data from WC term meta to WP term meta.When the database is updated to support term meta, migrate WC term meta data across.We do this when the new version is >= 34370, and the old version is < 34370 (34370 is when term meta table was added).",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "wp_db_version": {
                "label": "wp_db_version",
                "type": "string",
                "requried": false,
                "description": "The new $wp_db_version."
            },
            "wp_current_db_version": {
                "label": "wp_current_db_version",
                "type": "string",
                "requried": false,
                "description": "The old (current) $wp_db_version."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_template_redirect": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_template_redirect",
        "type": "efct",
        "summary": "Handle redirects before content is output - hooked into template_redirect so is_page works.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_terms_and_conditions_checkbox_enabled": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_terms_and_conditions_checkbox_enabled",
        "type": "fct",
        "summary": "See if the checkbox is enabled or not based on the existance of the terms page and checkbox text.",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "bool",
                "type": "bool"
            }
        },
        "rank": 1,
        "return_description": "bool"
    },
    "wc_terms_and_conditions_checkbox_text": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_terms_and_conditions_checkbox_text",
        "type": "efct",
        "summary": "Output t&c checkbox text.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_terms_and_conditions_page_content": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_terms_and_conditions_page_content",
        "type": "efct",
        "summary": "Output t&c page's content (if set). The page can be set from checkout settings.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_terms_and_conditions_page_id": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_terms_and_conditions_page_id",
        "type": "fct",
        "summary": "Get the terms and conditons page ID.",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "int",
                "type": "int"
            }
        },
        "rank": 1,
        "return_description": "int"
    },
    "wc_terms_clauses": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_terms_clauses",
        "type": "fct",
        "summary": "Adjust term query to handle custom sorting parameters.",
        "description": "",
        "inputs": {
            "clauses": {
                "label": "clauses",
                "type": "array",
                "requried": false,
                "description": "Clauses."
            },
            "taxonomies": {
                "label": "taxonomies",
                "type": "array",
                "requried": false,
                "description": "Taxonomies."
            },
            "args": {
                "label": "args",
                "type": "array",
                "requried": false,
                "description": "Arguments."
            }
        },
        "outputs": {
            "return": {
                "label": "array",
                "type": "array"
            }
        },
        "rank": 1,
        "return_description": "array"
    },
    "wc_time_format": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_time_format",
        "type": "fct",
        "summary": "WooCommerce Time Format - Allows to change time format for everything WooCommerce.",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_timezone_offset": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_timezone_offset",
        "type": "fct",
        "summary": "Get timezone offset in seconds.",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "float",
                "type": "float"
            }
        },
        "rank": 1,
        "return_description": "float"
    },
    "wc_timezone_string": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_timezone_string",
        "type": "fct",
        "summary": "WooCommerce Timezone - helper to retrieve the timezone string for a site until.a WP core method exists (see https:\/\/core.trac.wordpress.org\/ticket\/24730).Adapted from https:\/\/secure.php.net\/manual\/en\/function.timezone-name-from-abbr.php#89155.",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "PHP timezone string for the site"
    },
    "wc_track_product_view": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_track_product_view",
        "type": "efct",
        "summary": "Track product views.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_transaction_query": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_transaction_query",
        "type": "efct",
        "summary": "Run a MySQL transaction query, if supported.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "type": {
                "label": "type",
                "type": "string",
                "requried": false,
                "description": "Types: start (default), commit, rollback."
            },
            "force": {
                "label": "force",
                "type": "bool",
                "requried": false,
                "description": "use of transactions."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_trigger_stock_change_notifications": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_trigger_stock_change_notifications",
        "type": "efct",
        "summary": "After stock change events, triggers emails and adds order notes.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "order": {
                "label": "order",
                "type": "mixed",
                "requried": false,
                "description": "order object."
            },
            "changes": {
                "label": "changes",
                "type": "array",
                "requried": false,
                "description": "Array of changes."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_trim_string": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_trim_string",
        "type": "fct",
        "summary": "Trim a string and append a suffix.",
        "description": "",
        "inputs": {
            "string": {
                "label": "string",
                "type": "string",
                "requried": false,
                "description": "String to trim."
            },
            "chars": {
                "label": "chars",
                "type": "int",
                "requried": false,
                "description": "<p>Amount of characters.\n                        Defaults to 200.<\/p>"
            },
            "suffix": {
                "label": "suffix",
                "type": "string",
                "requried": false,
                "description": "<p>Suffix.\n                        Defaults to '...'.<\/p>"
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_trim_zeros": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_trim_zeros",
        "type": "fct",
        "summary": "Trim trailing zeros off prices.",
        "description": "",
        "inputs": {
            "price": {
                "label": "price",
                "type": "mixed",
                "requried": false,
                "description": "Price."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_uasort_comparison": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_uasort_comparison",
        "type": "fct",
        "summary": "User to sort two values with ausort.",
        "description": "",
        "inputs": {
            "a": {
                "label": "a",
                "type": "int",
                "requried": false,
                "description": "First value to compare."
            },
            "b": {
                "label": "b",
                "type": "int",
                "requried": false,
                "description": "Second value to compare."
            }
        },
        "outputs": {
            "return": {
                "label": "int",
                "type": "int"
            }
        },
        "rank": 1,
        "return_description": "int"
    },
    "wc_update_attribute": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_update_attribute",
        "type": "efct",
        "summary": "Update an attribute.For available args see wc_create_attribute().",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "id": {
                "label": "id",
                "type": "int",
                "requried": false,
                "description": "Attribute ID."
            },
            "args": {
                "label": "args",
                "type": "array",
                "requried": false,
                "description": "Attribute arguments."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            },
            "return": {
                "label": "mixed",
                "type": "mixed"
            }
        },
        "rank": 1,
        "return_description": "int|WP_Error"
    },
    "wc_update_coupon_usage_counts": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_update_coupon_usage_counts",
        "type": "efct",
        "summary": "Update used coupon amount for each coupon within an order.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "order_id": {
                "label": "order_id",
                "type": "int",
                "requried": false,
                "description": "Order ID."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_update_new_customer_past_orders": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_update_new_customer_past_orders",
        "type": "efct",
        "summary": "Get past orders (by email) and update them.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "customer_id": {
                "label": "customer_id",
                "type": "int",
                "requried": false,
                "description": "Customer ID."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            },
            "return": {
                "label": "int",
                "type": "int"
            }
        },
        "rank": 1,
        "return_description": "int"
    },
    "wc_update_order": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_update_order",
        "type": "efct",
        "summary": "Update an order. Uses wc_create_order.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "args": {
                "label": "args",
                "type": "array",
                "requried": false,
                "description": "Order arguments."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            },
            "return": {
                "label": "mixed",
                "type": "mixed"
            }
        },
        "rank": 1,
        "return_description": "WC_Order|WP_Error"
    },
    "wc_update_order_item": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_update_order_item",
        "type": "efct",
        "summary": "Update an item for an order.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "item_id": {
                "label": "item_id",
                "type": "int",
                "requried": false,
                "description": "Item ID."
            },
            "args": {
                "label": "args",
                "type": "array",
                "requried": false,
                "description": "Either <code>order_item_type<\/code> or <code>order_item_name<\/code>."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            },
            "return": {
                "label": "bool",
                "type": "bool"
            }
        },
        "rank": 1,
        "return_description": "True if successfully updated, false otherwise."
    },
    "wc_update_order_item_meta": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_update_order_item_meta",
        "type": "efct",
        "summary": "WooCommerce Order Item Meta API - Update term meta.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "item_id": {
                "label": "item_id",
                "type": "int",
                "requried": false,
                "description": "Item ID."
            },
            "meta_key": {
                "label": "meta_key",
                "type": "string",
                "requried": false,
                "description": "Meta key."
            },
            "meta_value": {
                "label": "meta_value",
                "type": "string",
                "requried": false,
                "description": "Meta value."
            },
            "prev_value": {
                "label": "prev_value",
                "type": "string",
                "requried": false,
                "description": "Previous value (default: '')."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            },
            "return": {
                "label": "bool",
                "type": "bool"
            }
        },
        "rank": 1,
        "return_description": "bool"
    },
    "wc_update_product_lookup_tables": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_update_product_lookup_tables",
        "type": "efct",
        "summary": "Populate lookup table data for products.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_update_product_lookup_tables_column": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_update_product_lookup_tables_column",
        "type": "efct",
        "summary": "Populate lookup table column data.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "column": {
                "label": "column",
                "type": "string",
                "requried": false,
                "description": "Column name to set."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_update_product_lookup_tables_is_running": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_update_product_lookup_tables_is_running",
        "type": "efct",
        "summary": "See if the lookup table is being generated already.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            },
            "return": {
                "label": "bool",
                "type": "bool"
            }
        },
        "rank": 1,
        "return_description": "bool"
    },
    "wc_update_product_lookup_tables_rating_count": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_update_product_lookup_tables_rating_count",
        "type": "efct",
        "summary": "Populate rating count lookup table data for products.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "rows": {
                "label": "rows",
                "type": "array",
                "requried": false,
                "description": "Rows of rating counts to update in lookup table."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_update_product_stock": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_update_product_stock",
        "type": "efct",
        "summary": "Update a product's stock amount.Uses queries rather than update_post_meta so we can do this in one query (to avoid stock issues).",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "product": {
                "label": "product",
                "type": "mixed",
                "requried": false,
                "description": "Product ID or product instance."
            },
            "stock_quantity": {
                "label": "stock_quantity",
                "type": "mixed",
                "requried": false,
                "description": "Stock quantity."
            },
            "operation": {
                "label": "operation",
                "type": "string",
                "requried": false,
                "description": "Type of opertion, allows 'set', 'increase' and 'decrease'."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            },
            "return": {
                "label": "mixed",
                "type": "mixed"
            }
        },
        "rank": 1,
        "return_description": "bool|int|null"
    },
    "wc_update_product_stock_status": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_update_product_stock_status",
        "type": "efct",
        "summary": "Update a product's stock status.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "product_id": {
                "label": "product_id",
                "type": "int",
                "requried": false,
                "description": "Product ID."
            },
            "status": {
                "label": "status",
                "type": "int",
                "requried": false,
                "description": "Status."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_update_profile_last_update_time": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_update_profile_last_update_time",
        "type": "efct",
        "summary": "Hooks into the profile_update hook to set the user last updated timestamp.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "user_id": {
                "label": "user_id",
                "type": "int",
                "requried": false,
                "description": "The user that was updated."
            },
            "old": {
                "label": "old",
                "type": "array",
                "requried": false,
                "description": "The profile fields pre-change."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_update_total_sales_counts": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_update_total_sales_counts",
        "type": "efct",
        "summary": "Update total sales amount for each product within a paid order.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "order_id": {
                "label": "order_id",
                "type": "int",
                "requried": false,
                "description": "Order ID."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_update_user_last_active": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_update_user_last_active",
        "type": "efct",
        "summary": "Set the user last active timestamp to now.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "user_id": {
                "label": "user_id",
                "type": "int",
                "requried": false,
                "description": "User ID to mark active."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_user_has_role": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_user_has_role",
        "type": "fct",
        "summary": "Checks if a user has a role.",
        "description": "",
        "inputs": {
            "user": {
                "label": "user",
                "type": "mixed",
                "requried": false,
                "description": "The user."
            },
            "role": {
                "label": "role",
                "type": "string",
                "requried": false,
                "description": "The role."
            }
        },
        "outputs": {
            "return": {
                "label": "bool",
                "type": "bool"
            }
        },
        "rank": 1,
        "return_description": "bool"
    },
    "wc_user_logged_in": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_user_logged_in",
        "type": "efct",
        "summary": "Update logic triggered on login.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "user_login": {
                "label": "user_login",
                "type": "string",
                "requried": false,
                "description": "User login."
            },
            "user": {
                "label": "user",
                "type": "object",
                "requried": false,
                "description": "User."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "wc_user_search_columns": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_user_search_columns",
        "type": "fct",
        "summary": "Add support for searching by display_name.",
        "description": "",
        "inputs": {
            "search_columns": {
                "label": "search_columns",
                "type": "array",
                "requried": false,
                "description": "Column names."
            }
        },
        "outputs": {
            "return": {
                "label": "array",
                "type": "array"
            }
        },
        "rank": 1,
        "return_description": "array"
    },
    "wc_variation_attribute_name": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_variation_attribute_name",
        "type": "fct",
        "summary": "Get the attribute name used when storing values in post meta.",
        "description": "",
        "inputs": {
            "attribute_name": {
                "label": "attribute_name",
                "type": "string",
                "requried": false,
                "description": "Attribute name."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "wc_walk_category_dropdown_tree": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_walk_category_dropdown_tree",
        "type": "fct",
        "summary": "Custom walker for Product Categories.Previously used by wc_product_dropdown_categories, but wp_dropdown_categories has been fixed in core.",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "mixed",
                "type": "mixed"
            }
        },
        "rank": 1,
        "return_description": "mixed"
    },
    "wc_webhook_process_delivery": {
        "since": false,
        "group": "WooCommerce",
        "name": "wc_webhook_process_delivery",
        "type": "efct",
        "summary": "Process webhook delivery.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "webhook": {
                "label": "webhook",
                "type": "mixed",
                "requried": false,
                "description": "Webhook instance."
            },
            "arg": {
                "label": "arg",
                "type": "array",
                "requried": false,
                "description": "Delivery arguments."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "woocommerce_account_add_payment_method": {
        "since": false,
        "group": "WooCommerce",
        "name": "woocommerce_account_add_payment_method",
        "type": "efct",
        "summary": "My Account > Add payment method template.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "woocommerce_account_content": {
        "since": false,
        "group": "WooCommerce",
        "name": "woocommerce_account_content",
        "type": "efct",
        "summary": "My Account content output.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "woocommerce_account_downloads": {
        "since": false,
        "group": "WooCommerce",
        "name": "woocommerce_account_downloads",
        "type": "efct",
        "summary": "My Account > Downloads template.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "woocommerce_account_edit_account": {
        "since": false,
        "group": "WooCommerce",
        "name": "woocommerce_account_edit_account",
        "type": "efct",
        "summary": "My Account > Edit account template.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "woocommerce_account_edit_address": {
        "since": false,
        "group": "WooCommerce",
        "name": "woocommerce_account_edit_address",
        "type": "efct",
        "summary": "My Account > Edit address template.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "type": {
                "label": "type",
                "type": "string",
                "requried": false,
                "description": "Address type."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "woocommerce_account_navigation": {
        "since": false,
        "group": "WooCommerce",
        "name": "woocommerce_account_navigation",
        "type": "efct",
        "summary": "My Account navigation template.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "woocommerce_account_orders": {
        "since": false,
        "group": "WooCommerce",
        "name": "woocommerce_account_orders",
        "type": "efct",
        "summary": "My Account > Orders template.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "current_page": {
                "label": "current_page",
                "type": "int",
                "requried": false,
                "description": "Current page number."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "woocommerce_account_payment_methods": {
        "since": false,
        "group": "WooCommerce",
        "name": "woocommerce_account_payment_methods",
        "type": "efct",
        "summary": "My Account > Downloads template.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "woocommerce_account_view_order": {
        "since": false,
        "group": "WooCommerce",
        "name": "woocommerce_account_view_order",
        "type": "efct",
        "summary": "My Account > View order template.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "order_id": {
                "label": "order_id",
                "type": "int",
                "requried": false,
                "description": "Order ID."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "woocommerce_breadcrumb": {
        "since": false,
        "group": "WooCommerce",
        "name": "woocommerce_breadcrumb",
        "type": "efct",
        "summary": "Output the WooCommerce Breadcrumb.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "args": {
                "label": "args",
                "type": "array",
                "requried": false,
                "description": "Arguments."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "woocommerce_button_proceed_to_checkout": {
        "since": false,
        "group": "WooCommerce",
        "name": "woocommerce_button_proceed_to_checkout",
        "type": "efct",
        "summary": "Output the proceed to checkout button.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "woocommerce_calc_shipping_backwards_compatibility": {
        "since": false,
        "group": "WooCommerce",
        "name": "woocommerce_calc_shipping_backwards_compatibility",
        "type": "fct",
        "summary": "woocommerce_calc_shipping was an option used to determine if shipping was enabled prior to version 2.6.0. This has since been replaced with wc_shipping_enabled() function andthe woocommerce_ship_to_countries setting.",
        "description": "",
        "inputs": {
            "value": {
                "label": "value",
                "type": "mixed",
                "requried": false,
                "description": ""
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "woocommerce_cart_totals": {
        "since": false,
        "group": "WooCommerce",
        "name": "woocommerce_cart_totals",
        "type": "efct",
        "summary": "Output the cart totals.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "woocommerce_catalog_ordering": {
        "since": false,
        "group": "WooCommerce",
        "name": "woocommerce_catalog_ordering",
        "type": "efct",
        "summary": "Output the product sorting options.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "woocommerce_checkout_coupon_form": {
        "since": false,
        "group": "WooCommerce",
        "name": "woocommerce_checkout_coupon_form",
        "type": "efct",
        "summary": "Output the Coupon form for the checkout.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "woocommerce_checkout_login_form": {
        "since": false,
        "group": "WooCommerce",
        "name": "woocommerce_checkout_login_form",
        "type": "efct",
        "summary": "Output the WooCommerce Checkout Login Form.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "woocommerce_checkout_payment": {
        "since": false,
        "group": "WooCommerce",
        "name": "woocommerce_checkout_payment",
        "type": "efct",
        "summary": "Output the Payment Methods on the checkout.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "woocommerce_comments": {
        "since": false,
        "group": "WooCommerce",
        "name": "woocommerce_comments",
        "type": "efct",
        "summary": "Output the Review comments template.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "comment": {
                "label": "comment",
                "type": "mixed",
                "requried": false,
                "description": "Comment object."
            },
            "args": {
                "label": "args",
                "type": "array",
                "requried": false,
                "description": "Arguments."
            },
            "depth": {
                "label": "depth",
                "type": "int",
                "requried": false,
                "description": "Depth."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "woocommerce_content": {
        "since": false,
        "group": "WooCommerce",
        "name": "woocommerce_content",
        "type": "efct",
        "summary": "Output WooCommerce content.This function is only used in the optional 'woocommerce.php' template.which people can add to their themes to add basic woocommerce support.without hooks or modifying core templates.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "woocommerce_cross_sell_display": {
        "since": false,
        "group": "WooCommerce",
        "name": "woocommerce_cross_sell_display",
        "type": "efct",
        "summary": "Output the cart cross-sells.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "limit": {
                "label": "limit",
                "type": "int",
                "requried": false,
                "description": "(default: 2)."
            },
            "columns": {
                "label": "columns",
                "type": "int",
                "requried": false,
                "description": "(default: 2)."
            },
            "orderby": {
                "label": "orderby",
                "type": "string",
                "requried": false,
                "description": "(default: 'rand')."
            },
            "order": {
                "label": "order",
                "type": "string",
                "requried": false,
                "description": "(default: 'desc')."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "woocommerce_default_product_tabs": {
        "since": false,
        "group": "WooCommerce",
        "name": "woocommerce_default_product_tabs",
        "type": "fct",
        "summary": "Add default product tabs to product pages.",
        "description": "",
        "inputs": {
            "tabs": {
                "label": "tabs",
                "type": "array",
                "requried": false,
                "description": "Array of tabs."
            }
        },
        "outputs": {
            "return": {
                "label": "array",
                "type": "array"
            }
        },
        "rank": 1,
        "return_description": "array"
    },
    "woocommerce_demo_store": {
        "since": false,
        "group": "WooCommerce",
        "name": "woocommerce_demo_store",
        "type": "efct",
        "summary": "Adds a demo store banner to the site if enabled.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "woocommerce_external_add_to_cart": {
        "since": false,
        "group": "WooCommerce",
        "name": "woocommerce_external_add_to_cart",
        "type": "efct",
        "summary": "Output the external product add to cart area.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "woocommerce_form_field": {
        "since": false,
        "group": "WooCommerce",
        "name": "woocommerce_form_field",
        "type": "fct",
        "summary": "Outputs a checkout\/address form field.",
        "description": "",
        "inputs": {
            "key": {
                "label": "key",
                "type": "string",
                "requried": false,
                "description": "Key."
            },
            "args": {
                "label": "args",
                "type": "mixed",
                "requried": false,
                "description": "Arguments."
            },
            "value": {
                "label": "value",
                "type": "string",
                "requried": false,
                "description": "(default: null)."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "woocommerce_get_loop_display_mode": {
        "since": false,
        "group": "WooCommerce",
        "name": "woocommerce_get_loop_display_mode",
        "type": "fct",
        "summary": "See what is going to display in the loop.",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "Either products, subcategories, or both, based on current page."
    },
    "woocommerce_get_product_subcategories": {
        "since": false,
        "group": "WooCommerce",
        "name": "woocommerce_get_product_subcategories",
        "type": "fct",
        "summary": "Get (and cache) product subcategories.",
        "description": "",
        "inputs": {
            "parent_id": {
                "label": "parent_id",
                "type": "int",
                "requried": false,
                "description": "Get subcategories of this ID."
            }
        },
        "outputs": {
            "return": {
                "label": "array",
                "type": "array"
            }
        },
        "rank": 1,
        "return_description": "array"
    },
    "woocommerce_get_product_thumbnail": {
        "since": false,
        "group": "WooCommerce",
        "name": "woocommerce_get_product_thumbnail",
        "type": "fct",
        "summary": "Get the product thumbnail, or the placeholder if not set.",
        "description": "",
        "inputs": {
            "size": {
                "label": "size",
                "type": "string",
                "requried": false,
                "description": "(default: 'woocommerce_thumbnail')."
            },
            "deprecated1": {
                "label": "deprecated1",
                "type": "int",
                "requried": false,
                "description": "Deprecated since WooCommerce 2.0 (default: 0)."
            },
            "deprecated2": {
                "label": "deprecated2",
                "type": "int",
                "requried": false,
                "description": "Deprecated since WooCommerce 2.0 (default: 0)."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "woocommerce_get_sidebar": {
        "since": false,
        "group": "WooCommerce",
        "name": "woocommerce_get_sidebar",
        "type": "efct",
        "summary": "Get the shop sidebar template.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "woocommerce_grouped_add_to_cart": {
        "since": false,
        "group": "WooCommerce",
        "name": "woocommerce_grouped_add_to_cart",
        "type": "efct",
        "summary": "Output the grouped product add to cart area.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "woocommerce_legacy_paypal_ipn": {
        "since": false,
        "group": "WooCommerce",
        "name": "woocommerce_legacy_paypal_ipn",
        "type": "efct",
        "summary": "Handle IPN requests for the legacy paypal gateway by calling gateways manually if needed.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "woocommerce_login_form": {
        "since": false,
        "group": "WooCommerce",
        "name": "woocommerce_login_form",
        "type": "efct",
        "summary": "Output the WooCommerce Login Form.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "args": {
                "label": "args",
                "type": "array",
                "requried": false,
                "description": "Arguments."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "woocommerce_maybe_show_product_subcategories": {
        "since": false,
        "group": "WooCommerce",
        "name": "woocommerce_maybe_show_product_subcategories",
        "type": "fct",
        "summary": "Maybe display categories before, or instead of, a product loop.",
        "description": "",
        "inputs": {
            "loop_html": {
                "label": "loop_html",
                "type": "string",
                "requried": false,
                "description": "HTML."
            }
        },
        "outputs": {
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "woocommerce_mini_cart": {
        "since": false,
        "group": "WooCommerce",
        "name": "woocommerce_mini_cart",
        "type": "efct",
        "summary": "Output the Mini-cart - used by cart widget.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "args": {
                "label": "args",
                "type": "array",
                "requried": false,
                "description": "Arguments."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "woocommerce_order_again_button": {
        "since": false,
        "group": "WooCommerce",
        "name": "woocommerce_order_again_button",
        "type": "efct",
        "summary": "Display an 'order again' button on the view order page.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "order": {
                "label": "order",
                "type": "object",
                "requried": false,
                "description": "Order."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "woocommerce_order_details_table": {
        "since": false,
        "group": "WooCommerce",
        "name": "woocommerce_order_details_table",
        "type": "efct",
        "summary": "Displays order details in a table.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "order_id": {
                "label": "order_id",
                "type": "mixed",
                "requried": false,
                "description": "Order ID."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "woocommerce_order_downloads_table": {
        "since": false,
        "group": "WooCommerce",
        "name": "woocommerce_order_downloads_table",
        "type": "efct",
        "summary": "Displays order downloads in a table.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "downloads": {
                "label": "downloads",
                "type": "array",
                "requried": false,
                "description": "Downloads."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "woocommerce_order_review": {
        "since": false,
        "group": "WooCommerce",
        "name": "woocommerce_order_review",
        "type": "efct",
        "summary": "Output the Order review table for the checkout.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "deprecated": {
                "label": "deprecated",
                "type": "bool",
                "requried": false,
                "description": "Deprecated param."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "woocommerce_output_all_notices": {
        "since": false,
        "group": "WooCommerce",
        "name": "woocommerce_output_all_notices",
        "type": "efct",
        "summary": "Outputs all queued notices on WC pages.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "woocommerce_output_auth_footer": {
        "since": false,
        "group": "WooCommerce",
        "name": "woocommerce_output_auth_footer",
        "type": "efct",
        "summary": "Output the Auth footer.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "woocommerce_output_auth_header": {
        "since": false,
        "group": "WooCommerce",
        "name": "woocommerce_output_auth_header",
        "type": "efct",
        "summary": "Output the Auth header.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "woocommerce_output_content_wrapper": {
        "since": false,
        "group": "WooCommerce",
        "name": "woocommerce_output_content_wrapper",
        "type": "efct",
        "summary": "Output the start of the page wrapper.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "woocommerce_output_content_wrapper_end": {
        "since": false,
        "group": "WooCommerce",
        "name": "woocommerce_output_content_wrapper_end",
        "type": "efct",
        "summary": "Output the end of the page wrapper.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "woocommerce_output_product_categories": {
        "since": false,
        "group": "WooCommerce",
        "name": "woocommerce_output_product_categories",
        "type": "efct",
        "summary": "Display product sub categories as thumbnails.This is a replacement for woocommerce_product_subcategories which also does some logicbased on the loop. This function however just outputs when called.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "args": {
                "label": "args",
                "type": "array",
                "requried": false,
                "description": "Arguments."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            },
            "return": {
                "label": "bool",
                "type": "bool"
            }
        },
        "rank": 1,
        "return_description": "boolean"
    },
    "woocommerce_output_product_data_tabs": {
        "since": false,
        "group": "WooCommerce",
        "name": "woocommerce_output_product_data_tabs",
        "type": "efct",
        "summary": "Output the product tabs.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "woocommerce_output_related_products": {
        "since": false,
        "group": "WooCommerce",
        "name": "woocommerce_output_related_products",
        "type": "efct",
        "summary": "Output the related products.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "woocommerce_page_title": {
        "since": false,
        "group": "WooCommerce",
        "name": "woocommerce_page_title",
        "type": "efct",
        "summary": "Page Title function.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "echo": {
                "label": "echo",
                "type": "bool",
                "requried": false,
                "description": "Should echo title."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            },
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "woocommerce_pagination": {
        "since": false,
        "group": "WooCommerce",
        "name": "woocommerce_pagination",
        "type": "efct",
        "summary": "Output the pagination.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "woocommerce_photoswipe": {
        "since": false,
        "group": "WooCommerce",
        "name": "woocommerce_photoswipe",
        "type": "efct",
        "summary": "Get the shop sidebar template.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "woocommerce_product_additional_information_tab": {
        "since": false,
        "group": "WooCommerce",
        "name": "woocommerce_product_additional_information_tab",
        "type": "efct",
        "summary": "Output the attributes tab content.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "woocommerce_product_archive_description": {
        "since": false,
        "group": "WooCommerce",
        "name": "woocommerce_product_archive_description",
        "type": "efct",
        "summary": "Show a shop page description on product archives.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "woocommerce_product_description_tab": {
        "since": false,
        "group": "WooCommerce",
        "name": "woocommerce_product_description_tab",
        "type": "efct",
        "summary": "Output the description tab content.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "woocommerce_product_loop": {
        "since": false,
        "group": "WooCommerce",
        "name": "woocommerce_product_loop",
        "type": "fct",
        "summary": "Should the WooCommerce loop be displayed?This will return true if we have posts (products) or if we have subcats to display.",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "bool",
                "type": "bool"
            }
        },
        "rank": 1,
        "return_description": "bool"
    },
    "woocommerce_product_loop_end": {
        "since": false,
        "group": "WooCommerce",
        "name": "woocommerce_product_loop_end",
        "type": "efct",
        "summary": "Output the end of a product loop. By default this is a UL.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "echo": {
                "label": "echo",
                "type": "bool",
                "requried": false,
                "description": "Should echo?."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            },
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "woocommerce_product_loop_start": {
        "since": false,
        "group": "WooCommerce",
        "name": "woocommerce_product_loop_start",
        "type": "efct",
        "summary": "Output the start of a product loop. By default this is a UL.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "echo": {
                "label": "echo",
                "type": "bool",
                "requried": false,
                "description": "Should echo?."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            },
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "woocommerce_products_will_display": {
        "since": false,
        "group": "WooCommerce",
        "name": "woocommerce_products_will_display",
        "type": "fct",
        "summary": "Check if we will be showing products or not (and not sub-categories only).",
        "description": "",
        "inputs": {},
        "outputs": {
            "return": {
                "label": "bool",
                "type": "bool"
            }
        },
        "rank": 1,
        "return_description": "bool"
    },
    "woocommerce_quantity_input": {
        "since": false,
        "group": "WooCommerce",
        "name": "woocommerce_quantity_input",
        "type": "efct",
        "summary": "Output the quantity input for add to cart forms.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "args": {
                "label": "args",
                "type": "array",
                "requried": false,
                "description": "Args for the input."
            },
            "product": {
                "label": "product",
                "type": "mixed",
                "requried": false,
                "description": "Product."
            },
            "echo": {
                "label": "echo",
                "type": "bool",
                "requried": false,
                "description": "Whether to return or echo|string."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            },
            "return": {
                "label": "string",
                "type": "string"
            }
        },
        "rank": 1,
        "return_description": "string"
    },
    "woocommerce_register_shipping_method": {
        "since": false,
        "group": "WooCommerce",
        "name": "woocommerce_register_shipping_method",
        "type": "efct",
        "summary": "Register a shipping method.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "shipping_method": {
                "label": "shipping_method",
                "type": "mixed",
                "requried": false,
                "description": "class name (string) or a class object."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "woocommerce_related_products": {
        "since": false,
        "group": "WooCommerce",
        "name": "woocommerce_related_products",
        "type": "efct",
        "summary": "Output the related products.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "args": {
                "label": "args",
                "type": "array",
                "requried": false,
                "description": "Provided arguments."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "woocommerce_result_count": {
        "since": false,
        "group": "WooCommerce",
        "name": "woocommerce_result_count",
        "type": "efct",
        "summary": "Output the result count text (Showing x - x of x results).",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "woocommerce_review_display_comment_text": {
        "since": false,
        "group": "WooCommerce",
        "name": "woocommerce_review_display_comment_text",
        "type": "efct",
        "summary": "Display the review content.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "woocommerce_review_display_gravatar": {
        "since": false,
        "group": "WooCommerce",
        "name": "woocommerce_review_display_gravatar",
        "type": "efct",
        "summary": "Display the review authors gravatar",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "comment": {
                "label": "comment",
                "type": "array",
                "requried": false,
                "description": "WP_Comment."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "woocommerce_review_display_meta": {
        "since": false,
        "group": "WooCommerce",
        "name": "woocommerce_review_display_meta",
        "type": "efct",
        "summary": "Display the review authors meta (name, verified owner, review date)",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "woocommerce_review_display_rating": {
        "since": false,
        "group": "WooCommerce",
        "name": "woocommerce_review_display_rating",
        "type": "efct",
        "summary": "Display the reviewers star rating",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "woocommerce_shipping_calculator": {
        "since": false,
        "group": "WooCommerce",
        "name": "woocommerce_shipping_calculator",
        "type": "efct",
        "summary": "Output the cart shipping calculator.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "button_text": {
                "label": "button_text",
                "type": "string",
                "requried": false,
                "description": "Text for the shipping calculation toggle."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "woocommerce_show_product_images": {
        "since": false,
        "group": "WooCommerce",
        "name": "woocommerce_show_product_images",
        "type": "efct",
        "summary": "Output the product image before the single product summary.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "woocommerce_show_product_loop_sale_flash": {
        "since": false,
        "group": "WooCommerce",
        "name": "woocommerce_show_product_loop_sale_flash",
        "type": "efct",
        "summary": "Get the sale flash for the loop.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "woocommerce_show_product_sale_flash": {
        "since": false,
        "group": "WooCommerce",
        "name": "woocommerce_show_product_sale_flash",
        "type": "efct",
        "summary": "Output the product sale flash.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "woocommerce_show_product_thumbnails": {
        "since": false,
        "group": "WooCommerce",
        "name": "woocommerce_show_product_thumbnails",
        "type": "efct",
        "summary": "Output the product thumbnails.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "woocommerce_simple_add_to_cart": {
        "since": false,
        "group": "WooCommerce",
        "name": "woocommerce_simple_add_to_cart",
        "type": "efct",
        "summary": "Output the simple product add to cart area.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "woocommerce_single_variation": {
        "since": false,
        "group": "WooCommerce",
        "name": "woocommerce_single_variation",
        "type": "efct",
        "summary": "Output placeholders for the single variation.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "woocommerce_single_variation_add_to_cart_button": {
        "since": false,
        "group": "WooCommerce",
        "name": "woocommerce_single_variation_add_to_cart_button",
        "type": "efct",
        "summary": "Output the add to cart button for variations.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "woocommerce_sort_product_tabs": {
        "since": false,
        "group": "WooCommerce",
        "name": "woocommerce_sort_product_tabs",
        "type": "fct",
        "summary": "Sort tabs by priority.",
        "description": "",
        "inputs": {
            "tabs": {
                "label": "tabs",
                "type": "array",
                "requried": false,
                "description": "Array of tabs."
            }
        },
        "outputs": {
            "return": {
                "label": "array",
                "type": "array"
            }
        },
        "rank": 1,
        "return_description": "array"
    },
    "woocommerce_subcategory_thumbnail": {
        "since": false,
        "group": "WooCommerce",
        "name": "woocommerce_subcategory_thumbnail",
        "type": "efct",
        "summary": "Show subcategory thumbnails.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "category": {
                "label": "category",
                "type": "mixed",
                "requried": false,
                "description": "Category."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "woocommerce_taxonomy_archive_description": {
        "since": false,
        "group": "WooCommerce",
        "name": "woocommerce_taxonomy_archive_description",
        "type": "efct",
        "summary": "Show an archive description on taxonomy archives.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "woocommerce_template_loop_add_to_cart": {
        "since": false,
        "group": "WooCommerce",
        "name": "woocommerce_template_loop_add_to_cart",
        "type": "efct",
        "summary": "Get the add to cart template for the loop.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "args": {
                "label": "args",
                "type": "array",
                "requried": false,
                "description": "Arguments."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "woocommerce_template_loop_category_link_close": {
        "since": false,
        "group": "WooCommerce",
        "name": "woocommerce_template_loop_category_link_close",
        "type": "efct",
        "summary": "Insert the closing anchor tag for categories in the loop.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "woocommerce_template_loop_category_link_open": {
        "since": false,
        "group": "WooCommerce",
        "name": "woocommerce_template_loop_category_link_open",
        "type": "efct",
        "summary": "Insert the opening anchor tag for categories in the loop.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "category": {
                "label": "category",
                "type": "mixed",
                "requried": false,
                "description": "Category ID, Object or String."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "woocommerce_template_loop_category_title": {
        "since": false,
        "group": "WooCommerce",
        "name": "woocommerce_template_loop_category_title",
        "type": "efct",
        "summary": "Show the subcategory title in the product loop.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "category": {
                "label": "category",
                "type": "object",
                "requried": false,
                "description": "Category object."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "woocommerce_template_loop_price": {
        "since": false,
        "group": "WooCommerce",
        "name": "woocommerce_template_loop_price",
        "type": "efct",
        "summary": "Get the product price for the loop.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "woocommerce_template_loop_product_link_close": {
        "since": false,
        "group": "WooCommerce",
        "name": "woocommerce_template_loop_product_link_close",
        "type": "efct",
        "summary": "Insert the opening anchor tag for products in the loop.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "woocommerce_template_loop_product_link_open": {
        "since": false,
        "group": "WooCommerce",
        "name": "woocommerce_template_loop_product_link_open",
        "type": "efct",
        "summary": "Insert the opening anchor tag for products in the loop.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "woocommerce_template_loop_product_thumbnail": {
        "since": false,
        "group": "WooCommerce",
        "name": "woocommerce_template_loop_product_thumbnail",
        "type": "efct",
        "summary": "Get the product thumbnail for the loop.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "woocommerce_template_loop_product_title": {
        "since": false,
        "group": "WooCommerce",
        "name": "woocommerce_template_loop_product_title",
        "type": "efct",
        "summary": "Show the product title in the product loop. By default this is an H2.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "woocommerce_template_loop_rating": {
        "since": false,
        "group": "WooCommerce",
        "name": "woocommerce_template_loop_rating",
        "type": "efct",
        "summary": "Display the average rating in the loop.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "woocommerce_template_single_add_to_cart": {
        "since": false,
        "group": "WooCommerce",
        "name": "woocommerce_template_single_add_to_cart",
        "type": "efct",
        "summary": "Trigger the single product add to cart action.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "woocommerce_template_single_excerpt": {
        "since": false,
        "group": "WooCommerce",
        "name": "woocommerce_template_single_excerpt",
        "type": "efct",
        "summary": "Output the product short description (excerpt).",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "woocommerce_template_single_meta": {
        "since": false,
        "group": "WooCommerce",
        "name": "woocommerce_template_single_meta",
        "type": "efct",
        "summary": "Output the product meta.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "woocommerce_template_single_price": {
        "since": false,
        "group": "WooCommerce",
        "name": "woocommerce_template_single_price",
        "type": "efct",
        "summary": "Output the product price.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "woocommerce_template_single_rating": {
        "since": false,
        "group": "WooCommerce",
        "name": "woocommerce_template_single_rating",
        "type": "efct",
        "summary": "Output the product rating.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "woocommerce_template_single_sharing": {
        "since": false,
        "group": "WooCommerce",
        "name": "woocommerce_template_single_sharing",
        "type": "efct",
        "summary": "Output the product sharing.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "woocommerce_template_single_title": {
        "since": false,
        "group": "WooCommerce",
        "name": "woocommerce_template_single_title",
        "type": "efct",
        "summary": "Output the product title.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "woocommerce_upsell_display": {
        "since": false,
        "group": "WooCommerce",
        "name": "woocommerce_upsell_display",
        "type": "efct",
        "summary": "Output product up sells.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            },
            "limit": {
                "label": "limit",
                "type": "int",
                "requried": false,
                "description": "(default: -1)."
            },
            "columns": {
                "label": "columns",
                "type": "int",
                "requried": false,
                "description": "(default: 4)."
            },
            "orderby": {
                "label": "orderby",
                "type": "string",
                "requried": false,
                "description": "Supported values - rand, title, ID, date, modified, menu_order, price."
            },
            "order": {
                "label": "order",
                "type": "string",
                "requried": false,
                "description": "Sort direction."
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "woocommerce_variable_add_to_cart": {
        "since": false,
        "group": "WooCommerce",
        "name": "woocommerce_variable_add_to_cart",
        "type": "efct",
        "summary": "Output the variable product add to cart area.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "woocommerce_widget_shopping_cart_button_view_cart": {
        "since": false,
        "group": "WooCommerce",
        "name": "woocommerce_widget_shopping_cart_button_view_cart",
        "type": "efct",
        "summary": "Output the view cart button.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    },
    "woocommerce_widget_shopping_cart_proceed_to_checkout": {
        "since": false,
        "group": "WooCommerce",
        "name": "woocommerce_widget_shopping_cart_proceed_to_checkout",
        "type": "efct",
        "summary": "Output the proceed to checkout button.",
        "description": "",
        "inputs": {
            "ifct": {
                "type": "efct",
                "required": false
            }
        },
        "outputs": {
            "ofct": {
                "type": "efct",
                "required": false
            }
        },
        "rank": 1
    }
}